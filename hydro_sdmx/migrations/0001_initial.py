# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2017-10-17 09:54
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import hydro_sdmx.models.registration
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Annotation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_code', models.CharField(blank=True, max_length=63, verbose_name='ID')),
                ('annotation_title', models.CharField(blank=True, max_length=127, verbose_name='title')),
                ('annotation_type', models.CharField(blank=True, max_length=63, verbose_name='type')),
                ('annotation_URL', models.URLField(blank=True, null=True, verbose_name='URL')),
                ('annotation_text', models.TextField(blank=True, verbose_name='annotation')),
            ],
        ),
        migrations.CreateModel(
            name='AttachmentConstraint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uri', models.URLField(blank=True, null=True, verbose_name='URI')),
                ('description', models.TextField(blank=True)),
                ('version', models.CharField(default='1.0', max_length=15, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*', 32), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')])),
                ('valid_from', models.DateTimeField(blank=True, null=True)),
                ('valid_to', models.DateTimeField(blank=True, null=True)),
                ('id_code', models.CharField(max_length=63, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='ID')),
                ('is_final', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uri', models.URLField(blank=True, null=True, verbose_name='URI')),
                ('id_code', models.CharField(blank=True, max_length=63, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='ID')),
                ('text_type', models.CharField(blank=True, choices=[('StandardTimePeriod', 'StandardTimePeriod'), ('Numeric', 'Numeric'), ('Decimal', 'Decimal'), ('Count', 'Count'), ('Incremental', 'Incremental'), ('GregorianDay', 'GregorianDay'), ('ReportingTrimester', 'ReportingTrimester'), ('ReportingTimePeriod', 'ReportingTimePeriod'), ('ReportingQuarter', 'ReportingQuarter'), ('ReportingMonth', 'ReportingMonth'), ('DateTime', 'DateTime'), ('TimeRange', 'TimeRange'), ('MonthDay', 'MonthDay'), ('DataSetReference', 'DataSetReference'), ('IdentifiableReference', 'IdentifiableReference'), ('ReportingSemester', 'ReportingSemester'), ('ReportingWeek', 'ReportingWeek'), ('Month', 'Month'), ('XHTML', 'XHTML'), ('Float', 'Float'), ('Short', 'Short'), ('BigInteger', 'BigInteger'), ('AttachmentConstraintReference', 'AttachmentConstraintReference'), ('Day', 'Day'), ('Alpha', 'Alpha'), ('Long', 'Long'), ('ReportingDay', 'ReportingDay'), ('Time', 'Time'), ('ExclusiveValueRange', 'ExclusiveValueRange'), ('GregorianTimePeriod', 'GregorianTimePeriod'), ('AlphaNumeric', 'AlphaNumeric'), ('URI', 'URI'), ('GregorianYear', 'GregorianYear'), ('GregorianYearMonth', 'GregorianYearMonth'), (None, 'None'), ('Double', 'Double'), ('Integer', 'Integer'), ('Boolean', 'Boolean'), ('InclusiveValueRange', 'InclusiveValueRange'), ('ObservationalTimePeriod', 'ObservationalTimePeriod'), ('BasicTimePeriod', 'BasicTimePeriod'), ('ReportingYear', 'ReportingYear'), ('Duration', 'Duration'), ('KeyValues', 'KeyValues'), ('String', 'String')], max_length=63)),
                ('is_sequence', models.NullBooleanField()),
                ('interval', models.DecimalField(blank=True, decimal_places=10, max_digits=19, null=True)),
                ('start_value', models.DecimalField(blank=True, decimal_places=10, max_digits=19, null=True)),
                ('end_value', models.DecimalField(blank=True, decimal_places=10, max_digits=19, null=True)),
                ('time_interval', models.DurationField(blank=True, null=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('min_length', models.PositiveIntegerField(blank=True, null=True)),
                ('max_length', models.PositiveIntegerField(blank=True, null=True)),
                ('min_value', models.DecimalField(blank=True, decimal_places=10, max_digits=19, null=True)),
                ('max_value', models.DecimalField(blank=True, decimal_places=10, max_digits=19, null=True)),
                ('decimals', models.PositiveIntegerField(blank=True, null=True)),
                ('pattern', models.TextField(blank=True, null=True)),
                ('is_multiLingual', models.NullBooleanField()),
                ('is_concept_role', models.BooleanField(default=True)),
                ('required', models.BooleanField(default=True)),
                ('attached2measure', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Code',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.CharField(max_length=255, unique=True)),
                ('depth', models.PositiveIntegerField()),
                ('numchild', models.PositiveIntegerField(default=0)),
                ('uri', models.URLField(blank=True, null=True, verbose_name='URI')),
                ('id_code', models.CharField(blank=True, max_length=63, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255)),
                ('description', models.TextField(blank=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Code')),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Codelist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uri', models.URLField(blank=True, null=True, verbose_name='URI')),
                ('description', models.TextField(blank=True)),
                ('version', models.CharField(default='1.0', max_length=15, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*', 32), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')])),
                ('valid_from', models.DateTimeField(blank=True, null=True)),
                ('valid_to', models.DateTimeField(blank=True, null=True)),
                ('is_final', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
                ('id_code', models.CharField(max_length=63, validators=[django.core.validators.RegexValidator(re.compile('[A-Za-z][A-Za-z0-9_\\-]*', 32), 'Enter a value of type NCNameIDType that has pattern "([A-Za-z][A-Za-z0-9_\\-]*)"', 'invalid_pattern')], verbose_name='id')),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Concept',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.CharField(max_length=255, unique=True)),
                ('depth', models.PositiveIntegerField()),
                ('numchild', models.PositiveIntegerField(default=0)),
                ('uri', models.URLField(blank=True, null=True, verbose_name='URI')),
                ('name', models.CharField(blank=True, max_length=255)),
                ('description', models.TextField(blank=True)),
                ('text_type', models.CharField(blank=True, choices=[('StandardTimePeriod', 'StandardTimePeriod'), ('Numeric', 'Numeric'), ('Decimal', 'Decimal'), ('Count', 'Count'), ('Incremental', 'Incremental'), ('GregorianDay', 'GregorianDay'), ('ReportingTrimester', 'ReportingTrimester'), ('ReportingTimePeriod', 'ReportingTimePeriod'), ('ReportingQuarter', 'ReportingQuarter'), ('ReportingMonth', 'ReportingMonth'), ('DateTime', 'DateTime'), ('TimeRange', 'TimeRange'), ('MonthDay', 'MonthDay'), ('DataSetReference', 'DataSetReference'), ('IdentifiableReference', 'IdentifiableReference'), ('ReportingSemester', 'ReportingSemester'), ('ReportingWeek', 'ReportingWeek'), ('Month', 'Month'), ('XHTML', 'XHTML'), ('Float', 'Float'), ('Short', 'Short'), ('BigInteger', 'BigInteger'), ('AttachmentConstraintReference', 'AttachmentConstraintReference'), ('Day', 'Day'), ('Alpha', 'Alpha'), ('Long', 'Long'), ('ReportingDay', 'ReportingDay'), ('Time', 'Time'), ('ExclusiveValueRange', 'ExclusiveValueRange'), ('GregorianTimePeriod', 'GregorianTimePeriod'), ('AlphaNumeric', 'AlphaNumeric'), ('URI', 'URI'), ('GregorianYear', 'GregorianYear'), ('GregorianYearMonth', 'GregorianYearMonth'), (None, 'None'), ('Double', 'Double'), ('Integer', 'Integer'), ('Boolean', 'Boolean'), ('InclusiveValueRange', 'InclusiveValueRange'), ('ObservationalTimePeriod', 'ObservationalTimePeriod'), ('BasicTimePeriod', 'BasicTimePeriod'), ('ReportingYear', 'ReportingYear'), ('Duration', 'Duration'), ('KeyValues', 'KeyValues'), ('String', 'String')], max_length=63)),
                ('is_sequence', models.NullBooleanField()),
                ('interval', models.DecimalField(blank=True, decimal_places=10, max_digits=19, null=True)),
                ('start_value', models.DecimalField(blank=True, decimal_places=10, max_digits=19, null=True)),
                ('end_value', models.DecimalField(blank=True, decimal_places=10, max_digits=19, null=True)),
                ('time_interval', models.DurationField(blank=True, null=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('min_length', models.PositiveIntegerField(blank=True, null=True)),
                ('max_length', models.PositiveIntegerField(blank=True, null=True)),
                ('min_value', models.DecimalField(blank=True, decimal_places=10, max_digits=19, null=True)),
                ('max_value', models.DecimalField(blank=True, decimal_places=10, max_digits=19, null=True)),
                ('decimals', models.PositiveIntegerField(blank=True, null=True)),
                ('pattern', models.TextField(blank=True, null=True)),
                ('is_multiLingual', models.NullBooleanField()),
                ('id_code', models.CharField(max_length=63, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id')),
                ('enumeration', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='hydro_sdmx.Codelist')),
                ('iso_concept_reference', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='hydro_sdmx.Concept')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Concept')),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ConceptScheme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uri', models.URLField(blank=True, null=True, verbose_name='URI')),
                ('description', models.TextField(blank=True)),
                ('version', models.CharField(default='1.0', max_length=15, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*', 32), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')])),
                ('valid_from', models.DateTimeField(blank=True, null=True)),
                ('valid_to', models.DateTimeField(blank=True, null=True)),
                ('is_final', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
                ('id_code', models.CharField(max_length=63, validators=[django.core.validators.RegexValidator(re.compile('[A-Za-z][A-Za-z0-9_\\-]*', 32), 'Enter a value of type NCNameIDType that has pattern "([A-Za-z][A-Za-z0-9_\\-]*)"', 'invalid_pattern')], verbose_name='id')),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ConstraintDataKey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.CharField(blank=True, max_length=31)),
                ('role', models.CharField(blank=True, max_length=31)),
            ],
        ),
        migrations.CreateModel(
            name='Dataflow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uri', models.URLField(blank=True, null=True, verbose_name='URI')),
                ('description', models.TextField(blank=True)),
                ('version', models.CharField(default='1.0', max_length=15, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*', 32), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')])),
                ('valid_from', models.DateTimeField(blank=True, null=True)),
                ('valid_to', models.DateTimeField(blank=True, null=True)),
                ('id_code', models.CharField(max_length=63, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='ID')),
                ('is_final', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DataKeySet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attachment_constraint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_key_sets', to='hydro_sdmx.AttachmentConstraint')),
            ],
        ),
        migrations.CreateModel(
            name='DataProvisionAgreement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uri', models.URLField(blank=True, null=True, verbose_name='URI')),
                ('description', models.TextField(blank=True)),
                ('version', models.CharField(default='1.0', max_length=15, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*', 32), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')])),
                ('valid_from', models.DateTimeField(blank=True, null=True)),
                ('valid_to', models.DateTimeField(blank=True, null=True)),
                ('id_code', models.CharField(max_length=63, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='ID')),
                ('is_final', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DataStructure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uri', models.URLField(blank=True, null=True, verbose_name='URI')),
                ('description', models.TextField(blank=True)),
                ('version', models.CharField(default='1.0', max_length=15, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*', 32), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')])),
                ('valid_from', models.DateTimeField(blank=True, null=True)),
                ('valid_to', models.DateTimeField(blank=True, null=True)),
                ('id_code', models.CharField(max_length=63, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='ID')),
                ('is_final', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Dimension',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uri', models.URLField(blank=True, null=True, verbose_name='URI')),
                ('id_code', models.CharField(blank=True, max_length=63, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='ID')),
                ('text_type', models.CharField(blank=True, choices=[('StandardTimePeriod', 'StandardTimePeriod'), ('Numeric', 'Numeric'), ('Decimal', 'Decimal'), ('Count', 'Count'), ('Incremental', 'Incremental'), ('GregorianDay', 'GregorianDay'), ('ReportingTrimester', 'ReportingTrimester'), ('ReportingTimePeriod', 'ReportingTimePeriod'), ('ReportingQuarter', 'ReportingQuarter'), ('ReportingMonth', 'ReportingMonth'), ('DateTime', 'DateTime'), ('TimeRange', 'TimeRange'), ('MonthDay', 'MonthDay'), ('DataSetReference', 'DataSetReference'), ('IdentifiableReference', 'IdentifiableReference'), ('ReportingSemester', 'ReportingSemester'), ('ReportingWeek', 'ReportingWeek'), ('Month', 'Month'), ('XHTML', 'XHTML'), ('Float', 'Float'), ('Short', 'Short'), ('BigInteger', 'BigInteger'), ('AttachmentConstraintReference', 'AttachmentConstraintReference'), ('Day', 'Day'), ('Alpha', 'Alpha'), ('Long', 'Long'), ('ReportingDay', 'ReportingDay'), ('Time', 'Time'), ('ExclusiveValueRange', 'ExclusiveValueRange'), ('GregorianTimePeriod', 'GregorianTimePeriod'), ('AlphaNumeric', 'AlphaNumeric'), ('URI', 'URI'), ('GregorianYear', 'GregorianYear'), ('GregorianYearMonth', 'GregorianYearMonth'), (None, 'None'), ('Double', 'Double'), ('Integer', 'Integer'), ('Boolean', 'Boolean'), ('InclusiveValueRange', 'InclusiveValueRange'), ('ObservationalTimePeriod', 'ObservationalTimePeriod'), ('BasicTimePeriod', 'BasicTimePeriod'), ('ReportingYear', 'ReportingYear'), ('Duration', 'Duration'), ('KeyValues', 'KeyValues'), ('String', 'String')], max_length=63)),
                ('is_sequence', models.NullBooleanField()),
                ('interval', models.DecimalField(blank=True, decimal_places=10, max_digits=19, null=True)),
                ('start_value', models.DecimalField(blank=True, decimal_places=10, max_digits=19, null=True)),
                ('end_value', models.DecimalField(blank=True, decimal_places=10, max_digits=19, null=True)),
                ('time_interval', models.DurationField(blank=True, null=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('min_length', models.PositiveIntegerField(blank=True, null=True)),
                ('max_length', models.PositiveIntegerField(blank=True, null=True)),
                ('min_value', models.DecimalField(blank=True, decimal_places=10, max_digits=19, null=True)),
                ('max_value', models.DecimalField(blank=True, decimal_places=10, max_digits=19, null=True)),
                ('decimals', models.PositiveIntegerField(blank=True, null=True)),
                ('pattern', models.TextField(blank=True, null=True)),
                ('is_multiLingual', models.NullBooleanField()),
                ('dimension_type', models.CharField(choices=[('dimension', 'Dimension'), ('time', 'TimeDimension'), ('measure', 'MeasureDimension')], max_length=15)),
                ('position', models.PositiveIntegerField(blank=True, null=True)),
                ('is_concept_role', models.BooleanField(default=True)),
                ('concept', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='hydro_sdmx.Concept')),
                ('enumeration', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='hydro_sdmx.Codelist')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Email',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.EmailField(max_length=254, verbose_name='email address')),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Contact')),
            ],
            options={
                'verbose_name_plural': 'email addresses',
            },
        ),
        migrations.CreateModel(
            name='Fax',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=31, verbose_name='FAX')),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Contact')),
            ],
            options={
                'verbose_name_plural': 'Faxes',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_code', models.CharField(max_length=63, unique=True, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='KeyValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dimension', models.CharField(max_length=255)),
                ('string_value', models.CharField(blank=True, max_length=255)),
                ('code_value', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Code')),
                ('constraint_data_key', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='key_values', to='hydro_sdmx.ConstraintDataKey')),
            ],
        ),
        migrations.CreateModel(
            name='Measure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uri', models.URLField(blank=True, null=True, verbose_name='URI')),
                ('id_code', models.CharField(blank=True, max_length=63, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='ID')),
                ('text_type', models.CharField(blank=True, choices=[('StandardTimePeriod', 'StandardTimePeriod'), ('Numeric', 'Numeric'), ('Decimal', 'Decimal'), ('Count', 'Count'), ('Incremental', 'Incremental'), ('GregorianDay', 'GregorianDay'), ('ReportingTrimester', 'ReportingTrimester'), ('ReportingTimePeriod', 'ReportingTimePeriod'), ('ReportingQuarter', 'ReportingQuarter'), ('ReportingMonth', 'ReportingMonth'), ('DateTime', 'DateTime'), ('TimeRange', 'TimeRange'), ('MonthDay', 'MonthDay'), ('DataSetReference', 'DataSetReference'), ('IdentifiableReference', 'IdentifiableReference'), ('ReportingSemester', 'ReportingSemester'), ('ReportingWeek', 'ReportingWeek'), ('Month', 'Month'), ('XHTML', 'XHTML'), ('Float', 'Float'), ('Short', 'Short'), ('BigInteger', 'BigInteger'), ('AttachmentConstraintReference', 'AttachmentConstraintReference'), ('Day', 'Day'), ('Alpha', 'Alpha'), ('Long', 'Long'), ('ReportingDay', 'ReportingDay'), ('Time', 'Time'), ('ExclusiveValueRange', 'ExclusiveValueRange'), ('GregorianTimePeriod', 'GregorianTimePeriod'), ('AlphaNumeric', 'AlphaNumeric'), ('URI', 'URI'), ('GregorianYear', 'GregorianYear'), ('GregorianYearMonth', 'GregorianYearMonth'), (None, 'None'), ('Double', 'Double'), ('Integer', 'Integer'), ('Boolean', 'Boolean'), ('InclusiveValueRange', 'InclusiveValueRange'), ('ObservationalTimePeriod', 'ObservationalTimePeriod'), ('BasicTimePeriod', 'BasicTimePeriod'), ('ReportingYear', 'ReportingYear'), ('Duration', 'Duration'), ('KeyValues', 'KeyValues'), ('String', 'String')], max_length=63)),
                ('is_sequence', models.NullBooleanField()),
                ('interval', models.DecimalField(blank=True, decimal_places=10, max_digits=19, null=True)),
                ('start_value', models.DecimalField(blank=True, decimal_places=10, max_digits=19, null=True)),
                ('end_value', models.DecimalField(blank=True, decimal_places=10, max_digits=19, null=True)),
                ('time_interval', models.DurationField(blank=True, null=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('min_length', models.PositiveIntegerField(blank=True, null=True)),
                ('max_length', models.PositiveIntegerField(blank=True, null=True)),
                ('min_value', models.DecimalField(blank=True, decimal_places=10, max_digits=19, null=True)),
                ('max_value', models.DecimalField(blank=True, decimal_places=10, max_digits=19, null=True)),
                ('decimals', models.PositiveIntegerField(blank=True, null=True)),
                ('pattern', models.TextField(blank=True, null=True)),
                ('is_multiLingual', models.NullBooleanField()),
                ('concept', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='hydro_sdmx.Concept')),
                ('enumeration', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='hydro_sdmx.Codelist')),
                ('wrapper', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='hydro_sdmx.DataStructure', verbose_name='DSD')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Organisation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.CharField(max_length=255, unique=True)),
                ('depth', models.PositiveIntegerField()),
                ('numchild', models.PositiveIntegerField(default=0)),
                ('uri', models.URLField(blank=True, null=True, verbose_name='URI')),
                ('id_code', models.CharField(blank=True, max_length=63, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255)),
                ('description', models.TextField(blank=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Organisation')),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OrganisationScheme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uri', models.URLField(blank=True, null=True, verbose_name='URI')),
                ('description', models.TextField(blank=True)),
                ('version', models.CharField(default='1.0', max_length=15, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*', 32), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')])),
                ('valid_from', models.DateTimeField(blank=True, null=True)),
                ('valid_to', models.DateTimeField(blank=True, null=True)),
                ('id_code', models.CharField(max_length=63, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='ID')),
                ('is_final', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
                ('agency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Organisation')),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Registration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.CharField(max_length=255, unique=True)),
                ('depth', models.PositiveIntegerField()),
                ('numchild', models.PositiveIntegerField(default=0)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('action', models.CharField(choices=[('Append', 'Append'), ('Replace', 'Replace'), ('Delete', 'Delete')], max_length=63)),
                ('interactive', models.BooleanField(default=False)),
                ('set_id', models.CharField(max_length=63, null=True)),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Registration')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_file', models.FileField(blank=True, null=True, upload_to=hydro_sdmx.models.registration.sdmx_upload_path)),
                ('from_url', models.URLField(blank=True, null=True, unique=True)),
                ('url_file', models.FileField(blank=True, null=True, upload_to=hydro_sdmx.models.registration.sdmx_upload_path)),
            ],
        ),
        migrations.CreateModel(
            name='Telephone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=31, verbose_name='phone')),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Contact')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='URI',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.URLField(verbose_name='URI')),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Contact')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='X400',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=63, verbose_name='X400')),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Contact')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='registration',
            name='source',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Source'),
        ),
        migrations.AddField(
            model_name='organisationscheme',
            name='registrations',
            field=models.ManyToManyField(to='hydro_sdmx.Registration'),
        ),
        migrations.AddField(
            model_name='organisation',
            name='schemes',
            field=models.ManyToManyField(blank=True, to='hydro_sdmx.OrganisationScheme'),
        ),
        migrations.AddField(
            model_name='dimension',
            name='groups',
            field=models.ManyToManyField(blank=True, related_name='dimensions', to='hydro_sdmx.Group'),
        ),
        migrations.AddField(
            model_name='dimension',
            name='measure_representation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='hydro_sdmx.ConceptScheme'),
        ),
        migrations.AddField(
            model_name='dimension',
            name='roles',
            field=models.ManyToManyField(blank=True, related_name='_dimension_roles_+', to='hydro_sdmx.Concept'),
        ),
        migrations.AddField(
            model_name='dimension',
            name='wrapper',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='hydro_sdmx.DataStructure', verbose_name='DSD'),
        ),
        migrations.AddField(
            model_name='datastructure',
            name='agency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Organisation'),
        ),
        migrations.AddField(
            model_name='datastructure',
            name='attributes',
            field=models.ManyToManyField(related_name='_datastructure_attributes_+', through='hydro_sdmx.Attribute', to='hydro_sdmx.Concept'),
        ),
        migrations.AddField(
            model_name='datastructure',
            name='dimensions',
            field=models.ManyToManyField(related_name='dimensions', through='hydro_sdmx.Dimension', to='hydro_sdmx.Concept'),
        ),
        migrations.AddField(
            model_name='datastructure',
            name='measures',
            field=models.ManyToManyField(related_name='_datastructure_measures_+', through='hydro_sdmx.Measure', to='hydro_sdmx.Concept'),
        ),
        migrations.AddField(
            model_name='datastructure',
            name='registrations',
            field=models.ManyToManyField(to='hydro_sdmx.Registration'),
        ),
        migrations.AddField(
            model_name='dataprovisionagreement',
            name='agency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Organisation'),
        ),
        migrations.AddField(
            model_name='dataprovisionagreement',
            name='data_provider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_provision_agreements', to='hydro_sdmx.Organisation'),
        ),
        migrations.AddField(
            model_name='dataprovisionagreement',
            name='data_provider_scheme',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_provision_agreements', to='hydro_sdmx.OrganisationScheme'),
        ),
        migrations.AddField(
            model_name='dataprovisionagreement',
            name='registrations',
            field=models.ManyToManyField(to='hydro_sdmx.Registration'),
        ),
        migrations.AddField(
            model_name='dataprovisionagreement',
            name='structure_usage',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_provider_agreements', to='hydro_sdmx.Dataflow'),
        ),
        migrations.AddField(
            model_name='dataflow',
            name='agency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Organisation'),
        ),
        migrations.AddField(
            model_name='dataflow',
            name='registrations',
            field=models.ManyToManyField(to='hydro_sdmx.Registration'),
        ),
        migrations.AddField(
            model_name='dataflow',
            name='structure',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.DataStructure'),
        ),
        migrations.AddField(
            model_name='contact',
            name='organisation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Organisation'),
        ),
        migrations.AddField(
            model_name='contact',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='contact', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='constraintdatakey',
            name='data_key_set',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_keys', to='hydro_sdmx.DataKeySet'),
        ),
        migrations.AddField(
            model_name='conceptscheme',
            name='agency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Organisation'),
        ),
        migrations.AddField(
            model_name='conceptscheme',
            name='registrations',
            field=models.ManyToManyField(to='hydro_sdmx.Registration'),
        ),
        migrations.AddField(
            model_name='concept',
            name='wrapper',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='concepts', to='hydro_sdmx.ConceptScheme', verbose_name='Concept Scheme'),
        ),
        migrations.AddField(
            model_name='codelist',
            name='agency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Organisation'),
        ),
        migrations.AddField(
            model_name='codelist',
            name='registrations',
            field=models.ManyToManyField(to='hydro_sdmx.Registration'),
        ),
        migrations.AddField(
            model_name='code',
            name='wrapper',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='codes', to='hydro_sdmx.Codelist', verbose_name='Codelist'),
        ),
        migrations.AddField(
            model_name='attribute',
            name='attached2dim_in_group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attached_attributes2each_group_dim', to='hydro_sdmx.Group'),
        ),
        migrations.AddField(
            model_name='attribute',
            name='attached2dims',
            field=models.ManyToManyField(blank=True, related_name='attached_attributes', to='hydro_sdmx.Dimension'),
        ),
        migrations.AddField(
            model_name='attribute',
            name='attached2groups',
            field=models.ManyToManyField(blank=True, related_name='attached_attributes', to='hydro_sdmx.Group'),
        ),
        migrations.AddField(
            model_name='attribute',
            name='concept',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='hydro_sdmx.Concept'),
        ),
        migrations.AddField(
            model_name='attribute',
            name='enumeration',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='hydro_sdmx.Codelist'),
        ),
        migrations.AddField(
            model_name='attribute',
            name='roles',
            field=models.ManyToManyField(blank=True, related_name='role_for_attributes', to='hydro_sdmx.Concept'),
        ),
        migrations.AddField(
            model_name='attribute',
            name='wrapper',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='hydro_sdmx.DataStructure', verbose_name='DSD'),
        ),
        migrations.AddField(
            model_name='attachmentconstraint',
            name='agency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Organisation'),
        ),
        migrations.AddField(
            model_name='attachmentconstraint',
            name='data_structures',
            field=models.ManyToManyField(related_name='attachemt_constraints', to='hydro_sdmx.DataStructure'),
        ),
        migrations.AddField(
            model_name='attachmentconstraint',
            name='dataflows',
            field=models.ManyToManyField(related_name='dataflow_constraints', to='hydro_sdmx.Dataflow'),
        ),
        migrations.AddField(
            model_name='attachmentconstraint',
            name='datasets',
            field=models.ManyToManyField(related_name='dataset_constraints', to='hydro_sdmx.Dataflow'),
        ),
        migrations.AddField(
            model_name='attachmentconstraint',
            name='datasources',
            field=models.ManyToManyField(to='hydro_sdmx.Source'),
        ),
        migrations.AddField(
            model_name='attachmentconstraint',
            name='provisions',
            field=models.ManyToManyField(to='hydro_sdmx.DataProvisionAgreement'),
        ),
        migrations.AddField(
            model_name='attachmentconstraint',
            name='registrations',
            field=models.ManyToManyField(to='hydro_sdmx.Registration'),
        ),
        migrations.AddField(
            model_name='annotation',
            name='attachmentconstraint',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.AttachmentConstraint'),
        ),
        migrations.AddField(
            model_name='annotation',
            name='attribute',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Attribute'),
        ),
        migrations.AddField(
            model_name='annotation',
            name='code',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Code'),
        ),
        migrations.AddField(
            model_name='annotation',
            name='codelist',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Codelist'),
        ),
        migrations.AddField(
            model_name='annotation',
            name='concept',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Concept'),
        ),
        migrations.AddField(
            model_name='annotation',
            name='conceptscheme',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.ConceptScheme'),
        ),
        migrations.AddField(
            model_name='annotation',
            name='contact',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Contact'),
        ),
        migrations.AddField(
            model_name='annotation',
            name='dataflow',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Dataflow'),
        ),
        migrations.AddField(
            model_name='annotation',
            name='dataprovisionagreement',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.DataProvisionAgreement'),
        ),
        migrations.AddField(
            model_name='annotation',
            name='datastructure',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.DataStructure'),
        ),
        migrations.AddField(
            model_name='annotation',
            name='dimension',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Dimension'),
        ),
        migrations.AddField(
            model_name='annotation',
            name='group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Group'),
        ),
        migrations.AddField(
            model_name='annotation',
            name='measure',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Measure'),
        ),
        migrations.AddField(
            model_name='annotation',
            name='organisation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Organisation'),
        ),
        migrations.AddField(
            model_name='annotation',
            name='organisationscheme',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.OrganisationScheme'),
        ),
        migrations.AlterUniqueTogether(
            name='x400',
            unique_together=set([('contact', 'value')]),
        ),
        migrations.AlterUniqueTogether(
            name='uri',
            unique_together=set([('contact', 'value')]),
        ),
        migrations.AlterUniqueTogether(
            name='telephone',
            unique_together=set([('contact', 'value')]),
        ),
        migrations.AddIndex(
            model_name='organisationscheme',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_cbc510_idx'),
        ),
        migrations.AddIndex(
            model_name='organisationscheme',
            index=models.Index(fields=['name'], name='hydro_sdmx__name_e40bcd_idx'),
        ),
        migrations.AddIndex(
            model_name='organisationscheme',
            index=models.Index(fields=['agency'], name='hydro_sdmx__agency__4678de_idx'),
        ),
        migrations.AddIndex(
            model_name='organisationscheme',
            index=models.Index(fields=['id_code', 'version'], name='hydro_sdmx__id_code_a36826_idx'),
        ),
        migrations.AddIndex(
            model_name='organisationscheme',
            index=models.Index(fields=['id_code', 'agency', 'version'], name='hydro_sdmx__id_code_d503ef_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='organisationscheme',
            unique_together=set([('id_code', 'agency', 'version')]),
        ),
        migrations.AddIndex(
            model_name='organisation',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_d4fb87_idx'),
        ),
        migrations.AddIndex(
            model_name='organisation',
            index=models.Index(fields=['name'], name='hydro_sdmx__name_a6a38b_idx'),
        ),
        migrations.AddIndex(
            model_name='organisation',
            index=models.Index(fields=['id_code', 'name'], name='hydro_sdmx__id_code_32c438_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='organisation',
            unique_together=set([('id_code',)]),
        ),
        migrations.AlterUniqueTogether(
            name='measure',
            unique_together=set([('id_code', 'concept', 'wrapper')]),
        ),
        migrations.AlterUniqueTogether(
            name='keyvalue',
            unique_together=set([('constraint_data_key', 'dimension')]),
        ),
        migrations.AlterUniqueTogether(
            name='dimension',
            unique_together=set([('id_code', 'concept', 'wrapper')]),
        ),
        migrations.AddIndex(
            model_name='datastructure',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_2f738a_idx'),
        ),
        migrations.AddIndex(
            model_name='datastructure',
            index=models.Index(fields=['name'], name='hydro_sdmx__name_f44ccc_idx'),
        ),
        migrations.AddIndex(
            model_name='datastructure',
            index=models.Index(fields=['agency'], name='hydro_sdmx__agency__534522_idx'),
        ),
        migrations.AddIndex(
            model_name='datastructure',
            index=models.Index(fields=['id_code', 'version'], name='hydro_sdmx__id_code_88699b_idx'),
        ),
        migrations.AddIndex(
            model_name='datastructure',
            index=models.Index(fields=['id_code', 'agency', 'version'], name='hydro_sdmx__id_code_bf9ded_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='datastructure',
            unique_together=set([('id_code', 'agency', 'version')]),
        ),
        migrations.AddIndex(
            model_name='dataprovisionagreement',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_60c01d_idx'),
        ),
        migrations.AddIndex(
            model_name='dataprovisionagreement',
            index=models.Index(fields=['name'], name='hydro_sdmx__name_c72205_idx'),
        ),
        migrations.AddIndex(
            model_name='dataprovisionagreement',
            index=models.Index(fields=['agency'], name='hydro_sdmx__agency__a1a9bb_idx'),
        ),
        migrations.AddIndex(
            model_name='dataprovisionagreement',
            index=models.Index(fields=['id_code', 'version'], name='hydro_sdmx__id_code_5c8bcf_idx'),
        ),
        migrations.AddIndex(
            model_name='dataprovisionagreement',
            index=models.Index(fields=['id_code', 'agency', 'version'], name='hydro_sdmx__id_code_8375a4_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='dataprovisionagreement',
            unique_together=set([('id_code', 'agency', 'version')]),
        ),
        migrations.AddIndex(
            model_name='dataflow',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_b49685_idx'),
        ),
        migrations.AddIndex(
            model_name='dataflow',
            index=models.Index(fields=['name'], name='hydro_sdmx__name_492fc6_idx'),
        ),
        migrations.AddIndex(
            model_name='dataflow',
            index=models.Index(fields=['agency'], name='hydro_sdmx__agency__d13657_idx'),
        ),
        migrations.AddIndex(
            model_name='dataflow',
            index=models.Index(fields=['id_code', 'version'], name='hydro_sdmx__id_code_55a5ee_idx'),
        ),
        migrations.AddIndex(
            model_name='dataflow',
            index=models.Index(fields=['id_code', 'agency', 'version'], name='hydro_sdmx__id_code_0567c7_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='dataflow',
            unique_together=set([('id_code', 'agency', 'version')]),
        ),
        migrations.AddIndex(
            model_name='contact',
            index=models.Index(fields=['user'], name='hydro_sdmx__user_id_e6d0b0_idx'),
        ),
        migrations.AddIndex(
            model_name='contact',
            index=models.Index(fields=['organisation'], name='hydro_sdmx__organis_a1dba6_idx'),
        ),
        migrations.AddIndex(
            model_name='contact',
            index=models.Index(fields=['user', 'organisation'], name='hydro_sdmx__user_id_068270_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='contact',
            unique_together=set([('user', 'organisation')]),
        ),
        migrations.AddIndex(
            model_name='conceptscheme',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_374a4b_idx'),
        ),
        migrations.AddIndex(
            model_name='conceptscheme',
            index=models.Index(fields=['name'], name='hydro_sdmx__name_d963bf_idx'),
        ),
        migrations.AddIndex(
            model_name='conceptscheme',
            index=models.Index(fields=['agency'], name='hydro_sdmx__agency__b1799f_idx'),
        ),
        migrations.AddIndex(
            model_name='conceptscheme',
            index=models.Index(fields=['id_code', 'version'], name='hydro_sdmx__id_code_875a3c_idx'),
        ),
        migrations.AddIndex(
            model_name='conceptscheme',
            index=models.Index(fields=['id_code', 'agency', 'version'], name='hydro_sdmx__id_code_9bcd2e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='conceptscheme',
            unique_together=set([('id_code', 'agency', 'version')]),
        ),
        migrations.AddIndex(
            model_name='concept',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_b3a8c9_idx'),
        ),
        migrations.AddIndex(
            model_name='concept',
            index=models.Index(fields=['wrapper'], name='hydro_sdmx__wrapper_a75750_idx'),
        ),
        migrations.AddIndex(
            model_name='concept',
            index=models.Index(fields=['wrapper', 'id_code'], name='hydro_sdmx__wrapper_2a5973_idx'),
        ),
        migrations.AddIndex(
            model_name='concept',
            index=models.Index(fields=['wrapper', 'name'], name='hydro_sdmx__wrapper_7d24ef_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='concept',
            unique_together=set([('wrapper', 'id_code')]),
        ),
        migrations.AddIndex(
            model_name='codelist',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_35528a_idx'),
        ),
        migrations.AddIndex(
            model_name='codelist',
            index=models.Index(fields=['name'], name='hydro_sdmx__name_362da1_idx'),
        ),
        migrations.AddIndex(
            model_name='codelist',
            index=models.Index(fields=['agency'], name='hydro_sdmx__agency__116c07_idx'),
        ),
        migrations.AddIndex(
            model_name='codelist',
            index=models.Index(fields=['id_code', 'version'], name='hydro_sdmx__id_code_77b07a_idx'),
        ),
        migrations.AddIndex(
            model_name='codelist',
            index=models.Index(fields=['id_code', 'agency', 'version'], name='hydro_sdmx__id_code_6c5067_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='codelist',
            unique_together=set([('id_code', 'agency', 'version')]),
        ),
        migrations.AddIndex(
            model_name='code',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_0544fb_idx'),
        ),
        migrations.AddIndex(
            model_name='code',
            index=models.Index(fields=['wrapper'], name='hydro_sdmx__wrapper_bab4c0_idx'),
        ),
        migrations.AddIndex(
            model_name='code',
            index=models.Index(fields=['wrapper', 'id_code'], name='hydro_sdmx__wrapper_13e7bf_idx'),
        ),
        migrations.AddIndex(
            model_name='code',
            index=models.Index(fields=['wrapper', 'name'], name='hydro_sdmx__wrapper_d7ab86_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='code',
            unique_together=set([('wrapper', 'id_code')]),
        ),
        migrations.AlterUniqueTogether(
            name='attribute',
            unique_together=set([('id_code', 'concept', 'wrapper')]),
        ),
        migrations.AddIndex(
            model_name='attachmentconstraint',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_dc061f_idx'),
        ),
        migrations.AddIndex(
            model_name='attachmentconstraint',
            index=models.Index(fields=['name'], name='hydro_sdmx__name_f8e10a_idx'),
        ),
        migrations.AddIndex(
            model_name='attachmentconstraint',
            index=models.Index(fields=['agency'], name='hydro_sdmx__agency__712982_idx'),
        ),
        migrations.AddIndex(
            model_name='attachmentconstraint',
            index=models.Index(fields=['id_code', 'version'], name='hydro_sdmx__id_code_3f1655_idx'),
        ),
        migrations.AddIndex(
            model_name='attachmentconstraint',
            index=models.Index(fields=['id_code', 'agency', 'version'], name='hydro_sdmx__id_code_93e443_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='attachmentconstraint',
            unique_together=set([('id_code', 'agency', 'version')]),
        ),
    ]
