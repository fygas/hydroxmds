# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2017-07-24 06:06
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='AgencyScheme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('changed_date', models.DateTimeField(auto_now=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('version', models.CharField(default='1.0', max_length=16, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*', 32), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')])),
                ('valid_from', models.DateTimeField(blank=True, null=True)),
                ('valid_to', models.DateTimeField(blank=True, null=True)),
                ('id_code', models.CharField(max_length=64, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id')),
                ('is_final', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=128)),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Annotation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('changed_date', models.DateTimeField(auto_now=True)),
                ('annotation_title', models.CharField(blank=True, db_index=True, max_length=128, null=True)),
                ('annotation_type', models.CharField(blank=True, max_length=64, null=True)),
                ('annotation_URL', models.URLField(blank=True, null=True)),
                ('annotation_text', models.TextField(blank=True, null=True)),
                ('id_code', models.CharField(blank=True, db_index=True, max_length=64, null=True, verbose_name='id')),
                ('changed_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='changed by')),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
            ],
            options={
                'ordering': ['id_code', 'annotation_title', 'annotation_text'],
            },
        ),
        migrations.CreateModel(
            name='AttachmentConstraint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('changed_date', models.DateTimeField(auto_now=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('version', models.CharField(default='1.0', max_length=16, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*', 32), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')])),
                ('valid_from', models.DateTimeField(blank=True, null=True)),
                ('valid_to', models.DateTimeField(blank=True, null=True)),
                ('id_code', models.CharField(max_length=64, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id')),
                ('is_final', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=128)),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('changed_date', models.DateTimeField(auto_now=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('id_code', models.CharField(blank=True, max_length=64, null=True, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id')),
                ('is_concept_role', models.BooleanField(default=True)),
                ('required', models.BooleanField(default=True)),
                ('attached2measure', models.BooleanField(default=False)),
                ('annotations', models.ManyToManyField(blank=True, related_name='_attribute_annotations_+', to='hydro_sdmx.Annotation')),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Categorization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('changed_date', models.DateTimeField(auto_now=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('version', models.CharField(default='1.0', max_length=16, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*', 32), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')])),
                ('valid_from', models.DateTimeField(blank=True, null=True)),
                ('valid_to', models.DateTimeField(blank=True, null=True)),
                ('id_code', models.CharField(max_length=64, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id')),
                ('is_final', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=128)),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.CharField(max_length=255, unique=True)),
                ('depth', models.PositiveIntegerField()),
                ('numchild', models.PositiveIntegerField(default=0)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('changed_date', models.DateTimeField(auto_now=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=128, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('id_code', models.CharField(max_length=64, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id')),
                ('annotations', models.ManyToManyField(blank=True, related_name='_category_annotations_+', to='hydro_sdmx.Annotation')),
                ('changed_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='changed by')),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CategoryMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('annotations', models.ManyToManyField(to='hydro_sdmx.Annotation')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='hydro_sdmx.Category')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='hydro_sdmx.Category')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CategoryScheme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('changed_date', models.DateTimeField(auto_now=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('version', models.CharField(default='1.0', max_length=16, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*', 32), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')])),
                ('valid_from', models.DateTimeField(blank=True, null=True)),
                ('valid_to', models.DateTimeField(blank=True, null=True)),
                ('is_final', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=128)),
                ('id_code', models.CharField(max_length=64, validators=[django.core.validators.RegexValidator(re.compile('[A-Za-z][A-Za-z0-9_\\-]*', 32), 'Enter a value of type NCNameIDType that has pattern "([A-Za-z][A-Za-z0-9_\\-]*)"', 'invalid_pattern')], verbose_name='id')),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CategorySchemeMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('changed_date', models.DateTimeField(auto_now=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('id_code', models.CharField(max_length=64, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id')),
                ('name', models.CharField(max_length=128)),
                ('annotations', models.ManyToManyField(blank=True, related_name='_categoryschememap_annotations_+', to='hydro_sdmx.Annotation')),
                ('changed_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='changed by')),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category_scheme_map_sources', to='hydro_sdmx.CategoryScheme')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category_scheme_map_targets', to='hydro_sdmx.CategoryScheme')),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Code',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.CharField(max_length=255, unique=True)),
                ('depth', models.PositiveIntegerField()),
                ('numchild', models.PositiveIntegerField(default=0)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('changed_date', models.DateTimeField(auto_now=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('id_code', models.CharField(blank=True, max_length=64, null=True, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id')),
                ('name', models.CharField(blank=True, max_length=128, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('annotations', models.ManyToManyField(blank=True, related_name='_code_annotations_+', to='hydro_sdmx.Annotation')),
                ('changed_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='changed by')),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Code')),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Codelist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('changed_date', models.DateTimeField(auto_now=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('version', models.CharField(default='1.0', max_length=16, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*', 32), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')])),
                ('valid_from', models.DateTimeField(blank=True, null=True)),
                ('valid_to', models.DateTimeField(blank=True, null=True)),
                ('is_final', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=128)),
                ('id_code', models.CharField(max_length=64, validators=[django.core.validators.RegexValidator(re.compile('[A-Za-z][A-Za-z0-9_\\-]*', 32), 'Enter a value of type NCNameIDType that has pattern "([A-Za-z][A-Za-z0-9_\\-]*)"', 'invalid_pattern')], verbose_name='id')),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CodelistMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('changed_date', models.DateTimeField(auto_now=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('id_code', models.CharField(max_length=64, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id')),
                ('name', models.CharField(max_length=128)),
                ('annotations', models.ManyToManyField(blank=True, related_name='_codelistmap_annotations_+', to='hydro_sdmx.Annotation')),
                ('changed_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='changed by')),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='codelist_map_sources', to='hydro_sdmx.Codelist')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='codelist_map_targets', to='hydro_sdmx.Codelist')),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CodeMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('annotations', models.ManyToManyField(to='hydro_sdmx.Annotation')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='code_sources', to='hydro_sdmx.Code')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='code_targets', to='hydro_sdmx.Code')),
                ('wrapper', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='code_maps', to='hydro_sdmx.CodelistMap')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Computation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('changed_date', models.DateTimeField(auto_now=True)),
                ('description', models.TextField()),
                ('local_id', models.CharField(blank=True, max_length=64, null=True, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')])),
                ('software_package', models.CharField(blank=True, max_length=128, null=True)),
                ('software_language', models.CharField(blank=True, max_length=128, null=True)),
                ('software_version', models.CharField(blank=True, max_length=16, null=True)),
                ('annotations', models.ManyToManyField(blank=True, related_name='_computation_annotations_+', to='hydro_sdmx.Annotation')),
                ('changed_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='changed by')),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Concept',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.CharField(max_length=255, unique=True)),
                ('depth', models.PositiveIntegerField()),
                ('numchild', models.PositiveIntegerField(default=0)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('changed_date', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=128, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('id_code', models.CharField(max_length=64, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id')),
                ('uri', models.URLField(blank=True, null=True)),
                ('annotations', models.ManyToManyField(blank=True, related_name='_concept_annotations_+', to='hydro_sdmx.Annotation')),
                ('changed_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='changed by')),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('iso_concept_reference', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='hydro_sdmx.Concept')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Concept')),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ConceptMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('annotations', models.ManyToManyField(to='hydro_sdmx.Annotation')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='hydro_sdmx.Concept')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='hydro_sdmx.Concept')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ConceptScheme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('changed_date', models.DateTimeField(auto_now=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('version', models.CharField(default='1.0', max_length=16, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*', 32), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')])),
                ('valid_from', models.DateTimeField(blank=True, null=True)),
                ('valid_to', models.DateTimeField(blank=True, null=True)),
                ('is_final', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=128)),
                ('id_code', models.CharField(max_length=64, validators=[django.core.validators.RegexValidator(re.compile('[A-Za-z][A-Za-z0-9_\\-]*', 32), 'Enter a value of type NCNameIDType that has pattern "([A-Za-z][A-Za-z0-9_\\-]*)"', 'invalid_pattern')], verbose_name='id')),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ConceptSchemeMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('changed_date', models.DateTimeField(auto_now=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('id_code', models.CharField(max_length=64, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id')),
                ('name', models.CharField(max_length=128)),
                ('annotations', models.ManyToManyField(blank=True, related_name='_conceptschememap_annotations_+', to='hydro_sdmx.Annotation')),
                ('changed_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='changed by')),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='concept_scheme_map_sources', to='hydro_sdmx.ConceptScheme')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='concept_scheme_map_targets', to='hydro_sdmx.ConceptScheme')),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Condition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('condition', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_code', models.CharField(max_length=64, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id')),
                ('name', models.CharField(blank=True, max_length=128, null=True)),
                ('department', models.CharField(blank=True, max_length=32, null=True)),
                ('role', models.CharField(blank=True, max_length=32, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ContentConstraint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('changed_date', models.DateTimeField(auto_now=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('version', models.CharField(default='1.0', max_length=16, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*', 32), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')])),
                ('valid_from', models.DateTimeField(blank=True, null=True)),
                ('valid_to', models.DateTimeField(blank=True, null=True)),
                ('id_code', models.CharField(max_length=64, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id')),
                ('is_final', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=128)),
                ('periodicity', models.CharField(blank=True, max_length=64, null=True)),
                ('offset', models.CharField(blank=True, max_length=64, null=True)),
                ('tolerance', models.CharField(blank=True, max_length=64, null=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CubeRegion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cube_region_code', models.IntegerField()),
                ('include', models.BooleanField(default=True)),
                ('constraint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cube_regions', to='hydro_sdmx.ContentConstraint')),
            ],
        ),
        migrations.CreateModel(
            name='DataComponentMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('annotations', models.ManyToManyField(to='hydro_sdmx.Annotation')),
            ],
        ),
        migrations.CreateModel(
            name='DataConsumerScheme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('changed_date', models.DateTimeField(auto_now=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('version', models.CharField(default='1.0', max_length=16, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*', 32), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')])),
                ('valid_from', models.DateTimeField(blank=True, null=True)),
                ('valid_to', models.DateTimeField(blank=True, null=True)),
                ('id_code', models.CharField(max_length=64, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id')),
                ('is_final', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=128)),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Dataflow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('changed_date', models.DateTimeField(auto_now=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('version', models.CharField(default='1.0', max_length=16, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*', 32), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')])),
                ('valid_from', models.DateTimeField(blank=True, null=True)),
                ('valid_to', models.DateTimeField(blank=True, null=True)),
                ('id_code', models.CharField(max_length=64, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id')),
                ('is_final', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=128)),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DataflowStructureMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('changed_date', models.DateTimeField(auto_now=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('id_code', models.CharField(max_length=64, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id')),
                ('name', models.CharField(max_length=128)),
                ('annotations', models.ManyToManyField(blank=True, related_name='_dataflowstructuremap_annotations_+', to='hydro_sdmx.Annotation')),
                ('changed_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='changed by')),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dataflow_structure_map_sources', to='hydro_sdmx.Dataflow')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dataflow_structure_map_targets', to='hydro_sdmx.Dataflow')),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DataKey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_key_code', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='DataKeySet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_key_set_code', models.IntegerField()),
                ('attachment_constraint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_key_sets', to='hydro_sdmx.AttachmentConstraint')),
                ('content_constraint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_key_sets', to='hydro_sdmx.ContentConstraint')),
            ],
        ),
        migrations.CreateModel(
            name='DataProviderScheme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('changed_date', models.DateTimeField(auto_now=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('version', models.CharField(default='1.0', max_length=16, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*', 32), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')])),
                ('valid_from', models.DateTimeField(blank=True, null=True)),
                ('valid_to', models.DateTimeField(blank=True, null=True)),
                ('id_code', models.CharField(max_length=64, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id')),
                ('is_final', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=128)),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DataProvisionAgreement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('changed_date', models.DateTimeField(auto_now=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('version', models.CharField(default='1.0', max_length=16, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*', 32), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')])),
                ('valid_from', models.DateTimeField(blank=True, null=True)),
                ('valid_to', models.DateTimeField(blank=True, null=True)),
                ('id_code', models.CharField(max_length=64, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id')),
                ('is_final', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=128)),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('changed_date', models.DateTimeField(auto_now=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('id_code', models.CharField(blank=True, max_length=64, null=True, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id')),
                ('is_metadata', models.BooleanField(default=False)),
                ('annotations', models.ManyToManyField(blank=True, related_name='_dataset_annotations_+', to='hydro_sdmx.Annotation')),
                ('changed_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='changed by')),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Datasource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_uri', models.URLField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='DataStructure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('changed_date', models.DateTimeField(auto_now=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('version', models.CharField(default='1.0', max_length=16, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*', 32), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')])),
                ('valid_from', models.DateTimeField(blank=True, null=True)),
                ('valid_to', models.DateTimeField(blank=True, null=True)),
                ('id_code', models.CharField(max_length=64, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id')),
                ('is_final', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=128)),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DataStructureMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('changed_date', models.DateTimeField(auto_now=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('id_code', models.CharField(max_length=64, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id')),
                ('name', models.CharField(max_length=128)),
                ('is_extension', models.BooleanField(default=False)),
                ('annotations', models.ManyToManyField(blank=True, related_name='_datastructuremap_annotations_+', to='hydro_sdmx.Annotation')),
                ('changed_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='changed by')),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_structure_map_sources', to='hydro_sdmx.DataStructure')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_structure_map_targets', to='hydro_sdmx.DataStructure')),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Dimension',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('changed_date', models.DateTimeField(auto_now=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('id_code', models.CharField(blank=True, max_length=64, null=True, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id')),
                ('dimension_type', models.CharField(choices=[('dimension', 'Dimension'), ('time', 'TimeDimension'), ('measure', 'MeasureDimension')], max_length=16)),
                ('position', models.PositiveIntegerField(blank=True, null=True)),
                ('is_concept_role', models.BooleanField(default=True)),
                ('annotations', models.ManyToManyField(blank=True, related_name='_dimension_annotations_+', to='hydro_sdmx.Annotation')),
                ('changed_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='changed by')),
                ('concept', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Concept')),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Email',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('changed_date', models.DateTimeField(auto_now=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('id_code', models.CharField(blank=True, max_length=64, null=True, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id')),
                ('annotations', models.ManyToManyField(blank=True, related_name='_group_annotations_+', to='hydro_sdmx.Annotation')),
                ('attachment_constraint', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='groups', to='hydro_sdmx.AttachmentConstraint')),
                ('changed_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='changed by')),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HierarchicalCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('changed_date', models.DateTimeField(auto_now=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('id_code', models.CharField(max_length=64, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id')),
                ('depth', models.IntegerField()),
                ('level', models.IntegerField(blank=True, null=True)),
                ('version', models.CharField(max_length=16, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*', 32), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')])),
                ('valid_from', models.DateTimeField(blank=True, null=True)),
                ('valid_to', models.DateTimeField(blank=True, null=True)),
                ('annotations', models.ManyToManyField(blank=True, related_name='_hierarchicalcode_annotations_+', to='hydro_sdmx.Annotation')),
                ('changed_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='changed by')),
                ('children', models.ManyToManyField(related_name='_hierarchicalcode_children_+', to='hydro_sdmx.HierarchicalCode')),
                ('code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Code')),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HierarchicalCodelist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('changed_date', models.DateTimeField(auto_now=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('version', models.CharField(default='1.0', max_length=16, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*', 32), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')])),
                ('valid_from', models.DateTimeField(blank=True, null=True)),
                ('valid_to', models.DateTimeField(blank=True, null=True)),
                ('id_code', models.CharField(max_length=64, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id')),
                ('is_final', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=128)),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Hierarchy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('changed_date', models.DateTimeField(auto_now=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('id_code', models.CharField(max_length=64, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id')),
                ('name', models.CharField(max_length=128)),
                ('leveled', models.BooleanField(default=False)),
                ('annotations', models.ManyToManyField(blank=True, related_name='_hierarchy_annotations_+', to='hydro_sdmx.Annotation')),
                ('changed_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='changed by')),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('hierarchical_codes', models.ManyToManyField(to='hydro_sdmx.HierarchicalCode')),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HybridCodelistMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('changed_date', models.DateTimeField(auto_now=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('id_code', models.CharField(max_length=64, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id')),
                ('name', models.CharField(max_length=128)),
                ('annotations', models.ManyToManyField(blank=True, related_name='_hybridcodelistmap_annotations_+', to='hydro_sdmx.Annotation')),
                ('changed_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='changed by')),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('source_cl', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hybrid_codelist_map_sources', to='hydro_sdmx.Codelist')),
                ('source_hcl', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hybrid_codelist_map_sources', to='hydro_sdmx.HierarchicalCodelist')),
                ('target_cl', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hybrid_codelist_map_targets', to='hydro_sdmx.Codelist')),
                ('target_hcl', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hybrid_codelist_map_targets', to='hydro_sdmx.HierarchicalCodelist')),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HybridCodeMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('annotations', models.ManyToManyField(to='hydro_sdmx.Annotation')),
                ('source_c', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='hydro_sdmx.Code')),
                ('source_hc', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='hydro_sdmx.HierarchicalCode')),
                ('target_c', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='hydro_sdmx.Code')),
                ('target_hc', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='hydro_sdmx.HierarchicalCode')),
                ('wrapper', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hybrid_code_maps', to='hydro_sdmx.HybridCodelistMap')),
            ],
        ),
        migrations.CreateModel(
            name='KeyValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attribute', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Attribute')),
                ('data_key', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='key_values', to='hydro_sdmx.DataKey')),
                ('dimension', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Dimension')),
                ('value', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Code')),
            ],
        ),
        migrations.CreateModel(
            name='KeyValueSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.CharField(blank=True, max_length=64, null=True)),
                ('end_time', models.CharField(blank=True, max_length=64, null=True)),
                ('start_inclusive', models.NullBooleanField()),
                ('end_inclusive', models.NullBooleanField()),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Attribute')),
                ('cube_region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_keys', to='hydro_sdmx.CubeRegion')),
                ('dimension', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Dimension')),
                ('values', models.ManyToManyField(to='hydro_sdmx.Code')),
            ],
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('changed_date', models.DateTimeField(auto_now=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('id_code', models.CharField(max_length=64, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id')),
                ('name', models.CharField(max_length=128)),
                ('depth', models.IntegerField()),
                ('annotations', models.ManyToManyField(blank=True, related_name='_level_annotations_+', to='hydro_sdmx.Annotation')),
                ('changed_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='changed by')),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MetaattachmentConstraint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('changed_date', models.DateTimeField(auto_now=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('version', models.CharField(default='1.0', max_length=16, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*', 32), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')])),
                ('valid_from', models.DateTimeField(blank=True, null=True)),
                ('valid_to', models.DateTimeField(blank=True, null=True)),
                ('id_code', models.CharField(max_length=64, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id')),
                ('is_final', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=128)),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MetaattrValueSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.CharField(blank=True, max_length=64, null=True)),
                ('end_time', models.CharField(blank=True, max_length=64, null=True)),
                ('start_inclusive', models.NullBooleanField()),
                ('end_inclusive', models.NullBooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='MetacontentConstraint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('changed_date', models.DateTimeField(auto_now=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('version', models.CharField(default='1.0', max_length=16, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*', 32), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')])),
                ('valid_from', models.DateTimeField(blank=True, null=True)),
                ('valid_to', models.DateTimeField(blank=True, null=True)),
                ('id_code', models.CharField(max_length=64, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id')),
                ('is_final', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=128)),
                ('periodicity', models.CharField(blank=True, max_length=64, null=True)),
                ('offset', models.CharField(blank=True, max_length=64, null=True)),
                ('tolerance', models.CharField(blank=True, max_length=64, null=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MetadataAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('changed_date', models.DateTimeField(auto_now=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('id_code', models.CharField(blank=True, max_length=64, null=True, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id')),
                ('min_occurs', models.IntegerField(default=1)),
                ('max_occurs', models.IntegerField(default=1)),
                ('is_presentational', models.BooleanField(default=False)),
                ('annotations', models.ManyToManyField(blank=True, related_name='_metadataattribute_annotations_+', to='hydro_sdmx.Annotation')),
                ('changed_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='changed by')),
                ('concept', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metadata_attributes', to='hydro_sdmx.Concept')),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.MetadataAttribute')),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MetadataComponentMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('annotations', models.ManyToManyField(to='hydro_sdmx.Annotation')),
            ],
        ),
        migrations.CreateModel(
            name='Metadataflow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('changed_date', models.DateTimeField(auto_now=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('version', models.CharField(default='1.0', max_length=16, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*', 32), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')])),
                ('valid_from', models.DateTimeField(blank=True, null=True)),
                ('valid_to', models.DateTimeField(blank=True, null=True)),
                ('id_code', models.CharField(max_length=64, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id')),
                ('is_final', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=128)),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MetadataflowStructureMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('changed_date', models.DateTimeField(auto_now=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('id_code', models.CharField(max_length=64, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id')),
                ('name', models.CharField(max_length=128)),
                ('annotations', models.ManyToManyField(blank=True, related_name='_metadataflowstructuremap_annotations_+', to='hydro_sdmx.Annotation')),
                ('changed_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='changed by')),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metadataflow_structure_map_sources', to='hydro_sdmx.Metadataflow')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metadata_structure_map_targets', to='hydro_sdmx.Metadataflow')),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MetadataKey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metadata_key_code', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='MetadataKeySet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_key_set_code', models.IntegerField()),
                ('attachment_constraint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_key_sets', to='hydro_sdmx.MetaattachmentConstraint')),
                ('content_constraint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_key_sets', to='hydro_sdmx.MetacontentConstraint')),
            ],
        ),
        migrations.CreateModel(
            name='MetadataProvisionAgreement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('changed_date', models.DateTimeField(auto_now=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('version', models.CharField(default='1.0', max_length=16, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*', 32), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')])),
                ('valid_from', models.DateTimeField(blank=True, null=True)),
                ('valid_to', models.DateTimeField(blank=True, null=True)),
                ('id_code', models.CharField(max_length=64, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id')),
                ('is_final', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=128)),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MetadataStructure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('changed_date', models.DateTimeField(auto_now=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('version', models.CharField(default='1.0', max_length=16, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*', 32), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')])),
                ('valid_from', models.DateTimeField(blank=True, null=True)),
                ('valid_to', models.DateTimeField(blank=True, null=True)),
                ('id_code', models.CharField(max_length=64, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id')),
                ('is_final', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=128)),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MetadataStructureMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('changed_date', models.DateTimeField(auto_now=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('id_code', models.CharField(max_length=64, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id')),
                ('name', models.CharField(max_length=128)),
                ('is_extension', models.BooleanField(default=False)),
                ('annotations', models.ManyToManyField(blank=True, related_name='_metadatastructuremap_annotations_+', to='hydro_sdmx.Annotation')),
                ('changed_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='changed by')),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metadata_structure_map_sources', to='hydro_sdmx.MetadataStructure')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metadata_structure_map_targets', to='hydro_sdmx.MetadataStructure')),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MetadataTarget',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('changed_date', models.DateTimeField(auto_now=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('id_code', models.CharField(blank=True, max_length=64, null=True, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id')),
                ('annotations', models.ManyToManyField(blank=True, related_name='_metadatatarget_annotations_+', to='hydro_sdmx.Annotation')),
                ('changed_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='changed by')),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MetadataTargetComponent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('changed_date', models.DateTimeField(auto_now=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('id_code', models.CharField(max_length=64, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id')),
                ('component_type', models.CharField(choices=[(None, 'None'), ('KeyDescriptorValuesTarget', 'KeyDescriptorValuesTarget'), ('DataSetTarget', 'DataSetTarget'), ('ConstraintContentTarget', 'ConstraintContentTarget'), ('ReportPeriodTarget', 'ReportPeriodTarget'), ('IdentifiableObjectTarget', 'IdentifiableObjectTarget')], max_length=64)),
                ('annotations', models.ManyToManyField(blank=True, related_name='_metadatatargetcomponent_annotations_+', to='hydro_sdmx.Annotation')),
                ('changed_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='changed by')),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('identifiable_object', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MetadataTargetRegion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metadata_target_region_code', models.IntegerField()),
                ('constraint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cube_regions', to='hydro_sdmx.MetacontentConstraint')),
            ],
        ),
        migrations.CreateModel(
            name='MetakeyValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_period_value', models.CharField(max_length=64)),
                ('constraint_value', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.AttachmentConstraint')),
            ],
        ),
        migrations.CreateModel(
            name='MetakeyValueSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.CharField(blank=True, max_length=64, null=True)),
                ('end_time', models.CharField(blank=True, max_length=64, null=True)),
                ('start_inclusive', models.NullBooleanField()),
                ('end_inclusive', models.NullBooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='NodeCodelist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.CharField(max_length=255, unique=True)),
                ('depth', models.PositiveIntegerField()),
                ('numchild', models.PositiveIntegerField(default=0)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('changed_date', models.DateTimeField(auto_now=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('version', models.CharField(default='1.0', max_length=16, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*', 32), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')])),
                ('valid_from', models.DateTimeField(blank=True, null=True)),
                ('valid_to', models.DateTimeField(blank=True, null=True)),
                ('is_final', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=128)),
                ('id_code', models.CharField(max_length=255, validators=[django.core.validators.RegexValidator(re.compile('[A-Za-z][A-Za-z0-9_\\-]*', 32), 'Enter a value of type NCNameIDType that has pattern "([A-Za-z][A-Za-z0-9_\\-]*)"', 'invalid_pattern')], verbose_name='id')),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ObsValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('changed_date', models.DateTimeField(auto_now=True)),
                ('annotations', models.ManyToManyField(blank=True, related_name='_obsvalue_annotations_+', to='hydro_sdmx.Annotation')),
                ('changed_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='changed by')),
                ('concept', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='concept_for_obs_values', to='hydro_sdmx.Concept')),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Organisation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('changed_date', models.DateTimeField(auto_now=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('id_code', models.CharField(max_length=64, unique=True, validators=[django.core.validators.RegexValidator(re.compile('[A-Za-z][A-Za-z0-9_\\-]*', 32), 'Enter a value of type NCNameIDType that has pattern "([A-Za-z][A-Za-z0-9_\\-]*)"', 'invalid_pattern')], verbose_name='id')),
                ('name', models.CharField(max_length=128)),
                ('annotations', models.ManyToManyField(blank=True, related_name='_organisation_annotations_+', to='hydro_sdmx.Annotation')),
                ('changed_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='changed by')),
                ('contacts', models.ManyToManyField(to='hydro_sdmx.Contact')),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Organisation')),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OrganisationMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('annotations', models.ManyToManyField(to='hydro_sdmx.Annotation')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='hydro_sdmx.Organisation')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='hydro_sdmx.Organisation')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OrganisationSchemeMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('changed_date', models.DateTimeField(auto_now=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('id_code', models.CharField(max_length=64, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id')),
                ('name', models.CharField(max_length=128)),
                ('annotations', models.ManyToManyField(blank=True, related_name='_organisationschememap_annotations_+', to='hydro_sdmx.Annotation')),
                ('changed_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='changed by')),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OrganisationUnitScheme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('changed_date', models.DateTimeField(auto_now=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('version', models.CharField(default='1.0', max_length=16, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*', 32), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')])),
                ('valid_from', models.DateTimeField(blank=True, null=True)),
                ('valid_to', models.DateTimeField(blank=True, null=True)),
                ('id_code', models.CharField(max_length=64, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id')),
                ('is_final', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=128)),
                ('agency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Organisation')),
                ('annotations', models.ManyToManyField(blank=True, related_name='_organisationunitscheme_annotations_+', to='hydro_sdmx.Annotation')),
                ('changed_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='changed by')),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('organisation_units', models.ManyToManyField(related_name='organisation_unit_schemes', to='hydro_sdmx.Organisation')),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Process',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('changed_date', models.DateTimeField(auto_now=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('version', models.CharField(default='1.0', max_length=16, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*', 32), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')])),
                ('valid_from', models.DateTimeField(blank=True, null=True)),
                ('valid_to', models.DateTimeField(blank=True, null=True)),
                ('id_code', models.CharField(max_length=64, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id')),
                ('is_final', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=128)),
                ('agency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Organisation')),
                ('annotations', models.ManyToManyField(blank=True, related_name='_process_annotations_+', to='hydro_sdmx.Annotation')),
                ('changed_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='changed by')),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProcessStep',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('changed_date', models.DateTimeField(auto_now=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=128, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('id_code', models.CharField(max_length=64, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id')),
                ('annotations', models.ManyToManyField(blank=True, related_name='_processstep_annotations_+', to='hydro_sdmx.Annotation')),
                ('changed_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='changed by')),
                ('computation', models.ManyToManyField(to='hydro_sdmx.Computation')),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReferenceObject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('changed_date', models.DateTimeField(auto_now=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('version', models.CharField(default='1.0', max_length=16, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*', 32), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')])),
                ('valid_from', models.DateTimeField(blank=True, null=True)),
                ('valid_to', models.DateTimeField(blank=True, null=True)),
                ('id_code', models.CharField(max_length=64, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id')),
                ('is_final', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=128)),
                ('agency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Organisation')),
                ('annotations', models.ManyToManyField(blank=True, related_name='_report_annotations_+', to='hydro_sdmx.Annotation')),
                ('changed_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='changed by')),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('metadata_attributes', models.ManyToManyField(related_name='reports', through='hydro_sdmx.MetadataAttribute', to='hydro_sdmx.Concept')),
                ('targets', models.ManyToManyField(to='hydro_sdmx.MetadataTarget')),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReportingCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('changed_date', models.DateTimeField(auto_now=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('id_code', models.CharField(blank=True, max_length=64, null=True, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id')),
                ('name', models.CharField(blank=True, max_length=128, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('annotations', models.ManyToManyField(blank=True, related_name='_reportingcategory_annotations_+', to='hydro_sdmx.Annotation')),
                ('changed_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='changed by')),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('dataflows', models.ManyToManyField(to='hydro_sdmx.Dataflow')),
                ('dsds', models.ManyToManyField(to='hydro_sdmx.DataStructure')),
                ('metadataflows', models.ManyToManyField(to='hydro_sdmx.Metadataflow')),
                ('metadsds', models.ManyToManyField(to='hydro_sdmx.MetadataStructure')),
                ('wrapper', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.CategoryScheme', verbose_name='Reporting Taxonomy')),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReportingCategoryMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('annotations', models.ManyToManyField(to='hydro_sdmx.Annotation')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='hydro_sdmx.ReportingCategory')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='hydro_sdmx.ReportingCategory')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReportingTaxonomy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('changed_date', models.DateTimeField(auto_now=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('version', models.CharField(default='1.0', max_length=16, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*', 32), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')])),
                ('valid_from', models.DateTimeField(blank=True, null=True)),
                ('valid_to', models.DateTimeField(blank=True, null=True)),
                ('id_code', models.CharField(max_length=64, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id')),
                ('is_final', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=128)),
                ('agency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Organisation')),
                ('annotations', models.ManyToManyField(blank=True, related_name='_reportingtaxonomy_annotations_+', to='hydro_sdmx.Annotation')),
                ('changed_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='changed by')),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReportingTaxonomyMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('changed_date', models.DateTimeField(auto_now=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('id_code', models.CharField(max_length=64, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id')),
                ('name', models.CharField(max_length=128)),
                ('annotations', models.ManyToManyField(blank=True, related_name='_reportingtaxonomymap_annotations_+', to='hydro_sdmx.Annotation')),
                ('changed_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='changed by')),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reporting_taxonomy_map_sources', to='hydro_sdmx.ReportingTaxonomy')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reporting_taxonomy_map_targets', to='hydro_sdmx.ReportingTaxonomy')),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Representation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('changed_date', models.DateTimeField(auto_now=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('id_code', models.CharField(blank=True, max_length=64, null=True, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id')),
                ('annotations', models.ManyToManyField(blank=True, related_name='_representation_annotations_+', to='hydro_sdmx.Annotation')),
                ('changed_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='changed by')),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('enumeration', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='hydro_sdmx.Codelist')),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RepresentationMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('to_value_type', models.CharField(choices=[('Value', 'Value'), ('Name', 'Name'), ('Desription', 'Description')], max_length=16)),
                ('codelist_map', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='hydro_sdmx.CodelistMap')),
            ],
        ),
        migrations.CreateModel(
            name='SimpleDataKey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('simple_dim_key_code', models.IntegerField()),
                ('dataflow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Dataflow')),
            ],
        ),
        migrations.CreateModel(
            name='SimpleDimValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=64)),
                ('dimension', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Dimension')),
                ('simple_data_key', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.SimpleDataKey')),
            ],
        ),
        migrations.CreateModel(
            name='StructureSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('changed_date', models.DateTimeField(auto_now=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('version', models.CharField(default='1.0', max_length=16, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*', 32), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')])),
                ('valid_from', models.DateTimeField(blank=True, null=True)),
                ('valid_to', models.DateTimeField(blank=True, null=True)),
                ('id_code', models.CharField(max_length=64, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id')),
                ('is_final', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=128)),
                ('agency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Organisation')),
                ('annotations', models.ManyToManyField(blank=True, related_name='_structureset_annotations_+', to='hydro_sdmx.Annotation')),
                ('category_scheme_maps', models.ManyToManyField(to='hydro_sdmx.CategorySchemeMap')),
                ('changed_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='changed by')),
                ('codelist_maps', models.ManyToManyField(to='hydro_sdmx.CodelistMap')),
                ('concept_scheme_maps', models.ManyToManyField(to='hydro_sdmx.ConceptSchemeMap')),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('data_structure_maps', models.ManyToManyField(to='hydro_sdmx.DataStructureMap')),
                ('dataflow_structure_maps', models.ManyToManyField(to='hydro_sdmx.DataflowStructureMap')),
                ('hybrid_codelist_maps', models.ManyToManyField(to='hydro_sdmx.HybridCodelistMap')),
                ('metadata_structure_maps', models.ManyToManyField(to='hydro_sdmx.MetadataStructureMap')),
                ('metadataflow_structure_maps', models.ManyToManyField(to='hydro_sdmx.MetadataflowStructureMap')),
                ('organisation_scheme_maps', models.ManyToManyField(to='hydro_sdmx.OrganisationSchemeMap')),
                ('related_structures', models.ManyToManyField(to='hydro_sdmx.ReferenceObject')),
                ('reporting_taxonomy_maps', models.ManyToManyField(to='hydro_sdmx.ReportingTaxonomyMap')),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TelFax',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telephone', models.CharField(max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='TextFormatInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('changed_date', models.DateTimeField(auto_now=True)),
                ('id_code', models.CharField(blank=True, max_length=64, null=True, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id')),
                ('name', models.CharField(blank=True, max_length=128, null=True)),
                ('text_type', models.CharField(blank=True, choices=[('DateTime', 'DateTime'), ('Short', 'Short'), ('ExclusiveValueRange', 'ExclusiveValueRange'), ('Integer', 'Integer'), ('StandardTimePeriod', 'StandardTimePeriod'), ('GregorianYear', 'GregorianYear'), ('ReportingMonth', 'ReportingMonth'), ('BigInteger', 'BigInteger'), ('ReportingTrimester', 'ReportingTrimester'), ('ReportingDay', 'ReportingDay'), ('TimeRange', 'TimeRange'), ('MonthDay', 'MonthDay'), ('GregorianDay', 'GregorianDay'), ('Decimal', 'Decimal'), ('Count', 'Count'), ('IdentifiableReference', 'IdentifiableReference'), ('DataSetReference', 'DataSetReference'), (None, 'None'), ('Long', 'Long'), ('String', 'String'), ('Boolean', 'Boolean'), ('InclusiveValueRange', 'InclusiveValueRange'), ('ReportingTimePeriod', 'ReportingTimePeriod'), ('BasicTimePeriod', 'BasicTimePeriod'), ('ReportingWeek', 'ReportingWeek'), ('Duration', 'Duration'), ('Month', 'Month'), ('URI', 'URI'), ('Day', 'Day'), ('Time', 'Time'), ('ReportingQuarter', 'ReportingQuarter'), ('Float', 'Float'), ('Double', 'Double'), ('Incremental', 'Incremental'), ('GregorianYearMonth', 'GregorianYearMonth'), ('XHTML', 'XHTML'), ('KeyValues', 'KeyValues'), ('AlphaNumeric', 'AlphaNumeric'), ('Numeric', 'Numeric'), ('GregorianTimePeriod', 'GregorianTimePeriod'), ('ReportingYear', 'ReportingYear'), ('ReportingSemester', 'ReportingSemester'), ('Alpha', 'Alpha'), ('ObservationalTimePeriod', 'ObservationalTimePeriod'), ('AttachmentConstraintReference', 'AttachmentConstraintReference')], max_length=64, null=True)),
                ('is_sequence', models.NullBooleanField()),
                ('interval', models.DecimalField(blank=True, decimal_places=10, max_digits=19, null=True)),
                ('start_value', models.DecimalField(blank=True, decimal_places=10, max_digits=19, null=True)),
                ('end_value', models.DecimalField(blank=True, decimal_places=10, max_digits=19, null=True)),
                ('time_interval', models.DurationField(blank=True, null=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('min_length', models.PositiveIntegerField(blank=True, null=True)),
                ('max_length', models.PositiveIntegerField(blank=True, null=True)),
                ('min_value', models.DecimalField(blank=True, decimal_places=10, max_digits=19, null=True)),
                ('max_value', models.DecimalField(blank=True, decimal_places=10, max_digits=19, null=True)),
                ('decimals', models.PositiveIntegerField(blank=True, null=True)),
                ('pattern', models.TextField(blank=True, null=True)),
                ('is_multiLingual', models.NullBooleanField()),
                ('changed_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='changed by')),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TimeValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.CharField(blank=True, max_length=64, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Transition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('changed_date', models.DateTimeField(auto_now=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('id_code', models.CharField(blank=True, max_length=64, null=True, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id')),
                ('local_id', models.CharField(blank=True, max_length=64, null=True, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')])),
                ('annotations', models.ManyToManyField(blank=True, related_name='_transition_annotations_+', to='hydro_sdmx.Annotation')),
                ('changed_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='changed by')),
                ('conditions', models.ManyToManyField(to='hydro_sdmx.Condition')),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('target_step', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='hydro_sdmx.ProcessStep')),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='URI',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uri', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='ValueMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(max_length=128)),
                ('target', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='X400',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('x400', models.CharField(max_length=64)),
            ],
        ),
        migrations.AddField(
            model_name='representationmap',
            name='to_text_format',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='hydro_sdmx.TextFormatInfo'),
        ),
        migrations.AddField(
            model_name='representationmap',
            name='value_map',
            field=models.ManyToManyField(related_name='_representationmap_value_map_+', to='hydro_sdmx.ValueMapping'),
        ),
        migrations.AddField(
            model_name='representation',
            name='enumeration_format',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='hydro_sdmx.TextFormatInfo'),
        ),
        migrations.AddField(
            model_name='representation',
            name='text_format',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='hydro_sdmx.TextFormatInfo'),
        ),
        migrations.AddField(
            model_name='reportingcategorymap',
            name='wrapper',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reporting_category_maps', to='hydro_sdmx.ReportingTaxonomyMap'),
        ),
        migrations.AddField(
            model_name='processstep',
            name='inpout',
            field=models.ManyToManyField(related_name='process_step_inputs', to='hydro_sdmx.ReferenceObject'),
        ),
        migrations.AddField(
            model_name='processstep',
            name='next_process',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.ProcessStep'),
        ),
        migrations.AddField(
            model_name='processstep',
            name='output',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='process_step_outputs', to='hydro_sdmx.ReferenceObject'),
        ),
        migrations.AddField(
            model_name='processstep',
            name='transition',
            field=models.ManyToManyField(to='hydro_sdmx.Transition'),
        ),
        migrations.AddField(
            model_name='processstep',
            name='wrapper',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Process', verbose_name='Process'),
        ),
        migrations.AddField(
            model_name='organisationschememap',
            name='source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organisation_scheme_map_sources', to='hydro_sdmx.ReferenceObject'),
        ),
        migrations.AddField(
            model_name='organisationschememap',
            name='target',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organisation_scheme_map_targets', to='hydro_sdmx.ReferenceObject'),
        ),
        migrations.AddField(
            model_name='organisationmap',
            name='wrapper',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organisation_maps', to='hydro_sdmx.OrganisationSchemeMap'),
        ),
        migrations.AddField(
            model_name='obsvalue',
            name='representation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='obs_values', to='hydro_sdmx.Representation'),
        ),
        migrations.AddField(
            model_name='nodecodelist',
            name='agency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Organisation'),
        ),
        migrations.AddField(
            model_name='nodecodelist',
            name='annotations',
            field=models.ManyToManyField(blank=True, related_name='_nodecodelist_annotations_+', to='hydro_sdmx.Annotation'),
        ),
        migrations.AddField(
            model_name='nodecodelist',
            name='changed_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='changed by'),
        ),
        migrations.AddField(
            model_name='nodecodelist',
            name='created_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by'),
        ),
        migrations.AddField(
            model_name='metakeyvalueset',
            name='data_keys',
            field=models.ManyToManyField(to='hydro_sdmx.SimpleDataKey'),
        ),
        migrations.AddField(
            model_name='metakeyvalueset',
            name='data_sets',
            field=models.ManyToManyField(to='hydro_sdmx.Dataset'),
        ),
        migrations.AddField(
            model_name='metakeyvalueset',
            name='metadata_target_region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metakey_value_sets', to='hydro_sdmx.MetadataTargetRegion'),
        ),
        migrations.AddField(
            model_name='metakeyvalueset',
            name='objekts',
            field=models.ManyToManyField(to='hydro_sdmx.ReferenceObject'),
        ),
        migrations.AddField(
            model_name='metakeyvalueset',
            name='target_component',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.MetadataTargetComponent'),
        ),
        migrations.AddField(
            model_name='metakeyvalueset',
            name='values',
            field=models.ManyToManyField(to='hydro_sdmx.TimeValue'),
        ),
        migrations.AddField(
            model_name='metakeyvalue',
            name='data_key_value',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.SimpleDataKey'),
        ),
        migrations.AddField(
            model_name='metakeyvalue',
            name='data_set_value',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Dataset'),
        ),
        migrations.AddField(
            model_name='metakeyvalue',
            name='metadata_key',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='key_values', to='hydro_sdmx.MetadataKey'),
        ),
        migrations.AddField(
            model_name='metakeyvalue',
            name='object_value',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.ReferenceObject'),
        ),
        migrations.AddField(
            model_name='metakeyvalue',
            name='target_component',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.MetadataTargetComponent'),
        ),
        migrations.AddField(
            model_name='metadatatargetregion',
            name='report',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Report'),
        ),
        migrations.AddField(
            model_name='metadatatargetregion',
            name='target',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.MetadataTarget'),
        ),
        migrations.AddField(
            model_name='metadatatarget',
            name='components',
            field=models.ManyToManyField(to='hydro_sdmx.MetadataTargetComponent'),
        ),
        migrations.AddField(
            model_name='metadatatarget',
            name='created_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by'),
        ),
        migrations.AddField(
            model_name='metadatatarget',
            name='structure',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='targets', to='hydro_sdmx.MetadataStructure'),
        ),
        migrations.AddField(
            model_name='metadatastructure',
            name='agency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Organisation'),
        ),
        migrations.AddField(
            model_name='metadatastructure',
            name='annotations',
            field=models.ManyToManyField(blank=True, related_name='_metadatastructure_annotations_+', to='hydro_sdmx.Annotation'),
        ),
        migrations.AddField(
            model_name='metadatastructure',
            name='changed_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='changed by'),
        ),
        migrations.AddField(
            model_name='metadatastructure',
            name='created_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by'),
        ),
        migrations.AddField(
            model_name='metadatastructure',
            name='report_annotations',
            field=models.ManyToManyField(related_name='_metadatastructure_report_annotations_+', to='hydro_sdmx.Annotation'),
        ),
        migrations.AddField(
            model_name='metadatastructure',
            name='reports',
            field=models.ManyToManyField(to='hydro_sdmx.Report'),
        ),
        migrations.AddField(
            model_name='metadatastructure',
            name='target_annotations',
            field=models.ManyToManyField(related_name='_metadatastructure_target_annotations_+', to='hydro_sdmx.Annotation'),
        ),
        migrations.AddField(
            model_name='metadataprovisionagreement',
            name='agency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Organisation'),
        ),
        migrations.AddField(
            model_name='metadataprovisionagreement',
            name='annotations',
            field=models.ManyToManyField(blank=True, related_name='_metadataprovisionagreement_annotations_+', to='hydro_sdmx.Annotation'),
        ),
        migrations.AddField(
            model_name='metadataprovisionagreement',
            name='changed_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='changed by'),
        ),
        migrations.AddField(
            model_name='metadataprovisionagreement',
            name='created_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by'),
        ),
        migrations.AddField(
            model_name='metadataprovisionagreement',
            name='data_provider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metadata_provision_agreements', to='hydro_sdmx.Organisation'),
        ),
        migrations.AddField(
            model_name='metadataprovisionagreement',
            name='data_provider_scheme',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metadata_provision_agreements', to='hydro_sdmx.DataProviderScheme'),
        ),
        migrations.AddField(
            model_name='metadataprovisionagreement',
            name='structure_usage',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metadata_provider_agreements', to='hydro_sdmx.Metadataflow'),
        ),
        migrations.AddField(
            model_name='metadatakey',
            name='metadata_key_set',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_keys', to='hydro_sdmx.MetadataKeySet'),
        ),
        migrations.AddField(
            model_name='metadatakey',
            name='report',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Report'),
        ),
        migrations.AddField(
            model_name='metadatakey',
            name='target',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.MetadataTarget'),
        ),
        migrations.AddField(
            model_name='metadataflow',
            name='agency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Organisation'),
        ),
        migrations.AddField(
            model_name='metadataflow',
            name='annotations',
            field=models.ManyToManyField(blank=True, related_name='_metadataflow_annotations_+', to='hydro_sdmx.Annotation'),
        ),
        migrations.AddField(
            model_name='metadataflow',
            name='changed_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='changed by'),
        ),
        migrations.AddField(
            model_name='metadataflow',
            name='created_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by'),
        ),
        migrations.AddField(
            model_name='metadataflow',
            name='structure',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.MetadataStructure'),
        ),
        migrations.AddField(
            model_name='metadatacomponentmap',
            name='representation_mapping',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='hydro_sdmx.RepresentationMap'),
        ),
        migrations.AddField(
            model_name='metadatacomponentmap',
            name='source_metaattr',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='hydro_sdmx.MetadataAttribute'),
        ),
        migrations.AddField(
            model_name='metadatacomponentmap',
            name='source_metacomp',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='hydro_sdmx.MetadataTargetComponent'),
        ),
        migrations.AddField(
            model_name='metadatacomponentmap',
            name='target_metaattr',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='hydro_sdmx.MetadataAttribute'),
        ),
        migrations.AddField(
            model_name='metadatacomponentmap',
            name='target_metacomp',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='hydro_sdmx.MetadataTargetComponent'),
        ),
        migrations.AddField(
            model_name='metadatacomponentmap',
            name='wrapper_structure',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metadata_component_maps', to='hydro_sdmx.MetadataStructureMap'),
        ),
        migrations.AddField(
            model_name='metadatacomponentmap',
            name='wrapper_usage',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metadata_component_maps', to='hydro_sdmx.MetadataflowStructureMap'),
        ),
        migrations.AddField(
            model_name='metadataattribute',
            name='representation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='metadata_attributes', to='hydro_sdmx.Representation'),
        ),
        migrations.AddField(
            model_name='metadataattribute',
            name='wrapper',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Report'),
        ),
        migrations.AddField(
            model_name='metacontentconstraint',
            name='agency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Organisation'),
        ),
        migrations.AddField(
            model_name='metacontentconstraint',
            name='annotations',
            field=models.ManyToManyField(blank=True, related_name='_metacontentconstraint_annotations_+', to='hydro_sdmx.Annotation'),
        ),
        migrations.AddField(
            model_name='metacontentconstraint',
            name='attached2dataset',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Dataset'),
        ),
        migrations.AddField(
            model_name='metacontentconstraint',
            name='attached2datasource',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Datasource'),
        ),
        migrations.AddField(
            model_name='metacontentconstraint',
            name='attached2metadataflows',
            field=models.ManyToManyField(related_name='content_constraints', to='hydro_sdmx.Metadataflow'),
        ),
        migrations.AddField(
            model_name='metacontentconstraint',
            name='attached2metadsds',
            field=models.ManyToManyField(related_name='content_constraints', to='hydro_sdmx.MetadataStructure'),
        ),
        migrations.AddField(
            model_name='metacontentconstraint',
            name='attached2metaprovision',
            field=models.ManyToManyField(to='hydro_sdmx.MetadataProvisionAgreement'),
        ),
        migrations.AddField(
            model_name='metacontentconstraint',
            name='changed_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='changed by'),
        ),
        migrations.AddField(
            model_name='metacontentconstraint',
            name='created_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by'),
        ),
        migrations.AddField(
            model_name='metaattrvalueset',
            name='attribute',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.MetadataAttribute'),
        ),
        migrations.AddField(
            model_name='metaattrvalueset',
            name='metadata_target_region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metaattr_value_set', to='hydro_sdmx.MetadataTargetRegion'),
        ),
        migrations.AddField(
            model_name='metaattrvalueset',
            name='values',
            field=models.ManyToManyField(to='hydro_sdmx.Code'),
        ),
        migrations.AddField(
            model_name='metaattachmentconstraint',
            name='agency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Organisation'),
        ),
        migrations.AddField(
            model_name='metaattachmentconstraint',
            name='annotations',
            field=models.ManyToManyField(blank=True, related_name='_metaattachmentconstraint_annotations_+', to='hydro_sdmx.Annotation'),
        ),
        migrations.AddField(
            model_name='metaattachmentconstraint',
            name='attached2datasets',
            field=models.ManyToManyField(to='hydro_sdmx.Dataset'),
        ),
        migrations.AddField(
            model_name='metaattachmentconstraint',
            name='attached2datasources',
            field=models.ManyToManyField(to='hydro_sdmx.Datasource'),
        ),
        migrations.AddField(
            model_name='metaattachmentconstraint',
            name='attached2metadataflows',
            field=models.ManyToManyField(related_name='attachment_constraints', to='hydro_sdmx.Metadataflow'),
        ),
        migrations.AddField(
            model_name='metaattachmentconstraint',
            name='attached2metadsds',
            field=models.ManyToManyField(related_name='attachment_constraints', to='hydro_sdmx.MetadataStructure'),
        ),
        migrations.AddField(
            model_name='metaattachmentconstraint',
            name='attached2metaprovision',
            field=models.ManyToManyField(to='hydro_sdmx.MetadataProvisionAgreement'),
        ),
        migrations.AddField(
            model_name='metaattachmentconstraint',
            name='changed_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='changed by'),
        ),
        migrations.AddField(
            model_name='metaattachmentconstraint',
            name='created_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by'),
        ),
        migrations.AddField(
            model_name='level',
            name='coding_format',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.TextFormatInfo'),
        ),
        migrations.AddField(
            model_name='level',
            name='created_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by'),
        ),
        migrations.AddField(
            model_name='level',
            name='level',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='hydro_sdmx.Level'),
        ),
        migrations.AddField(
            model_name='hierarchy',
            name='level',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Level'),
        ),
        migrations.AddField(
            model_name='hierarchicalcodelist',
            name='agency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Organisation'),
        ),
        migrations.AddField(
            model_name='hierarchicalcodelist',
            name='annotations',
            field=models.ManyToManyField(blank=True, related_name='_hierarchicalcodelist_annotations_+', to='hydro_sdmx.Annotation'),
        ),
        migrations.AddField(
            model_name='hierarchicalcodelist',
            name='changed_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='changed by'),
        ),
        migrations.AddField(
            model_name='hierarchicalcodelist',
            name='created_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by'),
        ),
        migrations.AddField(
            model_name='hierarchicalcodelist',
            name='hierarchies',
            field=models.ManyToManyField(to='hydro_sdmx.Hierarchy'),
        ),
        migrations.AddField(
            model_name='dimension',
            name='groups',
            field=models.ManyToManyField(related_name='dimensions', to='hydro_sdmx.Group'),
        ),
        migrations.AddField(
            model_name='dimension',
            name='measure_representation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='measure_dimensions', to='hydro_sdmx.ConceptScheme'),
        ),
        migrations.AddField(
            model_name='dimension',
            name='representation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dimensions', to='hydro_sdmx.Representation'),
        ),
        migrations.AddField(
            model_name='dimension',
            name='roles',
            field=models.ManyToManyField(related_name='role_for_dimensions', to='hydro_sdmx.Concept'),
        ),
        migrations.AddField(
            model_name='dimension',
            name='wrapper',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.DataStructure'),
        ),
        migrations.AddField(
            model_name='datastructure',
            name='agency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Organisation'),
        ),
        migrations.AddField(
            model_name='datastructure',
            name='annotations',
            field=models.ManyToManyField(blank=True, related_name='_datastructure_annotations_+', to='hydro_sdmx.Annotation'),
        ),
        migrations.AddField(
            model_name='datastructure',
            name='attribute_annotations',
            field=models.ManyToManyField(related_name='_datastructure_attribute_annotations_+', to='hydro_sdmx.Annotation'),
        ),
        migrations.AddField(
            model_name='datastructure',
            name='attributes',
            field=models.ManyToManyField(related_name='attributes', through='hydro_sdmx.Attribute', to='hydro_sdmx.Concept'),
        ),
        migrations.AddField(
            model_name='datastructure',
            name='changed_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='changed by'),
        ),
        migrations.AddField(
            model_name='datastructure',
            name='created_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by'),
        ),
        migrations.AddField(
            model_name='datastructure',
            name='dimension_annotations',
            field=models.ManyToManyField(related_name='_datastructure_dimension_annotations_+', to='hydro_sdmx.Annotation'),
        ),
        migrations.AddField(
            model_name='datastructure',
            name='dimensions',
            field=models.ManyToManyField(related_name='dimensions', through='hydro_sdmx.Dimension', to='hydro_sdmx.Concept'),
        ),
        migrations.AddField(
            model_name='datastructure',
            name='groups',
            field=models.ManyToManyField(related_name='dsds', to='hydro_sdmx.Group'),
        ),
        migrations.AddField(
            model_name='datastructure',
            name='measure_annotations',
            field=models.ManyToManyField(related_name='_datastructure_measure_annotations_+', to='hydro_sdmx.Annotation'),
        ),
        migrations.AddField(
            model_name='datastructure',
            name='obs_value',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dsds', to='hydro_sdmx.ObsValue'),
        ),
        migrations.AddField(
            model_name='dataset',
            name='data_provider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Organisation'),
        ),
        migrations.AddField(
            model_name='dataprovisionagreement',
            name='agency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Organisation'),
        ),
        migrations.AddField(
            model_name='dataprovisionagreement',
            name='annotations',
            field=models.ManyToManyField(blank=True, related_name='_dataprovisionagreement_annotations_+', to='hydro_sdmx.Annotation'),
        ),
        migrations.AddField(
            model_name='dataprovisionagreement',
            name='changed_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='changed by'),
        ),
        migrations.AddField(
            model_name='dataprovisionagreement',
            name='created_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by'),
        ),
        migrations.AddField(
            model_name='dataprovisionagreement',
            name='data_provider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_provision_agreements', to='hydro_sdmx.Organisation'),
        ),
        migrations.AddField(
            model_name='dataprovisionagreement',
            name='data_provider_scheme',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_provision_agreements', to='hydro_sdmx.DataProviderScheme'),
        ),
        migrations.AddField(
            model_name='dataprovisionagreement',
            name='structure_usage',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_provider_agreements', to='hydro_sdmx.Dataflow'),
        ),
        migrations.AddField(
            model_name='dataproviderscheme',
            name='agency',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Organisation'),
        ),
        migrations.AddField(
            model_name='dataproviderscheme',
            name='annotations',
            field=models.ManyToManyField(blank=True, related_name='_dataproviderscheme_annotations_+', to='hydro_sdmx.Annotation'),
        ),
        migrations.AddField(
            model_name='dataproviderscheme',
            name='changed_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='changed by'),
        ),
        migrations.AddField(
            model_name='dataproviderscheme',
            name='created_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by'),
        ),
        migrations.AddField(
            model_name='dataproviderscheme',
            name='data_providers',
            field=models.ManyToManyField(related_name='data_provider_schemes', to='hydro_sdmx.Organisation'),
        ),
        migrations.AddField(
            model_name='datakey',
            name='data_key_set',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_keys', to='hydro_sdmx.DataKeySet'),
        ),
        migrations.AddField(
            model_name='dataflow',
            name='agency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Organisation'),
        ),
        migrations.AddField(
            model_name='dataflow',
            name='annotations',
            field=models.ManyToManyField(blank=True, related_name='_dataflow_annotations_+', to='hydro_sdmx.Annotation'),
        ),
        migrations.AddField(
            model_name='dataflow',
            name='changed_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='changed by'),
        ),
        migrations.AddField(
            model_name='dataflow',
            name='created_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by'),
        ),
        migrations.AddField(
            model_name='dataflow',
            name='structure',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.DataStructure'),
        ),
        migrations.AddField(
            model_name='dataconsumerscheme',
            name='agency',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Organisation'),
        ),
        migrations.AddField(
            model_name='dataconsumerscheme',
            name='annotations',
            field=models.ManyToManyField(blank=True, related_name='_dataconsumerscheme_annotations_+', to='hydro_sdmx.Annotation'),
        ),
        migrations.AddField(
            model_name='dataconsumerscheme',
            name='changed_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='changed by'),
        ),
        migrations.AddField(
            model_name='dataconsumerscheme',
            name='created_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by'),
        ),
        migrations.AddField(
            model_name='dataconsumerscheme',
            name='data_consumers',
            field=models.ManyToManyField(related_name='data_consumer_schemes', to='hydro_sdmx.Organisation'),
        ),
        migrations.AddField(
            model_name='datacomponentmap',
            name='representation_mapping',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='hydro_sdmx.RepresentationMap'),
        ),
        migrations.AddField(
            model_name='datacomponentmap',
            name='source_attr',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='hydro_sdmx.Attribute'),
        ),
        migrations.AddField(
            model_name='datacomponentmap',
            name='source_dim',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='hydro_sdmx.Dimension'),
        ),
        migrations.AddField(
            model_name='datacomponentmap',
            name='source_obs',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='hydro_sdmx.ObsValue'),
        ),
        migrations.AddField(
            model_name='datacomponentmap',
            name='target_attr',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='hydro_sdmx.Attribute'),
        ),
        migrations.AddField(
            model_name='datacomponentmap',
            name='target_dim',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='hydro_sdmx.Dimension'),
        ),
        migrations.AddField(
            model_name='datacomponentmap',
            name='target_obs',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='hydro_sdmx.ObsValue'),
        ),
        migrations.AddField(
            model_name='datacomponentmap',
            name='wrapper',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_component_maps', to='hydro_sdmx.DataflowStructureMap'),
        ),
        migrations.AddField(
            model_name='contentconstraint',
            name='agency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Organisation'),
        ),
        migrations.AddField(
            model_name='contentconstraint',
            name='annotations',
            field=models.ManyToManyField(blank=True, related_name='_contentconstraint_annotations_+', to='hydro_sdmx.Annotation'),
        ),
        migrations.AddField(
            model_name='contentconstraint',
            name='attached2dataflows',
            field=models.ManyToManyField(related_name='content_constraints', to='hydro_sdmx.Dataflow'),
        ),
        migrations.AddField(
            model_name='contentconstraint',
            name='attached2dataset',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Dataset'),
        ),
        migrations.AddField(
            model_name='contentconstraint',
            name='attached2datasource',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Datasource'),
        ),
        migrations.AddField(
            model_name='contentconstraint',
            name='attached2dsds',
            field=models.ManyToManyField(related_name='content_constraints', to='hydro_sdmx.DataStructure'),
        ),
        migrations.AddField(
            model_name='contentconstraint',
            name='attached2provision',
            field=models.ManyToManyField(to='hydro_sdmx.DataProvisionAgreement'),
        ),
        migrations.AddField(
            model_name='contentconstraint',
            name='changed_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='changed by'),
        ),
        migrations.AddField(
            model_name='contentconstraint',
            name='created_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by'),
        ),
        migrations.AddField(
            model_name='contact',
            name='emails',
            field=models.ManyToManyField(to='hydro_sdmx.Email'),
        ),
        migrations.AddField(
            model_name='contact',
            name='faxes',
            field=models.ManyToManyField(related_name='_contact_faxes_+', to='hydro_sdmx.TelFax'),
        ),
        migrations.AddField(
            model_name='contact',
            name='telephones',
            field=models.ManyToManyField(related_name='_contact_telephones_+', to='hydro_sdmx.TelFax'),
        ),
        migrations.AddField(
            model_name='contact',
            name='uris',
            field=models.ManyToManyField(to='hydro_sdmx.URI'),
        ),
        migrations.AddField(
            model_name='contact',
            name='x400s',
            field=models.ManyToManyField(to='hydro_sdmx.X400'),
        ),
        migrations.AddField(
            model_name='conceptscheme',
            name='agency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Organisation'),
        ),
        migrations.AddField(
            model_name='conceptscheme',
            name='annotations',
            field=models.ManyToManyField(blank=True, related_name='_conceptscheme_annotations_+', to='hydro_sdmx.Annotation'),
        ),
        migrations.AddField(
            model_name='conceptscheme',
            name='changed_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='changed by'),
        ),
        migrations.AddField(
            model_name='conceptscheme',
            name='created_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by'),
        ),
        migrations.AddField(
            model_name='conceptmap',
            name='wrapper',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='concept_maps', to='hydro_sdmx.ConceptSchemeMap'),
        ),
        migrations.AddField(
            model_name='concept',
            name='representation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='hydro_sdmx.Representation'),
        ),
        migrations.AddField(
            model_name='concept',
            name='wrapper',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.ConceptScheme', verbose_name='Concept Scheme'),
        ),
        migrations.AddField(
            model_name='codelist',
            name='agency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Organisation'),
        ),
        migrations.AddField(
            model_name='codelist',
            name='annotations',
            field=models.ManyToManyField(blank=True, related_name='_codelist_annotations_+', to='hydro_sdmx.Annotation'),
        ),
        migrations.AddField(
            model_name='codelist',
            name='changed_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='changed by'),
        ),
        migrations.AddField(
            model_name='codelist',
            name='created_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by'),
        ),
        migrations.AddField(
            model_name='code',
            name='wrapper',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='codes', to='hydro_sdmx.Codelist', verbose_name='Codelist'),
        ),
        migrations.AddField(
            model_name='categoryscheme',
            name='agency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Organisation'),
        ),
        migrations.AddField(
            model_name='categoryscheme',
            name='annotations',
            field=models.ManyToManyField(blank=True, related_name='_categoryscheme_annotations_+', to='hydro_sdmx.Annotation'),
        ),
        migrations.AddField(
            model_name='categoryscheme',
            name='changed_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='changed by'),
        ),
        migrations.AddField(
            model_name='categoryscheme',
            name='created_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by'),
        ),
        migrations.AddField(
            model_name='categorymap',
            name='wrapper',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category_maps', to='hydro_sdmx.CategorySchemeMap'),
        ),
        migrations.AddField(
            model_name='category',
            name='wrapper',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.CategoryScheme', verbose_name='Category Scheme'),
        ),
        migrations.AddField(
            model_name='categorization',
            name='agency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Organisation'),
        ),
        migrations.AddField(
            model_name='categorization',
            name='annotations',
            field=models.ManyToManyField(blank=True, related_name='_categorization_annotations_+', to='hydro_sdmx.Annotation'),
        ),
        migrations.AddField(
            model_name='categorization',
            name='changed_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='changed by'),
        ),
        migrations.AddField(
            model_name='categorization',
            name='created_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by'),
        ),
        migrations.AddField(
            model_name='categorization',
            name='source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.ReferenceObject'),
        ),
        migrations.AddField(
            model_name='categorization',
            name='target',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Category'),
        ),
        migrations.AddField(
            model_name='attribute',
            name='attached2dim_in_group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attached_attributes2each_group_dim', to='hydro_sdmx.Group'),
        ),
        migrations.AddField(
            model_name='attribute',
            name='attached2dims',
            field=models.ManyToManyField(related_name='attached_attributes', to='hydro_sdmx.Dimension'),
        ),
        migrations.AddField(
            model_name='attribute',
            name='attached2groups',
            field=models.ManyToManyField(related_name='attached_attributes', to='hydro_sdmx.Group'),
        ),
        migrations.AddField(
            model_name='attribute',
            name='changed_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='changed by'),
        ),
        migrations.AddField(
            model_name='attribute',
            name='concept',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='concept_for_attributes', to='hydro_sdmx.Concept'),
        ),
        migrations.AddField(
            model_name='attribute',
            name='created_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by'),
        ),
        migrations.AddField(
            model_name='attribute',
            name='representation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attributes', to='hydro_sdmx.Representation'),
        ),
        migrations.AddField(
            model_name='attribute',
            name='roles',
            field=models.ManyToManyField(related_name='role_for_attributes', to='hydro_sdmx.Concept'),
        ),
        migrations.AddField(
            model_name='attribute',
            name='wrapper',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.DataStructure'),
        ),
        migrations.AddField(
            model_name='attachmentconstraint',
            name='agency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Organisation'),
        ),
        migrations.AddField(
            model_name='attachmentconstraint',
            name='annotations',
            field=models.ManyToManyField(blank=True, related_name='_attachmentconstraint_annotations_+', to='hydro_sdmx.Annotation'),
        ),
        migrations.AddField(
            model_name='attachmentconstraint',
            name='attached2dataflows',
            field=models.ManyToManyField(related_name='attachment_constraints', to='hydro_sdmx.Dataflow'),
        ),
        migrations.AddField(
            model_name='attachmentconstraint',
            name='attached2datasets',
            field=models.ManyToManyField(to='hydro_sdmx.Dataset'),
        ),
        migrations.AddField(
            model_name='attachmentconstraint',
            name='attached2datasources',
            field=models.ManyToManyField(to='hydro_sdmx.Datasource'),
        ),
        migrations.AddField(
            model_name='attachmentconstraint',
            name='attached2dsds',
            field=models.ManyToManyField(related_name='attachemt_constraints', to='hydro_sdmx.DataStructure'),
        ),
        migrations.AddField(
            model_name='attachmentconstraint',
            name='attached2provision',
            field=models.ManyToManyField(to='hydro_sdmx.DataProvisionAgreement'),
        ),
        migrations.AddField(
            model_name='attachmentconstraint',
            name='changed_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='changed by'),
        ),
        migrations.AddField(
            model_name='attachmentconstraint',
            name='created_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by'),
        ),
        migrations.AddField(
            model_name='agencyscheme',
            name='agencies',
            field=models.ManyToManyField(related_name='agency_schemes', to='hydro_sdmx.Organisation'),
        ),
        migrations.AddField(
            model_name='agencyscheme',
            name='agency',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Organisation'),
        ),
        migrations.AddField(
            model_name='agencyscheme',
            name='annotations',
            field=models.ManyToManyField(blank=True, related_name='_agencyscheme_annotations_+', to='hydro_sdmx.Annotation'),
        ),
        migrations.AddField(
            model_name='agencyscheme',
            name='changed_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='changed by'),
        ),
        migrations.AddField(
            model_name='agencyscheme',
            name='created_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by'),
        ),
        migrations.AddIndex(
            model_name='transition',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_975f40_idx'),
        ),
        migrations.AddIndex(
            model_name='textformatinfo',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_743458_idx'),
        ),
        migrations.AddIndex(
            model_name='textformatinfo',
            index=models.Index(fields=['name'], name='hydro_sdmx__name_f3cf38_idx'),
        ),
        migrations.AlterIndexTogether(
            name='textformatinfo',
            index_together=set([('id_code', 'name')]),
        ),
        migrations.AddIndex(
            model_name='structureset',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_43e123_idx'),
        ),
        migrations.AddIndex(
            model_name='structureset',
            index=models.Index(fields=['name'], name='hydro_sdmx__name_9cfc1f_idx'),
        ),
        migrations.AddIndex(
            model_name='structureset',
            index=models.Index(fields=['agency'], name='hydro_sdmx__agency__1c8ac6_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='structureset',
            unique_together=set([('id_code', 'agency', 'version')]),
        ),
        migrations.AlterIndexTogether(
            name='structureset',
            index_together=set([('id_code', 'agency', 'version'), ('id_code', 'version')]),
        ),
        migrations.AddIndex(
            model_name='representation',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_f5b5af_idx'),
        ),
        migrations.AddIndex(
            model_name='reportingtaxonomymap',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_5bb1d6_idx'),
        ),
        migrations.AddIndex(
            model_name='reportingtaxonomymap',
            index=models.Index(fields=['name'], name='hydro_sdmx__name_13582c_idx'),
        ),
        migrations.AlterIndexTogether(
            name='reportingtaxonomymap',
            index_together=set([('id_code', 'name')]),
        ),
        migrations.AddIndex(
            model_name='reportingtaxonomy',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_160570_idx'),
        ),
        migrations.AddIndex(
            model_name='reportingtaxonomy',
            index=models.Index(fields=['name'], name='hydro_sdmx__name_e1666a_idx'),
        ),
        migrations.AddIndex(
            model_name='reportingtaxonomy',
            index=models.Index(fields=['agency'], name='hydro_sdmx__agency__2969ce_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='reportingtaxonomy',
            unique_together=set([('id_code', 'agency', 'version')]),
        ),
        migrations.AlterIndexTogether(
            name='reportingtaxonomy',
            index_together=set([('id_code', 'agency', 'version'), ('id_code', 'version')]),
        ),
        migrations.AlterUniqueTogether(
            name='reportingcategorymap',
            unique_together=set([('wrapper', 'source', 'target')]),
        ),
        migrations.AddIndex(
            model_name='reportingcategory',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_6ae5a7_idx'),
        ),
        migrations.AddIndex(
            model_name='reportingcategory',
            index=models.Index(fields=['name'], name='hydro_sdmx__name_e937c7_idx'),
        ),
        migrations.AddIndex(
            model_name='reportingcategory',
            index=models.Index(fields=['wrapper'], name='hydro_sdmx__wrapper_ff690e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='reportingcategory',
            unique_together=set([('wrapper', 'id_code')]),
        ),
        migrations.AlterIndexTogether(
            name='reportingcategory',
            index_together=set([('wrapper', 'id_code'), ('wrapper', 'name')]),
        ),
        migrations.AddIndex(
            model_name='report',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_f154c0_idx'),
        ),
        migrations.AddIndex(
            model_name='report',
            index=models.Index(fields=['name'], name='hydro_sdmx__name_b2890d_idx'),
        ),
        migrations.AddIndex(
            model_name='report',
            index=models.Index(fields=['agency'], name='hydro_sdmx__agency__3b57f8_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='report',
            unique_together=set([('id_code', 'agency', 'version')]),
        ),
        migrations.AlterIndexTogether(
            name='report',
            index_together=set([('id_code', 'agency', 'version'), ('id_code', 'version')]),
        ),
        migrations.AddIndex(
            model_name='processstep',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_aeeeb4_idx'),
        ),
        migrations.AddIndex(
            model_name='processstep',
            index=models.Index(fields=['name'], name='hydro_sdmx__name_62cc32_idx'),
        ),
        migrations.AlterIndexTogether(
            name='processstep',
            index_together=set([('id_code', 'name')]),
        ),
        migrations.AddIndex(
            model_name='process',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_d2d20c_idx'),
        ),
        migrations.AddIndex(
            model_name='process',
            index=models.Index(fields=['name'], name='hydro_sdmx__name_ce52bc_idx'),
        ),
        migrations.AddIndex(
            model_name='process',
            index=models.Index(fields=['agency'], name='hydro_sdmx__agency__f44ea1_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='process',
            unique_together=set([('id_code', 'agency', 'version')]),
        ),
        migrations.AlterIndexTogether(
            name='process',
            index_together=set([('id_code', 'agency', 'version'), ('id_code', 'version')]),
        ),
        migrations.AddIndex(
            model_name='organisationunitscheme',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_175155_idx'),
        ),
        migrations.AddIndex(
            model_name='organisationunitscheme',
            index=models.Index(fields=['name'], name='hydro_sdmx__name_968062_idx'),
        ),
        migrations.AddIndex(
            model_name='organisationunitscheme',
            index=models.Index(fields=['agency'], name='hydro_sdmx__agency__7578d5_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='organisationunitscheme',
            unique_together=set([('id_code', 'agency', 'version')]),
        ),
        migrations.AlterIndexTogether(
            name='organisationunitscheme',
            index_together=set([('id_code', 'agency', 'version'), ('id_code', 'version')]),
        ),
        migrations.AddIndex(
            model_name='organisationschememap',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_627197_idx'),
        ),
        migrations.AddIndex(
            model_name='organisationschememap',
            index=models.Index(fields=['name'], name='hydro_sdmx__name_beccdf_idx'),
        ),
        migrations.AlterIndexTogether(
            name='organisationschememap',
            index_together=set([('id_code', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='organisationmap',
            unique_together=set([('wrapper', 'source', 'target')]),
        ),
        migrations.AddIndex(
            model_name='organisation',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_d4fb87_idx'),
        ),
        migrations.AddIndex(
            model_name='organisation',
            index=models.Index(fields=['name'], name='hydro_sdmx__name_a6a38b_idx'),
        ),
        migrations.AlterIndexTogether(
            name='organisation',
            index_together=set([('id_code', 'name')]),
        ),
        migrations.AddIndex(
            model_name='nodecodelist',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_378f9a_idx'),
        ),
        migrations.AddIndex(
            model_name='nodecodelist',
            index=models.Index(fields=['name'], name='hydro_sdmx__name_fd842c_idx'),
        ),
        migrations.AddIndex(
            model_name='nodecodelist',
            index=models.Index(fields=['agency'], name='hydro_sdmx__agency__3508c8_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='nodecodelist',
            unique_together=set([('id_code', 'agency', 'version')]),
        ),
        migrations.AlterIndexTogether(
            name='nodecodelist',
            index_together=set([('id_code', 'agency', 'version'), ('id_code', 'version')]),
        ),
        migrations.AlterUniqueTogether(
            name='metakeyvalue',
            unique_together=set([('metadata_key', 'target_component', 'object_value', 'data_key_value', 'data_set_value', 'constraint_value', 'report_period_value')]),
        ),
        migrations.AlterUniqueTogether(
            name='metadatatargetregion',
            unique_together=set([('constraint', 'metadata_target_region_code')]),
        ),
        migrations.AddIndex(
            model_name='metadatatargetcomponent',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_1d3fa1_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='metadatatargetcomponent',
            unique_together=set([('id_code', 'component_type', 'identifiable_object')]),
        ),
        migrations.AddIndex(
            model_name='metadatatarget',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_869a32_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='metadatatarget',
            unique_together=set([('id_code', 'structure')]),
        ),
        migrations.AddIndex(
            model_name='metadatastructuremap',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_243577_idx'),
        ),
        migrations.AddIndex(
            model_name='metadatastructuremap',
            index=models.Index(fields=['name'], name='hydro_sdmx__name_7a6ac8_idx'),
        ),
        migrations.AlterIndexTogether(
            name='metadatastructuremap',
            index_together=set([('id_code', 'name')]),
        ),
        migrations.AddIndex(
            model_name='metadatastructure',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_1cb9f3_idx'),
        ),
        migrations.AddIndex(
            model_name='metadatastructure',
            index=models.Index(fields=['name'], name='hydro_sdmx__name_7aed13_idx'),
        ),
        migrations.AddIndex(
            model_name='metadatastructure',
            index=models.Index(fields=['agency'], name='hydro_sdmx__agency__49861c_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='metadatastructure',
            unique_together=set([('id_code', 'agency', 'version')]),
        ),
        migrations.AlterIndexTogether(
            name='metadatastructure',
            index_together=set([('id_code', 'agency', 'version'), ('id_code', 'version')]),
        ),
        migrations.AddIndex(
            model_name='metadataprovisionagreement',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_302ac9_idx'),
        ),
        migrations.AddIndex(
            model_name='metadataprovisionagreement',
            index=models.Index(fields=['name'], name='hydro_sdmx__name_b361bf_idx'),
        ),
        migrations.AddIndex(
            model_name='metadataprovisionagreement',
            index=models.Index(fields=['agency'], name='hydro_sdmx__agency__0c292a_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='metadataprovisionagreement',
            unique_together=set([('id_code', 'agency', 'version')]),
        ),
        migrations.AlterIndexTogether(
            name='metadataprovisionagreement',
            index_together=set([('id_code', 'agency', 'version'), ('id_code', 'version')]),
        ),
        migrations.AlterUniqueTogether(
            name='metadatakeyset',
            unique_together=set([('attachment_constraint', 'content_constraint', 'data_key_set_code')]),
        ),
        migrations.AlterUniqueTogether(
            name='metadatakey',
            unique_together=set([('metadata_key_set', 'metadata_key_code', 'report', 'target')]),
        ),
        migrations.AddIndex(
            model_name='metadataflowstructuremap',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_427746_idx'),
        ),
        migrations.AddIndex(
            model_name='metadataflowstructuremap',
            index=models.Index(fields=['name'], name='hydro_sdmx__name_4d9f7a_idx'),
        ),
        migrations.AlterIndexTogether(
            name='metadataflowstructuremap',
            index_together=set([('id_code', 'name')]),
        ),
        migrations.AddIndex(
            model_name='metadataflow',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_48cdaa_idx'),
        ),
        migrations.AddIndex(
            model_name='metadataflow',
            index=models.Index(fields=['name'], name='hydro_sdmx__name_ae89bd_idx'),
        ),
        migrations.AddIndex(
            model_name='metadataflow',
            index=models.Index(fields=['agency'], name='hydro_sdmx__agency__01f03c_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='metadataflow',
            unique_together=set([('id_code', 'agency', 'version')]),
        ),
        migrations.AlterIndexTogether(
            name='metadataflow',
            index_together=set([('id_code', 'agency', 'version'), ('id_code', 'version')]),
        ),
        migrations.AlterUniqueTogether(
            name='metadatacomponentmap',
            unique_together=set([('wrapper_structure', 'wrapper_usage', 'source_metacomp', 'source_metaattr', 'target_metacomp', 'target_metaattr')]),
        ),
        migrations.AddIndex(
            model_name='metadataattribute',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_8d4176_idx'),
        ),
        migrations.AddIndex(
            model_name='metadataattribute',
            index=models.Index(fields=['wrapper'], name='hydro_sdmx__wrapper_86977f_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='metadataattribute',
            unique_together=set([('wrapper', 'id_code', 'concept')]),
        ),
        migrations.AddIndex(
            model_name='metacontentconstraint',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_ff8905_idx'),
        ),
        migrations.AddIndex(
            model_name='metacontentconstraint',
            index=models.Index(fields=['name'], name='hydro_sdmx__name_363227_idx'),
        ),
        migrations.AddIndex(
            model_name='metacontentconstraint',
            index=models.Index(fields=['agency'], name='hydro_sdmx__agency__1bb4e2_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='metacontentconstraint',
            unique_together=set([('id_code', 'agency', 'version')]),
        ),
        migrations.AlterIndexTogether(
            name='metacontentconstraint',
            index_together=set([('id_code', 'agency', 'version'), ('id_code', 'version')]),
        ),
        migrations.AddIndex(
            model_name='metaattachmentconstraint',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_3a7942_idx'),
        ),
        migrations.AddIndex(
            model_name='metaattachmentconstraint',
            index=models.Index(fields=['name'], name='hydro_sdmx__name_869dc2_idx'),
        ),
        migrations.AddIndex(
            model_name='metaattachmentconstraint',
            index=models.Index(fields=['agency'], name='hydro_sdmx__agency__41bbdc_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='metaattachmentconstraint',
            unique_together=set([('id_code', 'agency', 'version')]),
        ),
        migrations.AlterIndexTogether(
            name='metaattachmentconstraint',
            index_together=set([('id_code', 'agency', 'version'), ('id_code', 'version')]),
        ),
        migrations.AddIndex(
            model_name='level',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_758a9c_idx'),
        ),
        migrations.AddIndex(
            model_name='level',
            index=models.Index(fields=['name'], name='hydro_sdmx__name_8db071_idx'),
        ),
        migrations.AlterIndexTogether(
            name='level',
            index_together=set([('id_code', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='keyvalueset',
            unique_together=set([('cube_region', 'dimension', 'attribute')]),
        ),
        migrations.AlterUniqueTogether(
            name='keyvalue',
            unique_together=set([('data_key', 'dimension', 'value')]),
        ),
        migrations.AlterUniqueTogether(
            name='hybridcodemap',
            unique_together=set([('wrapper', 'source_c', 'source_hc', 'target_c', 'target_hc')]),
        ),
        migrations.AddIndex(
            model_name='hybridcodelistmap',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_629aea_idx'),
        ),
        migrations.AddIndex(
            model_name='hybridcodelistmap',
            index=models.Index(fields=['name'], name='hydro_sdmx__name_834b25_idx'),
        ),
        migrations.AlterIndexTogether(
            name='hybridcodelistmap',
            index_together=set([('id_code', 'name')]),
        ),
        migrations.AddIndex(
            model_name='hierarchy',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_0f588c_idx'),
        ),
        migrations.AddIndex(
            model_name='hierarchy',
            index=models.Index(fields=['name'], name='hydro_sdmx__name_2bea79_idx'),
        ),
        migrations.AlterIndexTogether(
            name='hierarchy',
            index_together=set([('id_code', 'name')]),
        ),
        migrations.AddIndex(
            model_name='hierarchicalcodelist',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_7af15d_idx'),
        ),
        migrations.AddIndex(
            model_name='hierarchicalcodelist',
            index=models.Index(fields=['name'], name='hydro_sdmx__name_b8b5e3_idx'),
        ),
        migrations.AddIndex(
            model_name='hierarchicalcodelist',
            index=models.Index(fields=['agency'], name='hydro_sdmx__agency__d4133d_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='hierarchicalcodelist',
            unique_together=set([('id_code', 'agency', 'version')]),
        ),
        migrations.AlterIndexTogether(
            name='hierarchicalcodelist',
            index_together=set([('id_code', 'agency', 'version'), ('id_code', 'version')]),
        ),
        migrations.AddIndex(
            model_name='hierarchicalcode',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_242dc6_idx'),
        ),
        migrations.AddIndex(
            model_name='group',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_d83833_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='group',
            unique_together=set([('id_code', 'attachment_constraint')]),
        ),
        migrations.AddIndex(
            model_name='dimension',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_684670_idx'),
        ),
        migrations.AddIndex(
            model_name='dimension',
            index=models.Index(fields=['wrapper'], name='hydro_sdmx__wrapper_c3a041_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='dimension',
            unique_together=set([('wrapper', 'id_code', 'concept')]),
        ),
        migrations.AddIndex(
            model_name='datastructuremap',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_647455_idx'),
        ),
        migrations.AddIndex(
            model_name='datastructuremap',
            index=models.Index(fields=['name'], name='hydro_sdmx__name_f39785_idx'),
        ),
        migrations.AlterIndexTogether(
            name='datastructuremap',
            index_together=set([('id_code', 'name')]),
        ),
        migrations.AddIndex(
            model_name='datastructure',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_2f738a_idx'),
        ),
        migrations.AddIndex(
            model_name='datastructure',
            index=models.Index(fields=['name'], name='hydro_sdmx__name_f44ccc_idx'),
        ),
        migrations.AddIndex(
            model_name='datastructure',
            index=models.Index(fields=['agency'], name='hydro_sdmx__agency__534522_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='datastructure',
            unique_together=set([('id_code', 'agency', 'version')]),
        ),
        migrations.AlterIndexTogether(
            name='datastructure',
            index_together=set([('id_code', 'agency', 'version'), ('id_code', 'version')]),
        ),
        migrations.AddIndex(
            model_name='dataset',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_8b745a_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='dataset',
            unique_together=set([('id_code', 'data_provider', 'is_metadata')]),
        ),
        migrations.AddIndex(
            model_name='dataprovisionagreement',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_60c01d_idx'),
        ),
        migrations.AddIndex(
            model_name='dataprovisionagreement',
            index=models.Index(fields=['name'], name='hydro_sdmx__name_c72205_idx'),
        ),
        migrations.AddIndex(
            model_name='dataprovisionagreement',
            index=models.Index(fields=['agency'], name='hydro_sdmx__agency__a1a9bb_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='dataprovisionagreement',
            unique_together=set([('id_code', 'agency', 'version')]),
        ),
        migrations.AlterIndexTogether(
            name='dataprovisionagreement',
            index_together=set([('id_code', 'agency', 'version'), ('id_code', 'version')]),
        ),
        migrations.AddIndex(
            model_name='dataproviderscheme',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_4a896f_idx'),
        ),
        migrations.AddIndex(
            model_name='dataproviderscheme',
            index=models.Index(fields=['name'], name='hydro_sdmx__name_e19124_idx'),
        ),
        migrations.AddIndex(
            model_name='dataproviderscheme',
            index=models.Index(fields=['agency'], name='hydro_sdmx__agency__e9903c_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='dataproviderscheme',
            unique_together=set([('id_code', 'agency', 'version')]),
        ),
        migrations.AlterIndexTogether(
            name='dataproviderscheme',
            index_together=set([('id_code', 'agency', 'version'), ('id_code', 'version')]),
        ),
        migrations.AlterUniqueTogether(
            name='datakeyset',
            unique_together=set([('attachment_constraint', 'content_constraint', 'data_key_set_code')]),
        ),
        migrations.AlterUniqueTogether(
            name='datakey',
            unique_together=set([('data_key_set', 'data_key_code')]),
        ),
        migrations.AddIndex(
            model_name='dataflowstructuremap',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_e62a6d_idx'),
        ),
        migrations.AddIndex(
            model_name='dataflowstructuremap',
            index=models.Index(fields=['name'], name='hydro_sdmx__name_373c57_idx'),
        ),
        migrations.AlterIndexTogether(
            name='dataflowstructuremap',
            index_together=set([('id_code', 'name')]),
        ),
        migrations.AddIndex(
            model_name='dataflow',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_b49685_idx'),
        ),
        migrations.AddIndex(
            model_name='dataflow',
            index=models.Index(fields=['name'], name='hydro_sdmx__name_492fc6_idx'),
        ),
        migrations.AddIndex(
            model_name='dataflow',
            index=models.Index(fields=['agency'], name='hydro_sdmx__agency__d13657_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='dataflow',
            unique_together=set([('id_code', 'agency', 'version')]),
        ),
        migrations.AlterIndexTogether(
            name='dataflow',
            index_together=set([('id_code', 'agency', 'version'), ('id_code', 'version')]),
        ),
        migrations.AddIndex(
            model_name='dataconsumerscheme',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_f4158b_idx'),
        ),
        migrations.AddIndex(
            model_name='dataconsumerscheme',
            index=models.Index(fields=['name'], name='hydro_sdmx__name_05fe32_idx'),
        ),
        migrations.AddIndex(
            model_name='dataconsumerscheme',
            index=models.Index(fields=['agency'], name='hydro_sdmx__agency__207861_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='dataconsumerscheme',
            unique_together=set([('id_code', 'agency', 'version')]),
        ),
        migrations.AlterIndexTogether(
            name='dataconsumerscheme',
            index_together=set([('id_code', 'agency', 'version'), ('id_code', 'version')]),
        ),
        migrations.AlterUniqueTogether(
            name='datacomponentmap',
            unique_together=set([('wrapper', 'source_dim', 'source_obs', 'source_attr', 'target_dim', 'target_obs', 'target_attr', 'representation_mapping')]),
        ),
        migrations.AlterUniqueTogether(
            name='cuberegion',
            unique_together=set([('constraint', 'cube_region_code')]),
        ),
        migrations.AddIndex(
            model_name='contentconstraint',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_6d6182_idx'),
        ),
        migrations.AddIndex(
            model_name='contentconstraint',
            index=models.Index(fields=['name'], name='hydro_sdmx__name_2061fa_idx'),
        ),
        migrations.AddIndex(
            model_name='contentconstraint',
            index=models.Index(fields=['agency'], name='hydro_sdmx__agency__ef1161_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='contentconstraint',
            unique_together=set([('id_code', 'agency', 'version')]),
        ),
        migrations.AlterIndexTogether(
            name='contentconstraint',
            index_together=set([('id_code', 'agency', 'version'), ('id_code', 'version')]),
        ),
        migrations.AddIndex(
            model_name='contact',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_7d8a13_idx'),
        ),
        migrations.AddIndex(
            model_name='contact',
            index=models.Index(fields=['name'], name='hydro_sdmx__name_81ddd8_idx'),
        ),
        migrations.AddIndex(
            model_name='contact',
            index=models.Index(fields=['id_code', 'name'], name='hydro_sdmx__id_code_9d1eef_idx'),
        ),
        migrations.AddIndex(
            model_name='conceptschememap',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_6099dd_idx'),
        ),
        migrations.AddIndex(
            model_name='conceptschememap',
            index=models.Index(fields=['name'], name='hydro_sdmx__name_6ee97a_idx'),
        ),
        migrations.AlterIndexTogether(
            name='conceptschememap',
            index_together=set([('id_code', 'name')]),
        ),
        migrations.AddIndex(
            model_name='conceptscheme',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_374a4b_idx'),
        ),
        migrations.AddIndex(
            model_name='conceptscheme',
            index=models.Index(fields=['name'], name='hydro_sdmx__name_d963bf_idx'),
        ),
        migrations.AddIndex(
            model_name='conceptscheme',
            index=models.Index(fields=['agency'], name='hydro_sdmx__agency__b1799f_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='conceptscheme',
            unique_together=set([('id_code', 'agency', 'version')]),
        ),
        migrations.AlterIndexTogether(
            name='conceptscheme',
            index_together=set([('id_code', 'agency', 'version'), ('id_code', 'version')]),
        ),
        migrations.AlterUniqueTogether(
            name='conceptmap',
            unique_together=set([('wrapper', 'source', 'target')]),
        ),
        migrations.AddIndex(
            model_name='concept',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_b3a8c9_idx'),
        ),
        migrations.AddIndex(
            model_name='concept',
            index=models.Index(fields=['name'], name='hydro_sdmx__name_bce6b0_idx'),
        ),
        migrations.AddIndex(
            model_name='concept',
            index=models.Index(fields=['wrapper'], name='hydro_sdmx__wrapper_a75750_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='concept',
            unique_together=set([('wrapper', 'id_code')]),
        ),
        migrations.AlterIndexTogether(
            name='concept',
            index_together=set([('wrapper', 'id_code'), ('wrapper', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='codemap',
            unique_together=set([('wrapper', 'source', 'target')]),
        ),
        migrations.AddIndex(
            model_name='codelistmap',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_4d7d93_idx'),
        ),
        migrations.AddIndex(
            model_name='codelistmap',
            index=models.Index(fields=['name'], name='hydro_sdmx__name_f4c950_idx'),
        ),
        migrations.AlterIndexTogether(
            name='codelistmap',
            index_together=set([('id_code', 'name')]),
        ),
        migrations.AddIndex(
            model_name='codelist',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_35528a_idx'),
        ),
        migrations.AddIndex(
            model_name='codelist',
            index=models.Index(fields=['name'], name='hydro_sdmx__name_362da1_idx'),
        ),
        migrations.AddIndex(
            model_name='codelist',
            index=models.Index(fields=['agency'], name='hydro_sdmx__agency__116c07_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='codelist',
            unique_together=set([('id_code', 'agency', 'version')]),
        ),
        migrations.AlterIndexTogether(
            name='codelist',
            index_together=set([('id_code', 'agency', 'version'), ('id_code', 'version')]),
        ),
        migrations.AddIndex(
            model_name='code',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_0544fb_idx'),
        ),
        migrations.AddIndex(
            model_name='code',
            index=models.Index(fields=['name'], name='hydro_sdmx__name_9183d8_idx'),
        ),
        migrations.AddIndex(
            model_name='code',
            index=models.Index(fields=['wrapper'], name='hydro_sdmx__wrapper_bab4c0_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='code',
            unique_together=set([('wrapper', 'id_code')]),
        ),
        migrations.AlterIndexTogether(
            name='code',
            index_together=set([('wrapper', 'id_code'), ('wrapper', 'name')]),
        ),
        migrations.AddIndex(
            model_name='categoryschememap',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_13bb0c_idx'),
        ),
        migrations.AddIndex(
            model_name='categoryschememap',
            index=models.Index(fields=['name'], name='hydro_sdmx__name_6fa1aa_idx'),
        ),
        migrations.AlterIndexTogether(
            name='categoryschememap',
            index_together=set([('id_code', 'name')]),
        ),
        migrations.AddIndex(
            model_name='categoryscheme',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_8af3cd_idx'),
        ),
        migrations.AddIndex(
            model_name='categoryscheme',
            index=models.Index(fields=['name'], name='hydro_sdmx__name_c78e26_idx'),
        ),
        migrations.AddIndex(
            model_name='categoryscheme',
            index=models.Index(fields=['agency'], name='hydro_sdmx__agency__56b7aa_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='categoryscheme',
            unique_together=set([('id_code', 'agency', 'version')]),
        ),
        migrations.AlterIndexTogether(
            name='categoryscheme',
            index_together=set([('id_code', 'agency', 'version'), ('id_code', 'version')]),
        ),
        migrations.AlterUniqueTogether(
            name='categorymap',
            unique_together=set([('wrapper', 'source', 'target')]),
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_ccfa4f_idx'),
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['name'], name='hydro_sdmx__name_231342_idx'),
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['wrapper'], name='hydro_sdmx__wrapper_7e697b_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='category',
            unique_together=set([('wrapper', 'id_code')]),
        ),
        migrations.AlterIndexTogether(
            name='category',
            index_together=set([('wrapper', 'id_code'), ('wrapper', 'name')]),
        ),
        migrations.AddIndex(
            model_name='categorization',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_091242_idx'),
        ),
        migrations.AddIndex(
            model_name='categorization',
            index=models.Index(fields=['name'], name='hydro_sdmx__name_c4edc8_idx'),
        ),
        migrations.AddIndex(
            model_name='categorization',
            index=models.Index(fields=['agency'], name='hydro_sdmx__agency__3fae6c_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='categorization',
            unique_together=set([('id_code', 'agency', 'version')]),
        ),
        migrations.AlterIndexTogether(
            name='categorization',
            index_together=set([('id_code', 'agency', 'version'), ('id_code', 'version')]),
        ),
        migrations.AddIndex(
            model_name='attribute',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_c08990_idx'),
        ),
        migrations.AddIndex(
            model_name='attribute',
            index=models.Index(fields=['wrapper'], name='hydro_sdmx__wrapper_8fe99a_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='attribute',
            unique_together=set([('wrapper', 'id_code', 'concept')]),
        ),
        migrations.AddIndex(
            model_name='attachmentconstraint',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_dc061f_idx'),
        ),
        migrations.AddIndex(
            model_name='attachmentconstraint',
            index=models.Index(fields=['name'], name='hydro_sdmx__name_f8e10a_idx'),
        ),
        migrations.AddIndex(
            model_name='attachmentconstraint',
            index=models.Index(fields=['agency'], name='hydro_sdmx__agency__712982_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='attachmentconstraint',
            unique_together=set([('id_code', 'agency', 'version')]),
        ),
        migrations.AlterIndexTogether(
            name='attachmentconstraint',
            index_together=set([('id_code', 'agency', 'version'), ('id_code', 'version')]),
        ),
        migrations.AlterIndexTogether(
            name='annotation',
            index_together=set([('id_code', 'annotation_title')]),
        ),
        migrations.AddIndex(
            model_name='agencyscheme',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_9ebf0b_idx'),
        ),
        migrations.AddIndex(
            model_name='agencyscheme',
            index=models.Index(fields=['name'], name='hydro_sdmx__name_9db74b_idx'),
        ),
        migrations.AddIndex(
            model_name='agencyscheme',
            index=models.Index(fields=['agency'], name='hydro_sdmx__agency__15831d_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='agencyscheme',
            unique_together=set([('id_code', 'agency', 'version')]),
        ),
        migrations.AlterIndexTogether(
            name='agencyscheme',
            index_together=set([('id_code', 'agency', 'version'), ('id_code', 'version')]),
        ),
    ]
