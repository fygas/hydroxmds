# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2017-09-21 19:37
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Annotation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_code', models.CharField(blank=True, max_length=63, verbose_name='id')),
                ('annotation_title', models.CharField(blank=True, max_length=127)),
                ('annotation_type', models.CharField(blank=True, max_length=63)),
                ('annotation_URL', models.URLField(blank=True, null=True)),
                ('annotation_text', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.CharField(blank=True, max_length=31)),
                ('role', models.CharField(blank=True, max_length=31)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Email',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.EmailField(max_length=254)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Contact')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Fax',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=31)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Contact')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Organisation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uri', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True)),
                ('id_code', models.CharField(max_length=63, unique=True, validators=[django.core.validators.RegexValidator(re.compile('[A-Za-z][A-Za-z0-9_\\-]*', 32), 'Enter a value of type NCNameIDType that has pattern "([A-Za-z][A-Za-z0-9_\\-]*)"', 'invalid_pattern')], verbose_name='id')),
                ('name', models.CharField(max_length=255)),
                ('annotations', models.ManyToManyField(related_name='_organisation_annotations_+', to='hydro_sdmx.Annotation')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Organisation')),
            ],
            options={
                'ordering': ['id_code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Telephone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=31)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Contact')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='URI',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.URLField()),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Contact')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='X400',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=63)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Contact')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='contact',
            name='wrapper',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydro_sdmx.Organisation'),
        ),
        migrations.AlterUniqueTogether(
            name='x400',
            unique_together=set([('contact', 'value')]),
        ),
        migrations.AlterUniqueTogether(
            name='uri',
            unique_together=set([('contact', 'value')]),
        ),
        migrations.AlterUniqueTogether(
            name='telephone',
            unique_together=set([('contact', 'value')]),
        ),
        migrations.AddIndex(
            model_name='organisation',
            index=models.Index(fields=['id_code'], name='hydro_sdmx__id_code_d4fb87_idx'),
        ),
        migrations.AddIndex(
            model_name='organisation',
            index=models.Index(fields=['name'], name='hydro_sdmx__name_a6a38b_idx'),
        ),
        migrations.AddIndex(
            model_name='organisation',
            index=models.Index(fields=['id_code', 'name'], name='hydro_sdmx__id_code_32c438_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='fax',
            unique_together=set([('contact', 'value')]),
        ),
        migrations.AlterUniqueTogether(
            name='email',
            unique_together=set([('contact', 'value')]),
        ),
    ]
