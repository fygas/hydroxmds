# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2017-07-24 22:23
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import re


class Migration(migrations.Migration):

    dependencies = [
        ('hydro_sdmx', '0001_initial'),
    ]

    operations = [
        migrations.AlterField(
            model_name='agencyscheme',
            name='id_code',
            field=models.CharField(max_length=63, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='agencyscheme',
            name='name',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='agencyscheme',
            name='version',
            field=models.CharField(default='1.0', max_length=15, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*', 32), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')]),
        ),
        migrations.AlterField(
            model_name='annotation',
            name='annotation_title',
            field=models.CharField(blank=True, db_index=True, max_length=127, null=True),
        ),
        migrations.AlterField(
            model_name='annotation',
            name='annotation_type',
            field=models.CharField(blank=True, max_length=63, null=True),
        ),
        migrations.AlterField(
            model_name='annotation',
            name='id_code',
            field=models.CharField(blank=True, db_index=True, max_length=63, null=True, verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='attachmentconstraint',
            name='id_code',
            field=models.CharField(max_length=63, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='attachmentconstraint',
            name='name',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='attachmentconstraint',
            name='version',
            field=models.CharField(default='1.0', max_length=15, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*', 32), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')]),
        ),
        migrations.AlterField(
            model_name='attribute',
            name='id_code',
            field=models.CharField(blank=True, max_length=63, null=True, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='categorization',
            name='id_code',
            field=models.CharField(max_length=63, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='categorization',
            name='name',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='categorization',
            name='version',
            field=models.CharField(default='1.0', max_length=15, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*', 32), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')]),
        ),
        migrations.AlterField(
            model_name='category',
            name='id_code',
            field=models.CharField(max_length=63, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='category',
            name='name',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='categoryscheme',
            name='id_code',
            field=models.CharField(max_length=63, validators=[django.core.validators.RegexValidator(re.compile('[A-Za-z][A-Za-z0-9_\\-]*', 32), 'Enter a value of type NCNameIDType that has pattern "([A-Za-z][A-Za-z0-9_\\-]*)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='categoryscheme',
            name='name',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='categoryscheme',
            name='version',
            field=models.CharField(default='1.0', max_length=15, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*', 32), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')]),
        ),
        migrations.AlterField(
            model_name='categoryschememap',
            name='id_code',
            field=models.CharField(max_length=63, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='categoryschememap',
            name='name',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='code',
            name='id_code',
            field=models.CharField(blank=True, max_length=63, null=True, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='code',
            name='name',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='codelist',
            name='id_code',
            field=models.CharField(max_length=63, validators=[django.core.validators.RegexValidator(re.compile('[A-Za-z][A-Za-z0-9_\\-]*', 32), 'Enter a value of type NCNameIDType that has pattern "([A-Za-z][A-Za-z0-9_\\-]*)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='codelist',
            name='name',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='codelist',
            name='version',
            field=models.CharField(default='1.0', max_length=15, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*', 32), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')]),
        ),
        migrations.AlterField(
            model_name='codelistmap',
            name='id_code',
            field=models.CharField(max_length=63, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='codelistmap',
            name='name',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='computation',
            name='local_id',
            field=models.CharField(blank=True, max_length=63, null=True, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')]),
        ),
        migrations.AlterField(
            model_name='computation',
            name='software_language',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='computation',
            name='software_package',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='computation',
            name='software_version',
            field=models.CharField(blank=True, max_length=15, null=True),
        ),
        migrations.AlterField(
            model_name='concept',
            name='id_code',
            field=models.CharField(max_length=63, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='concept',
            name='name',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='conceptscheme',
            name='id_code',
            field=models.CharField(max_length=63, validators=[django.core.validators.RegexValidator(re.compile('[A-Za-z][A-Za-z0-9_\\-]*', 32), 'Enter a value of type NCNameIDType that has pattern "([A-Za-z][A-Za-z0-9_\\-]*)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='conceptscheme',
            name='name',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='conceptscheme',
            name='version',
            field=models.CharField(default='1.0', max_length=15, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*', 32), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')]),
        ),
        migrations.AlterField(
            model_name='conceptschememap',
            name='id_code',
            field=models.CharField(max_length=63, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='conceptschememap',
            name='name',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='contact',
            name='department',
            field=models.CharField(blank=True, max_length=31, null=True),
        ),
        migrations.AlterField(
            model_name='contact',
            name='id_code',
            field=models.CharField(max_length=63, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='contact',
            name='name',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='contact',
            name='role',
            field=models.CharField(blank=True, max_length=31, null=True),
        ),
        migrations.AlterField(
            model_name='contentconstraint',
            name='id_code',
            field=models.CharField(max_length=63, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='contentconstraint',
            name='name',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='contentconstraint',
            name='offset',
            field=models.CharField(blank=True, max_length=63, null=True),
        ),
        migrations.AlterField(
            model_name='contentconstraint',
            name='periodicity',
            field=models.CharField(blank=True, max_length=63, null=True),
        ),
        migrations.AlterField(
            model_name='contentconstraint',
            name='tolerance',
            field=models.CharField(blank=True, max_length=63, null=True),
        ),
        migrations.AlterField(
            model_name='contentconstraint',
            name='version',
            field=models.CharField(default='1.0', max_length=15, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*', 32), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')]),
        ),
        migrations.AlterField(
            model_name='dataconsumerscheme',
            name='id_code',
            field=models.CharField(max_length=63, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='dataconsumerscheme',
            name='name',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='dataconsumerscheme',
            name='version',
            field=models.CharField(default='1.0', max_length=15, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*', 32), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')]),
        ),
        migrations.AlterField(
            model_name='dataflow',
            name='id_code',
            field=models.CharField(max_length=63, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='dataflow',
            name='name',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='dataflow',
            name='version',
            field=models.CharField(default='1.0', max_length=15, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*', 32), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')]),
        ),
        migrations.AlterField(
            model_name='dataflowstructuremap',
            name='id_code',
            field=models.CharField(max_length=63, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='dataflowstructuremap',
            name='name',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='dataproviderscheme',
            name='id_code',
            field=models.CharField(max_length=63, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='dataproviderscheme',
            name='name',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='dataproviderscheme',
            name='version',
            field=models.CharField(default='1.0', max_length=15, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*', 32), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')]),
        ),
        migrations.AlterField(
            model_name='dataprovisionagreement',
            name='id_code',
            field=models.CharField(max_length=63, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='dataprovisionagreement',
            name='name',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='dataprovisionagreement',
            name='version',
            field=models.CharField(default='1.0', max_length=15, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*', 32), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')]),
        ),
        migrations.AlterField(
            model_name='dataset',
            name='id_code',
            field=models.CharField(blank=True, max_length=63, null=True, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='datastructure',
            name='id_code',
            field=models.CharField(max_length=63, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='datastructure',
            name='name',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='datastructure',
            name='version',
            field=models.CharField(default='1.0', max_length=15, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*', 32), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')]),
        ),
        migrations.AlterField(
            model_name='datastructuremap',
            name='id_code',
            field=models.CharField(max_length=63, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='datastructuremap',
            name='name',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='dimension',
            name='dimension_type',
            field=models.CharField(choices=[('dimension', 'Dimension'), ('time', 'TimeDimension'), ('measure', 'MeasureDimension')], max_length=15),
        ),
        migrations.AlterField(
            model_name='dimension',
            name='id_code',
            field=models.CharField(blank=True, max_length=63, null=True, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='group',
            name='id_code',
            field=models.CharField(blank=True, max_length=63, null=True, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='hierarchicalcode',
            name='id_code',
            field=models.CharField(max_length=63, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='hierarchicalcode',
            name='version',
            field=models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*', 32), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')]),
        ),
        migrations.AlterField(
            model_name='hierarchicalcodelist',
            name='id_code',
            field=models.CharField(max_length=63, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='hierarchicalcodelist',
            name='name',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='hierarchicalcodelist',
            name='version',
            field=models.CharField(default='1.0', max_length=15, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*', 32), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')]),
        ),
        migrations.AlterField(
            model_name='hierarchy',
            name='id_code',
            field=models.CharField(max_length=63, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='hierarchy',
            name='name',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='hybridcodelistmap',
            name='id_code',
            field=models.CharField(max_length=63, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='hybridcodelistmap',
            name='name',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='keyvalueset',
            name='end_time',
            field=models.CharField(blank=True, max_length=63, null=True),
        ),
        migrations.AlterField(
            model_name='keyvalueset',
            name='start_time',
            field=models.CharField(blank=True, max_length=63, null=True),
        ),
        migrations.AlterField(
            model_name='level',
            name='id_code',
            field=models.CharField(max_length=63, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='level',
            name='name',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='metaattachmentconstraint',
            name='id_code',
            field=models.CharField(max_length=63, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='metaattachmentconstraint',
            name='name',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='metaattachmentconstraint',
            name='version',
            field=models.CharField(default='1.0', max_length=15, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*', 32), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')]),
        ),
        migrations.AlterField(
            model_name='metaattrvalueset',
            name='end_time',
            field=models.CharField(blank=True, max_length=63, null=True),
        ),
        migrations.AlterField(
            model_name='metaattrvalueset',
            name='start_time',
            field=models.CharField(blank=True, max_length=63, null=True),
        ),
        migrations.AlterField(
            model_name='metacontentconstraint',
            name='id_code',
            field=models.CharField(max_length=63, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='metacontentconstraint',
            name='name',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='metacontentconstraint',
            name='offset',
            field=models.CharField(blank=True, max_length=63, null=True),
        ),
        migrations.AlterField(
            model_name='metacontentconstraint',
            name='periodicity',
            field=models.CharField(blank=True, max_length=63, null=True),
        ),
        migrations.AlterField(
            model_name='metacontentconstraint',
            name='tolerance',
            field=models.CharField(blank=True, max_length=63, null=True),
        ),
        migrations.AlterField(
            model_name='metacontentconstraint',
            name='version',
            field=models.CharField(default='1.0', max_length=15, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*', 32), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')]),
        ),
        migrations.AlterField(
            model_name='metadataattribute',
            name='id_code',
            field=models.CharField(blank=True, max_length=63, null=True, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='metadataflow',
            name='id_code',
            field=models.CharField(max_length=63, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='metadataflow',
            name='name',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='metadataflow',
            name='version',
            field=models.CharField(default='1.0', max_length=15, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*', 32), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')]),
        ),
        migrations.AlterField(
            model_name='metadataflowstructuremap',
            name='id_code',
            field=models.CharField(max_length=63, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='metadataflowstructuremap',
            name='name',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='metadataprovisionagreement',
            name='id_code',
            field=models.CharField(max_length=63, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='metadataprovisionagreement',
            name='name',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='metadataprovisionagreement',
            name='version',
            field=models.CharField(default='1.0', max_length=15, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*', 32), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')]),
        ),
        migrations.AlterField(
            model_name='metadatastructure',
            name='id_code',
            field=models.CharField(max_length=63, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='metadatastructure',
            name='name',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='metadatastructure',
            name='version',
            field=models.CharField(default='1.0', max_length=15, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*', 32), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')]),
        ),
        migrations.AlterField(
            model_name='metadatastructuremap',
            name='id_code',
            field=models.CharField(max_length=63, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='metadatastructuremap',
            name='name',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='metadatatarget',
            name='id_code',
            field=models.CharField(blank=True, max_length=63, null=True, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='metadatatargetcomponent',
            name='component_type',
            field=models.CharField(choices=[(None, 'None'), ('KeyDescriptorValuesTarget', 'KeyDescriptorValuesTarget'), ('DataSetTarget', 'DataSetTarget'), ('ConstraintContentTarget', 'ConstraintContentTarget'), ('ReportPeriodTarget', 'ReportPeriodTarget'), ('IdentifiableObjectTarget', 'IdentifiableObjectTarget')], max_length=63),
        ),
        migrations.AlterField(
            model_name='metadatatargetcomponent',
            name='id_code',
            field=models.CharField(max_length=63, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='metakeyvalue',
            name='report_period_value',
            field=models.CharField(max_length=63),
        ),
        migrations.AlterField(
            model_name='metakeyvalueset',
            name='end_time',
            field=models.CharField(blank=True, max_length=63, null=True),
        ),
        migrations.AlterField(
            model_name='metakeyvalueset',
            name='start_time',
            field=models.CharField(blank=True, max_length=63, null=True),
        ),
        migrations.AlterField(
            model_name='nodecodelist',
            name='name',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='nodecodelist',
            name='version',
            field=models.CharField(default='1.0', max_length=15, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*', 32), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')]),
        ),
        migrations.AlterField(
            model_name='organisation',
            name='id_code',
            field=models.CharField(max_length=63, unique=True, validators=[django.core.validators.RegexValidator(re.compile('[A-Za-z][A-Za-z0-9_\\-]*', 32), 'Enter a value of type NCNameIDType that has pattern "([A-Za-z][A-Za-z0-9_\\-]*)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='organisation',
            name='name',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='organisationschememap',
            name='id_code',
            field=models.CharField(max_length=63, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='organisationschememap',
            name='name',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='organisationunitscheme',
            name='id_code',
            field=models.CharField(max_length=63, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='organisationunitscheme',
            name='name',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='organisationunitscheme',
            name='version',
            field=models.CharField(default='1.0', max_length=15, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*', 32), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')]),
        ),
        migrations.AlterField(
            model_name='process',
            name='id_code',
            field=models.CharField(max_length=63, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='process',
            name='name',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='process',
            name='version',
            field=models.CharField(default='1.0', max_length=15, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*', 32), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')]),
        ),
        migrations.AlterField(
            model_name='processstep',
            name='id_code',
            field=models.CharField(max_length=63, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='processstep',
            name='name',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='report',
            name='id_code',
            field=models.CharField(max_length=63, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='report',
            name='name',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='report',
            name='version',
            field=models.CharField(default='1.0', max_length=15, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*', 32), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')]),
        ),
        migrations.AlterField(
            model_name='reportingcategory',
            name='id_code',
            field=models.CharField(blank=True, max_length=63, null=True, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='reportingcategory',
            name='name',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='reportingtaxonomy',
            name='id_code',
            field=models.CharField(max_length=63, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='reportingtaxonomy',
            name='name',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='reportingtaxonomy',
            name='version',
            field=models.CharField(default='1.0', max_length=15, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*', 32), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')]),
        ),
        migrations.AlterField(
            model_name='reportingtaxonomymap',
            name='id_code',
            field=models.CharField(max_length=63, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='reportingtaxonomymap',
            name='name',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='representation',
            name='id_code',
            field=models.CharField(blank=True, max_length=63, null=True, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='representationmap',
            name='to_value_type',
            field=models.CharField(choices=[('Value', 'Value'), ('Name', 'Name'), ('Desription', 'Description')], max_length=15),
        ),
        migrations.AlterField(
            model_name='simpledimvalue',
            name='value',
            field=models.CharField(max_length=63),
        ),
        migrations.AlterField(
            model_name='structureset',
            name='id_code',
            field=models.CharField(max_length=63, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='structureset',
            name='name',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='structureset',
            name='version',
            field=models.CharField(default='1.0', max_length=15, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*', 32), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')]),
        ),
        migrations.AlterField(
            model_name='telfax',
            name='telephone',
            field=models.CharField(max_length=31),
        ),
        migrations.AlterField(
            model_name='textformatinfo',
            name='id_code',
            field=models.CharField(blank=True, max_length=63, null=True, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='textformatinfo',
            name='name',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='textformatinfo',
            name='text_type',
            field=models.CharField(blank=True, choices=[('String', 'String'), ('Boolean', 'Boolean'), ('Short', 'Short'), ('Float', 'Float'), ('Alpha', 'Alpha'), ('ExclusiveValueRange', 'ExclusiveValueRange'), ('ReportingQuarter', 'ReportingQuarter'), ('ReportingDay', 'ReportingDay'), ('StandardTimePeriod', 'StandardTimePeriod'), ('ReportingMonth', 'ReportingMonth'), ('BigInteger', 'BigInteger'), ('TimeRange', 'TimeRange'), ('MonthDay', 'MonthDay'), (None, 'None'), ('AlphaNumeric', 'AlphaNumeric'), ('ReportingTimePeriod', 'ReportingTimePeriod'), ('ReportingWeek', 'ReportingWeek'), ('DataSetReference', 'DataSetReference'), ('GregorianYear', 'GregorianYear'), ('GregorianDay', 'GregorianDay'), ('AttachmentConstraintReference', 'AttachmentConstraintReference'), ('Decimal', 'Decimal'), ('GregorianYearMonth', 'GregorianYearMonth'), ('IdentifiableReference', 'IdentifiableReference'), ('Count', 'Count'), ('KeyValues', 'KeyValues'), ('Integer', 'Integer'), ('DateTime', 'DateTime'), ('Month', 'Month'), ('Long', 'Long'), ('URI', 'URI'), ('ObservationalTimePeriod', 'ObservationalTimePeriod'), ('BasicTimePeriod', 'BasicTimePeriod'), ('Numeric', 'Numeric'), ('GregorianTimePeriod', 'GregorianTimePeriod'), ('InclusiveValueRange', 'InclusiveValueRange'), ('ReportingSemester', 'ReportingSemester'), ('Day', 'Day'), ('Time', 'Time'), ('Duration', 'Duration'), ('ReportingTrimester', 'ReportingTrimester'), ('XHTML', 'XHTML'), ('Double', 'Double'), ('ReportingYear', 'ReportingYear'), ('Incremental', 'Incremental')], max_length=63, null=True),
        ),
        migrations.AlterField(
            model_name='timevalue',
            name='time',
            field=models.CharField(blank=True, max_length=63, null=True),
        ),
        migrations.AlterField(
            model_name='transition',
            name='id_code',
            field=models.CharField(blank=True, max_length=63, null=True, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='transition',
            name='local_id',
            field=models.CharField(blank=True, max_length=63, null=True, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')]),
        ),
        migrations.AlterField(
            model_name='valuemapping',
            name='source',
            field=models.CharField(max_length=127),
        ),
        migrations.AlterField(
            model_name='valuemapping',
            name='target',
            field=models.CharField(max_length=127),
        ),
        migrations.AlterField(
            model_name='x400',
            name='x400',
            field=models.CharField(max_length=63),
        ),
    ]
