# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2017-06-28 13:49
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Annotation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('annotation_title', models.CharField(blank=True, max_length=255, null=True)),
                ('annotation_type', models.CharField(blank=True, max_length=255, null=True)),
                ('annotation_URL', models.URLField(blank=True, null=True)),
                ('annotation_text', models.TextField(blank=True, null=True)),
                ('id_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='id')),
            ],
        ),
        migrations.CreateModel(
            name='ComponentValueSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idc', models.CharField(blank=True, max_length=255, null=True)),
                ('include', models.NullBooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='ISOConceptReference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ConceptAgency', models.CharField(blank=True, max_length=255, null=True)),
                ('ConceptSchemeID', models.CharField(blank=True, max_length=255, null=True)),
                ('ConceptID', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Key',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('include', models.NullBooleanField(default=True)),
                ('Attributes', models.ManyToManyField(blank=True, related_name='_key_Attributes_+', to='common.ComponentValueSet')),
                ('KeyValues', models.ManyToManyField(blank=True, related_name='_key_KeyValues_+', to='common.ComponentValueSet')),
            ],
        ),
        migrations.CreateModel(
            name='QueryableDataSource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('DataURL', models.URLField(blank=True, null=True)),
                ('WSDLURL', models.URLField(blank=True, null=True)),
                ('WADLURL', models.URLField(blank=True, null=True)),
                ('isRESTDatasource', models.NullBooleanField()),
                ('isWebServiceDatasource', models.NullBooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='RefBase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agencyID', models.CharField(blank=True, max_length=255, null=True)),
                ('maintainableParentID', models.CharField(blank=True, max_length=255, null=True)),
                ('maintainableParentVersion', models.CharField(blank=True, default='1.0', max_length=255, null=True)),
                ('containerID', models.CharField(blank=True, max_length=255, null=True)),
                ('id_code', models.CharField(blank=True, max_length=255, null=True)),
                ('version', models.CharField(blank=True, default='1.0', max_length=255, null=True)),
                ('local', models.NullBooleanField()),
                ('class_code', models.CharField(choices=[(None, 'None'), ('Any', 'Any'), ('Agency', 'Agency'), ('AgencyScheme', 'AgencyScheme'), ('AttachmentConstraint', 'AttachmentConstraint'), ('Attribute', 'Attribute'), ('AttributeDescriptor', 'AttributeDescriptor'), ('Categorisation', 'Categorisation'), ('Category', 'Category'), ('CategorySchemeMap', 'CategorySchemeMap'), ('CategoryScheme', 'CategoryScheme'), ('Code', 'Code'), ('CodeMap', 'CodeMap'), ('Codelist', 'Codelist'), ('CodelistMap', 'CodelistMap'), ('ComponentMap', 'ComponentMap'), ('Concept', 'Concept'), ('ConceptMap', 'ConceptMap'), ('ConceptScheme', 'ConceptScheme'), ('ConceptSchemeMap', 'ConceptSchemeMap'), ('Constraint', 'Constraint'), ('ConstraintTarget', 'ConstraintTarget'), ('ContentConstraint', 'ContentConstraint'), ('Dataflow', 'Dataflow'), ('DataConsumer', 'DataConsumer'), ('DataConsumerScheme', 'DataConsumerScheme'), ('DataProvider', 'DataProvider'), ('DataProviderScheme', 'DataProviderScheme'), ('DataSetTarget', 'DataSetTarget'), ('DataStructure', 'DataStructure'), ('Dimension', 'Dimension'), ('DimensionDescriptor', 'DimensionDescriptor'), ('DimensionDescriptorValuesTarget', 'DimensionDescriptorValuesTarget'), ('GroupDimensionDescriptor', 'GroupDimensionDescriptor'), ('HierarchicalCode', 'HierarchicalCode'), ('HierarchicalCodelist', 'HierarchicalCodelist'), ('Hierarchy', 'Hierarchy'), ('HybridCodelistMap', 'HybridCodelistMap'), ('HybridCodeMap', 'HybridCodeMap'), ('IdentifiableObjectTarget', 'IdentifiableObjectTarget'), ('Level', 'Level'), ('MeasureDescriptor', 'MeasureDescriptor'), ('MeasureDimension', 'MeasureDimension'), ('Metadataflow', 'Metadataflow'), ('MetadataAttribute', 'MetadataAttribute'), ('MetadataSet', 'MetadataSet'), ('MetadataStructure', 'MetadataStructure'), ('MetadataTarget', 'MetadataTarget'), ('Organisation', 'Organisation'), ('OrganisationMap', 'OrganisationMap'), ('OrganisationScheme', 'OrganisationScheme'), ('OrganisationSchemeMap', 'OrganisationSchemeMap'), ('OrganisationUnit', 'OrganisationUnit'), ('OrganisationUnitScheme', 'OrganisationUnitScheme'), ('PrimaryMeasure', 'PrimaryMeasure'), ('Process', 'Process'), ('ProcessStep', 'ProcessStep'), ('ProvisionAgreement', 'ProvisionAgreement'), ('ReportingCategory', 'ReportingCategory'), ('ReportingCategoryMap', 'ReportingCategoryMap'), ('ReportingTaxonomy', 'ReportingTaxonomy'), ('ReportingTaxonomyMap', 'ReportingTaxonomyMap'), ('ReportingYearStartDay', 'ReportingYearStartDay'), ('ReportPeriodTarget', 'ReportPeriodTarget'), ('ReportStructure', 'ReportStructure'), ('StructureMap', 'StructureMap'), ('StructureSet', 'StructureSet'), ('TimeDimension', 'TimeDimension'), ('Transition', 'Transition')], max_length=255)),
                ('package', models.CharField(choices=[(None, 'None'), ('base', 'base'), ('datastructure', 'datastructure'), ('metadatastructure', 'metadatastructure'), ('process', 'process'), ('registry', 'registry'), ('mapping', 'mapping'), ('codelist', 'codelist'), ('categoryscheme', 'categoryscheme'), ('conceptscheme', 'conceptscheme')], max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Reference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('URN', models.URLField(blank=True, null=True)),
                ('Ref', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='common.RefBase')),
            ],
        ),
        migrations.CreateModel(
            name='SimpleValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=255)),
                ('cascadeValues', models.NullBooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Text',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Text', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TimeRangeValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('BeforePeriod', models.DateTimeField(blank=True, null=True)),
                ('AfterPeriod', models.DateTimeField(blank=True, null=True)),
                ('StartPeriod', models.DateTimeField(blank=True, null=True)),
                ('EndPeriod', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.AddField(
            model_name='componentvalueset',
            name='DataKey',
            field=models.ManyToManyField(blank=True, related_name='_componentvalueset_DataKey_+', to='common.Key'),
        ),
        migrations.AddField(
            model_name='componentvalueset',
            name='DataSet',
            field=models.ManyToManyField(blank=True, related_name='_componentvalueset_DataSet_+', to='common.Reference'),
        ),
        migrations.AddField(
            model_name='componentvalueset',
            name='Object',
            field=models.ManyToManyField(blank=True, related_name='_componentvalueset_Object_+', to='common.Reference'),
        ),
        migrations.AddField(
            model_name='componentvalueset',
            name='TimeRange',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='common.TimeRangeValue'),
        ),
        migrations.AddField(
            model_name='componentvalueset',
            name='Values',
            field=models.ManyToManyField(blank=True, related_name='_componentvalueset_Values_+', to='common.SimpleValue'),
        ),
    ]
