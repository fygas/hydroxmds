# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-02-28 09:04
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('common', '0003_auto_20170225_1123'),
    ]

    operations = [
        migrations.AlterField(
            model_name='annotation',
            name='annotationTitle',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='annotation',
            name='annotationType',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='annotation',
            name='id_code',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='componentvalueset',
            name='idc',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='isoconceptreference',
            name='ConceptAgency',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='isoconceptreference',
            name='ConceptID',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='isoconceptreference',
            name='ConceptSchemeID',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='refbase',
            name='agencyID',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='refbase',
            name='class_code',
            field=models.CharField(choices=[(None, 'None'), ('Any', 'Any'), ('Agency', 'Agency'), ('AgencyScheme', 'AgencyScheme'), ('AttachmentConstraint', 'AttachmentConstraint'), ('Attribute', 'Attribute'), ('AttributeDescriptor', 'AttributeDescriptor'), ('Categorisation', 'Categorisation'), ('Category', 'Category'), ('CategorySchemeMap', 'CategorySchemeMap'), ('CategoryScheme', 'CategoryScheme'), ('Code', 'Code'), ('CodeMap', 'CodeMap'), ('Codelist', 'Codelist'), ('CodelistMap', 'CodelistMap'), ('ComponentMap', 'ComponentMap'), ('Concept', 'Concept'), ('ConceptMap', 'ConceptMap'), ('ConceptScheme', 'ConceptScheme'), ('ConceptSchemeMap', 'ConceptSchemeMap'), ('Constraint', 'Constraint'), ('ConstraintTarget', 'ConstraintTarget'), ('ContentConstraint', 'ContentConstraint'), ('Dataflow', 'Dataflow'), ('DataConsumer', 'DataConsumer'), ('DataConsumerScheme', 'DataConsumerScheme'), ('DataProvider', 'DataProvider'), ('DataProviderScheme', 'DataProviderScheme'), ('DataSetTarget', 'DataSetTarget'), ('DataStructure', 'DataStructure'), ('Dimension', 'Dimension'), ('DimensionDescriptor', 'DimensionDescriptor'), ('DimensionDescriptorValuesTarget', 'DimensionDescriptorValuesTarget'), ('GroupDimensionDescriptor', 'GroupDimensionDescriptor'), ('HierarchicalCode', 'HierarchicalCode'), ('HierarchicalCodelist', 'HierarchicalCodelist'), ('Hierarchy', 'Hierarchy'), ('HybridCodelistMap', 'HybridCodelistMap'), ('HybridCodeMap', 'HybridCodeMap'), ('IdentifiableObjectTarget', 'IdentifiableObjectTarget'), ('Level', 'Level'), ('MeasureDescriptor', 'MeasureDescriptor'), ('MeasureDimension', 'MeasureDimension'), ('Metadataflow', 'Metadataflow'), ('MetadataAttribute', 'MetadataAttribute'), ('MetadataSet', 'MetadataSet'), ('MetadataStructure', 'MetadataStructure'), ('MetadataTarget', 'MetadataTarget'), ('Organisation', 'Organisation'), ('OrganisationMap', 'OrganisationMap'), ('OrganisationScheme', 'OrganisationScheme'), ('OrganisationSchemeMap', 'OrganisationSchemeMap'), ('OrganisationUnit', 'OrganisationUnit'), ('OrganisationUnitScheme', 'OrganisationUnitScheme'), ('PrimaryMeasure', 'PrimaryMeasure'), ('Process', 'Process'), ('ProcessStep', 'ProcessStep'), ('ProvisionAgreement', 'ProvisionAgreement'), ('ReportingCategory', 'ReportingCategory'), ('ReportingCategoryMap', 'ReportingCategoryMap'), ('ReportingTaxonomy', 'ReportingTaxonomy'), ('ReportingTaxonomyMap', 'ReportingTaxonomyMap'), ('ReportingYearStartDay', 'ReportingYearStartDay'), ('ReportPeriodTarget', 'ReportPeriodTarget'), ('ReportStructure', 'ReportStructure'), ('StructureMap', 'StructureMap'), ('StructureSet', 'StructureSet'), ('TimeDimension', 'TimeDimension'), ('Transition', 'Transition')], max_length=255),
        ),
        migrations.AlterField(
            model_name='refbase',
            name='containerID',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='refbase',
            name='id_code',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='refbase',
            name='maintainableParentID',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='refbase',
            name='maintainableParentVersion',
            field=models.CharField(blank=True, default='1.0', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='refbase',
            name='package',
            field=models.CharField(choices=[(None, 'None'), ('base', 'base'), ('datastructure', 'datastructure'), ('metadatastructure', 'metadatastructure'), ('process', 'process'), ('registry', 'registry'), ('mapping', 'mapping'), ('codelist', 'codelist'), ('categoryscheme', 'categoryscheme'), ('conceptscheme', 'conceptscheme')], max_length=255),
        ),
        migrations.AlterField(
            model_name='refbase',
            name='version',
            field=models.CharField(blank=True, default='1.0', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='simplevalue',
            name='value',
            field=models.CharField(max_length=255),
        ),
    ]
