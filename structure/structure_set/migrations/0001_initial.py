# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-01-31 11:23
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('common', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CategoryMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urn', models.URLField(blank=True, null=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('id_code', models.CharField(blank=True, max_length=18, null=True)),
                ('version', models.CharField(blank=True, max_length=18, null=True)),
                ('validFrom', models.DateTimeField(blank=True, null=True)),
                ('validTo', models.DateTimeField(blank=True, null=True)),
                ('agencyID', models.CharField(blank=True, max_length=18, null=True)),
                ('isFinal', models.BooleanField(default=False)),
                ('isExternalReference', models.BooleanField(default=False)),
                ('Annotations', models.ManyToManyField(related_name='_categorymap_Annotations_+', to='common.Annotation')),
                ('Source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='common.Reference')),
                ('Target', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='common.Reference')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('_plain_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='CategoryMapTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(blank=True, max_length=18, null=True)),
                ('Description', models.TextField(blank=True, null=True)),
                ('language_code', models.CharField(db_index=True, max_length=15)),
                ('master', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='structure_set.CategoryMap')),
            ],
            options={
                'db_table': 'structure_set_categorymap_translation',
                'db_tablespace': '',
                'abstract': False,
                'managed': True,
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='CategorySchemeMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urn', models.URLField(blank=True, null=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('id_code', models.CharField(blank=True, max_length=18, null=True)),
                ('version', models.CharField(blank=True, max_length=18, null=True)),
                ('validFrom', models.DateTimeField(blank=True, null=True)),
                ('validTo', models.DateTimeField(blank=True, null=True)),
                ('agencyID', models.CharField(blank=True, max_length=18, null=True)),
                ('isFinal', models.BooleanField(default=False)),
                ('isExternalReference', models.BooleanField(default=False)),
                ('Annotations', models.ManyToManyField(related_name='_categoryschememap_Annotations_+', to='common.Annotation')),
                ('CategoryMaps', models.ManyToManyField(related_name='_categoryschememap_CategoryMaps_+', to='structure_set.CategoryMap')),
                ('Source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='common.Reference')),
                ('Target', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='common.Reference')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('_plain_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='CategorySchemeMapTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(blank=True, max_length=18, null=True)),
                ('Description', models.TextField(blank=True, null=True)),
                ('language_code', models.CharField(db_index=True, max_length=15)),
                ('master', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='structure_set.CategorySchemeMap')),
            ],
            options={
                'db_table': 'structure_set_categoryschememap_translation',
                'db_tablespace': '',
                'abstract': False,
                'managed': True,
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='CodelistMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urn', models.URLField(blank=True, null=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('id_code', models.CharField(blank=True, max_length=18, null=True)),
                ('version', models.CharField(blank=True, max_length=18, null=True)),
                ('validFrom', models.DateTimeField(blank=True, null=True)),
                ('validTo', models.DateTimeField(blank=True, null=True)),
                ('agencyID', models.CharField(blank=True, max_length=18, null=True)),
                ('isFinal', models.BooleanField(default=False)),
                ('isExternalReference', models.BooleanField(default=False)),
                ('Annotations', models.ManyToManyField(related_name='_codelistmap_Annotations_+', to='common.Annotation')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('_plain_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='CodelistMapTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(blank=True, max_length=18, null=True)),
                ('Description', models.TextField(blank=True, null=True)),
                ('language_code', models.CharField(db_index=True, max_length=15)),
                ('master', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='structure_set.CodelistMap')),
            ],
            options={
                'db_table': 'structure_set_codelistmap_translation',
                'db_tablespace': '',
                'abstract': False,
                'managed': True,
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='CodeMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urn', models.URLField(blank=True, null=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('id_code', models.CharField(blank=True, max_length=18, null=True)),
                ('version', models.CharField(blank=True, max_length=18, null=True)),
                ('validFrom', models.DateTimeField(blank=True, null=True)),
                ('validTo', models.DateTimeField(blank=True, null=True)),
                ('agencyID', models.CharField(blank=True, max_length=18, null=True)),
                ('isFinal', models.BooleanField(default=False)),
                ('isExternalReference', models.BooleanField(default=False)),
                ('Annotations', models.ManyToManyField(related_name='_codemap_Annotations_+', to='common.Annotation')),
                ('Source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='common.Reference')),
                ('Target', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='common.Reference')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('_plain_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='CodeMapTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(blank=True, max_length=18, null=True)),
                ('Description', models.TextField(blank=True, null=True)),
                ('language_code', models.CharField(db_index=True, max_length=15)),
                ('master', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='structure_set.CodeMap')),
            ],
            options={
                'db_table': 'structure_set_codemap_translation',
                'db_tablespace': '',
                'abstract': False,
                'managed': True,
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='ComponentMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urn', models.URLField(blank=True, null=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('id_code', models.CharField(blank=True, max_length=18, null=True)),
                ('version', models.CharField(blank=True, max_length=18, null=True)),
                ('validFrom', models.DateTimeField(blank=True, null=True)),
                ('validTo', models.DateTimeField(blank=True, null=True)),
                ('agencyID', models.CharField(blank=True, max_length=18, null=True)),
                ('isFinal', models.BooleanField(default=False)),
                ('isExternalReference', models.BooleanField(default=False)),
                ('Annotations', models.ManyToManyField(related_name='_componentmap_Annotations_+', to='common.Annotation')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('_plain_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ComponentMapTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(blank=True, max_length=18, null=True)),
                ('Description', models.TextField(blank=True, null=True)),
                ('language_code', models.CharField(db_index=True, max_length=15)),
                ('master', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='structure_set.ComponentMap')),
            ],
            options={
                'db_table': 'structure_set_componentmap_translation',
                'db_tablespace': '',
                'abstract': False,
                'managed': True,
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='ConceptMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urn', models.URLField(blank=True, null=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('id_code', models.CharField(blank=True, max_length=18, null=True)),
                ('version', models.CharField(blank=True, max_length=18, null=True)),
                ('validFrom', models.DateTimeField(blank=True, null=True)),
                ('validTo', models.DateTimeField(blank=True, null=True)),
                ('agencyID', models.CharField(blank=True, max_length=18, null=True)),
                ('isFinal', models.BooleanField(default=False)),
                ('isExternalReference', models.BooleanField(default=False)),
                ('Annotations', models.ManyToManyField(related_name='_conceptmap_Annotations_+', to='common.Annotation')),
                ('Source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='common.Reference')),
                ('Target', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='common.Reference')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('_plain_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ConceptMapTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(blank=True, max_length=18, null=True)),
                ('Description', models.TextField(blank=True, null=True)),
                ('language_code', models.CharField(db_index=True, max_length=15)),
                ('master', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='structure_set.ConceptMap')),
            ],
            options={
                'db_table': 'structure_set_conceptmap_translation',
                'db_tablespace': '',
                'abstract': False,
                'managed': True,
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='ConceptSchemeMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urn', models.URLField(blank=True, null=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('id_code', models.CharField(blank=True, max_length=18, null=True)),
                ('version', models.CharField(blank=True, max_length=18, null=True)),
                ('validFrom', models.DateTimeField(blank=True, null=True)),
                ('validTo', models.DateTimeField(blank=True, null=True)),
                ('agencyID', models.CharField(blank=True, max_length=18, null=True)),
                ('isFinal', models.BooleanField(default=False)),
                ('isExternalReference', models.BooleanField(default=False)),
                ('Annotations', models.ManyToManyField(related_name='_conceptschememap_Annotations_+', to='common.Annotation')),
                ('ConceptMaps', models.ManyToManyField(related_name='_conceptschememap_ConceptMaps_+', to='structure_set.ConceptMap')),
                ('Source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='common.Reference')),
                ('Target', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='common.Reference')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('_plain_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ConceptSchemeMapTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(blank=True, max_length=18, null=True)),
                ('Description', models.TextField(blank=True, null=True)),
                ('language_code', models.CharField(db_index=True, max_length=15)),
                ('master', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='structure_set.ConceptSchemeMap')),
            ],
            options={
                'db_table': 'structure_set_conceptschememap_translation',
                'db_tablespace': '',
                'abstract': False,
                'managed': True,
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='HybridCodelistMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urn', models.URLField(blank=True, null=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('id_code', models.CharField(blank=True, max_length=18, null=True)),
                ('Annotations', models.ManyToManyField(related_name='_hybridcodelistmap_Annotations_+', to='common.Annotation')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('_plain_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='HybridCodelistMapTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(blank=True, max_length=18, null=True)),
                ('Description', models.TextField(blank=True, null=True)),
                ('language_code', models.CharField(db_index=True, max_length=15)),
                ('master', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='structure_set.HybridCodelistMap')),
            ],
            options={
                'db_table': 'structure_set_hybridcodelistmap_translation',
                'db_tablespace': '',
                'abstract': False,
                'managed': True,
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='HybridCodeMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urn', models.URLField(blank=True, null=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('id_code', models.CharField(blank=True, max_length=18, null=True)),
                ('version', models.CharField(blank=True, max_length=18, null=True)),
                ('validFrom', models.DateTimeField(blank=True, null=True)),
                ('validTo', models.DateTimeField(blank=True, null=True)),
                ('agencyID', models.CharField(blank=True, max_length=18, null=True)),
                ('isFinal', models.BooleanField(default=False)),
                ('isExternalReference', models.BooleanField(default=False)),
                ('Annotations', models.ManyToManyField(related_name='_hybridcodemap_Annotations_+', to='common.Annotation')),
                ('Source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='common.Reference')),
                ('Target', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='common.Reference')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('_plain_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='HybridCodeMapTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(blank=True, max_length=18, null=True)),
                ('Description', models.TextField(blank=True, null=True)),
                ('language_code', models.CharField(db_index=True, max_length=15)),
                ('master', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='structure_set.HybridCodeMap')),
            ],
            options={
                'db_table': 'structure_set_hybridcodemap_translation',
                'db_tablespace': '',
                'abstract': False,
                'managed': True,
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='OrganisationMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urn', models.URLField(blank=True, null=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('id_code', models.CharField(blank=True, max_length=18, null=True)),
                ('version', models.CharField(blank=True, max_length=18, null=True)),
                ('validFrom', models.DateTimeField(blank=True, null=True)),
                ('validTo', models.DateTimeField(blank=True, null=True)),
                ('agencyID', models.CharField(blank=True, max_length=18, null=True)),
                ('isFinal', models.BooleanField(default=False)),
                ('isExternalReference', models.BooleanField(default=False)),
                ('Annotations', models.ManyToManyField(related_name='_organisationmap_Annotations_+', to='common.Annotation')),
                ('Source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='common.Reference')),
                ('Target', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='common.Reference')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('_plain_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='OrganisationMapTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(blank=True, max_length=18, null=True)),
                ('Description', models.TextField(blank=True, null=True)),
                ('language_code', models.CharField(db_index=True, max_length=15)),
                ('master', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='structure_set.OrganisationMap')),
            ],
            options={
                'db_table': 'structure_set_organisationmap_translation',
                'db_tablespace': '',
                'abstract': False,
                'managed': True,
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='OrganisationSchemeMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urn', models.URLField(blank=True, null=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('id_code', models.CharField(blank=True, max_length=18, null=True)),
                ('version', models.CharField(blank=True, max_length=18, null=True)),
                ('validFrom', models.DateTimeField(blank=True, null=True)),
                ('validTo', models.DateTimeField(blank=True, null=True)),
                ('agencyID', models.CharField(blank=True, max_length=18, null=True)),
                ('isFinal', models.BooleanField(default=False)),
                ('isExternalReference', models.BooleanField(default=False)),
                ('Annotations', models.ManyToManyField(related_name='_organisationschememap_Annotations_+', to='common.Annotation')),
                ('OrganisationMaps', models.ManyToManyField(related_name='_organisationschememap_OrganisationMaps_+', to='structure_set.OrganisationMap')),
                ('Source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='common.Reference')),
                ('Target', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='common.Reference')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('_plain_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='OrganisationSchemeMapTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(blank=True, max_length=18, null=True)),
                ('Description', models.TextField(blank=True, null=True)),
                ('language_code', models.CharField(db_index=True, max_length=15)),
                ('master', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='structure_set.OrganisationSchemeMap')),
            ],
            options={
                'db_table': 'structure_set_organisationschememap_translation',
                'db_tablespace': '',
                'abstract': False,
                'managed': True,
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='ReportingCategoryMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urn', models.URLField(blank=True, null=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('id_code', models.CharField(blank=True, max_length=18, null=True)),
                ('version', models.CharField(blank=True, max_length=18, null=True)),
                ('validFrom', models.DateTimeField(blank=True, null=True)),
                ('validTo', models.DateTimeField(blank=True, null=True)),
                ('agencyID', models.CharField(blank=True, max_length=18, null=True)),
                ('isFinal', models.BooleanField(default=False)),
                ('isExternalReference', models.BooleanField(default=False)),
                ('Annotations', models.ManyToManyField(related_name='_reportingcategorymap_Annotations_+', to='common.Annotation')),
                ('Source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='common.Reference')),
                ('Target', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='common.Reference')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('_plain_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ReportingCategoryMapTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(blank=True, max_length=18, null=True)),
                ('Description', models.TextField(blank=True, null=True)),
                ('language_code', models.CharField(db_index=True, max_length=15)),
                ('master', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='structure_set.ReportingCategoryMap')),
            ],
            options={
                'db_table': 'structure_set_reportingcategorymap_translation',
                'db_tablespace': '',
                'abstract': False,
                'managed': True,
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='ReportingTaxonomyMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urn', models.URLField(blank=True, null=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('id_code', models.CharField(blank=True, max_length=18, null=True)),
                ('version', models.CharField(blank=True, max_length=18, null=True)),
                ('validFrom', models.DateTimeField(blank=True, null=True)),
                ('validTo', models.DateTimeField(blank=True, null=True)),
                ('agencyID', models.CharField(blank=True, max_length=18, null=True)),
                ('isFinal', models.BooleanField(default=False)),
                ('isExternalReference', models.BooleanField(default=False)),
                ('Annotations', models.ManyToManyField(related_name='_reportingtaxonomymap_Annotations_+', to='common.Annotation')),
                ('ReportingCategoryMaps', models.ManyToManyField(related_name='_reportingtaxonomymap_ReportingCategoryMaps_+', to='structure_set.ReportingCategoryMap')),
                ('Source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='common.Reference')),
                ('Target', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='common.Reference')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('_plain_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ReportingTaxonomyMapTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(blank=True, max_length=18, null=True)),
                ('Description', models.TextField(blank=True, null=True)),
                ('language_code', models.CharField(db_index=True, max_length=15)),
                ('master', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='structure_set.ReportingTaxonomyMap')),
            ],
            options={
                'db_table': 'structure_set_reportingtaxonomymap_translation',
                'db_tablespace': '',
                'abstract': False,
                'managed': True,
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='RepresentationMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CodelistMap', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='common.Reference')),
            ],
        ),
        migrations.CreateModel(
            name='RepresentationMapTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15)),
                ('master', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='structure_set.RepresentationMap')),
            ],
            options={
                'db_table': 'structure_set_representationmap_translation',
                'db_tablespace': '',
                'abstract': False,
                'managed': True,
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='StructureMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urn', models.URLField(blank=True, null=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('id_code', models.CharField(blank=True, max_length=18, null=True)),
                ('isExtension', models.NullBooleanField()),
                ('Annotations', models.ManyToManyField(related_name='_structuremap_Annotations_+', to='common.Annotation')),
                ('ComponentMaps', models.ManyToManyField(related_name='_structuremap_ComponentMaps_+', to='structure_set.ComponentMap')),
                ('Source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='common.Reference')),
                ('Target', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='common.Reference')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('_plain_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='StructureMapTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(blank=True, max_length=18, null=True)),
                ('Description', models.TextField(blank=True, null=True)),
                ('language_code', models.CharField(db_index=True, max_length=15)),
                ('master', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='structure_set.StructureMap')),
            ],
            options={
                'db_table': 'structure_set_structuremap_translation',
                'db_tablespace': '',
                'abstract': False,
                'managed': True,
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='StructureSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urn', models.URLField(blank=True, null=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('id_code', models.CharField(blank=True, max_length=18, null=True)),
                ('version', models.CharField(blank=True, max_length=18, null=True)),
                ('validFrom', models.DateTimeField(blank=True, null=True)),
                ('validTo', models.DateTimeField(blank=True, null=True)),
                ('agencyID', models.CharField(blank=True, max_length=18, null=True)),
                ('isFinal', models.BooleanField(default=False)),
                ('isExternalReference', models.BooleanField(default=False)),
                ('Annotations', models.ManyToManyField(related_name='_structureset_Annotations_+', to='common.Annotation')),
                ('CategorySchemeMaps', models.ManyToManyField(related_name='_structureset_CategorySchemeMaps_+', to='structure_set.CategorySchemeMap')),
                ('CodelistMaps', models.ManyToManyField(related_name='_structureset_CodelistMaps_+', to='structure_set.CodelistMap')),
                ('ConceptSchemeMaps', models.ManyToManyField(related_name='_structureset_ConceptSchemeMaps_+', to='structure_set.ConceptSchemeMap')),
                ('HybridCodelistMaps', models.ManyToManyField(related_name='_structureset_HybridCodelistMaps_+', to='structure_set.HybridCodelistMap')),
                ('OrganisationSchemeMaps', models.ManyToManyField(related_name='_structureset_OrganisationSchemeMaps_+', to='structure_set.OrganisationSchemeMap')),
                ('RelatedStructures', models.ManyToManyField(related_name='_structureset_RelatedStructures_+', to='common.Reference')),
                ('ReportingTaxonomyMaps', models.ManyToManyField(related_name='_structureset_ReportingTaxonomyMaps_+', to='structure_set.ReportingTaxonomyMap')),
                ('StructureMaps', models.ManyToManyField(related_name='_structureset_StructureMaps_+', to='structure_set.StructureMap')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('_plain_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='StructureSetTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(blank=True, max_length=18, null=True)),
                ('Description', models.TextField(blank=True, null=True)),
                ('language_code', models.CharField(db_index=True, max_length=15)),
                ('master', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='structure_set.StructureSet')),
            ],
            options={
                'db_table': 'structure_set_structureset_translation',
                'db_tablespace': '',
                'abstract': False,
                'managed': True,
                'default_permissions': (),
            },
        ),
        migrations.AddField(
            model_name='hybridcodelistmap',
            name='HybridCodeMaps',
            field=models.ManyToManyField(related_name='_hybridcodelistmap_HybridCodeMaps_+', to='structure_set.HybridCodeMap'),
        ),
        migrations.AddField(
            model_name='hybridcodelistmap',
            name='Source',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='common.Reference'),
        ),
        migrations.AddField(
            model_name='hybridcodelistmap',
            name='Target',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='common.Reference'),
        ),
        migrations.AddField(
            model_name='componentmap',
            name='RepresentationMapping',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='structure_set.RepresentationMap'),
        ),
        migrations.AddField(
            model_name='componentmap',
            name='Source',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='common.Reference'),
        ),
        migrations.AddField(
            model_name='componentmap',
            name='Target',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='common.Reference'),
        ),
        migrations.AddField(
            model_name='codelistmap',
            name='CodeMaps',
            field=models.ManyToManyField(related_name='_codelistmap_CodeMaps_+', to='structure_set.CodeMap'),
        ),
        migrations.AddField(
            model_name='codelistmap',
            name='Source',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='common.Reference'),
        ),
        migrations.AddField(
            model_name='codelistmap',
            name='Target',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='common.Reference'),
        ),
        migrations.AlterUniqueTogether(
            name='structuresettranslation',
            unique_together=set([('language_code', 'master')]),
        ),
        migrations.AlterUniqueTogether(
            name='structuremaptranslation',
            unique_together=set([('language_code', 'master')]),
        ),
        migrations.AlterUniqueTogether(
            name='representationmaptranslation',
            unique_together=set([('language_code', 'master')]),
        ),
        migrations.AlterUniqueTogether(
            name='reportingtaxonomymaptranslation',
            unique_together=set([('language_code', 'master')]),
        ),
        migrations.AlterUniqueTogether(
            name='reportingcategorymaptranslation',
            unique_together=set([('language_code', 'master')]),
        ),
        migrations.AlterUniqueTogether(
            name='organisationschememaptranslation',
            unique_together=set([('language_code', 'master')]),
        ),
        migrations.AlterUniqueTogether(
            name='organisationmaptranslation',
            unique_together=set([('language_code', 'master')]),
        ),
        migrations.AlterUniqueTogether(
            name='hybridcodemaptranslation',
            unique_together=set([('language_code', 'master')]),
        ),
        migrations.AlterUniqueTogether(
            name='hybridcodelistmaptranslation',
            unique_together=set([('language_code', 'master')]),
        ),
        migrations.AlterUniqueTogether(
            name='conceptschememaptranslation',
            unique_together=set([('language_code', 'master')]),
        ),
        migrations.AlterUniqueTogether(
            name='conceptmaptranslation',
            unique_together=set([('language_code', 'master')]),
        ),
        migrations.AlterUniqueTogether(
            name='componentmaptranslation',
            unique_together=set([('language_code', 'master')]),
        ),
        migrations.AlterUniqueTogether(
            name='codemaptranslation',
            unique_together=set([('language_code', 'master')]),
        ),
        migrations.AlterUniqueTogether(
            name='codelistmaptranslation',
            unique_together=set([('language_code', 'master')]),
        ),
        migrations.AlterUniqueTogether(
            name='categoryschememaptranslation',
            unique_together=set([('language_code', 'master')]),
        ),
        migrations.AlterUniqueTogether(
            name='categorymaptranslation',
            unique_together=set([('language_code', 'master')]),
        ),
    ]
