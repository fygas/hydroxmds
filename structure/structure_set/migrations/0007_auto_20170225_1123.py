# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-02-25 09:23
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import re


class Migration(migrations.Migration):

    dependencies = [
        ('common', '0003_auto_20170225_1123'),
        ('structure_set', '0006_auto_20170225_1116'),
    ]

    operations = [
        migrations.RenameField(
            model_name='categorymaptranslation',
            old_name='Description',
            new_name='description',
        ),
        migrations.RenameField(
            model_name='categoryschememaptranslation',
            old_name='Description',
            new_name='description',
        ),
        migrations.RenameField(
            model_name='codelistmaptranslation',
            old_name='Description',
            new_name='description',
        ),
        migrations.RenameField(
            model_name='codemaptranslation',
            old_name='Description',
            new_name='description',
        ),
        migrations.RenameField(
            model_name='componentmaptranslation',
            old_name='Description',
            new_name='description',
        ),
        migrations.RenameField(
            model_name='conceptmaptranslation',
            old_name='Description',
            new_name='description',
        ),
        migrations.RenameField(
            model_name='conceptschememaptranslation',
            old_name='Description',
            new_name='description',
        ),
        migrations.RenameField(
            model_name='hybridcodelistmaptranslation',
            old_name='Description',
            new_name='description',
        ),
        migrations.RenameField(
            model_name='hybridcodelistmaptranslation',
            old_name='Name',
            new_name='name',
        ),
        migrations.RenameField(
            model_name='hybridcodemaptranslation',
            old_name='Description',
            new_name='description',
        ),
        migrations.RenameField(
            model_name='organisationmaptranslation',
            old_name='Description',
            new_name='description',
        ),
        migrations.RenameField(
            model_name='organisationschememaptranslation',
            old_name='Description',
            new_name='description',
        ),
        migrations.RenameField(
            model_name='reportingcategorymaptranslation',
            old_name='Description',
            new_name='description',
        ),
        migrations.RenameField(
            model_name='reportingtaxonomymaptranslation',
            old_name='Description',
            new_name='description',
        ),
        migrations.RenameField(
            model_name='structuremaptranslation',
            old_name='Description',
            new_name='description',
        ),
        migrations.RenameField(
            model_name='structuremaptranslation',
            old_name='Name',
            new_name='name',
        ),
        migrations.RenameField(
            model_name='structuresettranslation',
            old_name='Description',
            new_name='description',
        ),
        migrations.RemoveField(
            model_name='categorymap',
            name='Annotations',
        ),
        migrations.RemoveField(
            model_name='categoryschememap',
            name='Annotations',
        ),
        migrations.RemoveField(
            model_name='codelistmap',
            name='Annotations',
        ),
        migrations.RemoveField(
            model_name='codemap',
            name='Annotations',
        ),
        migrations.RemoveField(
            model_name='componentmap',
            name='Annotations',
        ),
        migrations.RemoveField(
            model_name='conceptmap',
            name='Annotations',
        ),
        migrations.RemoveField(
            model_name='conceptschememap',
            name='Annotations',
        ),
        migrations.RemoveField(
            model_name='hybridcodelistmap',
            name='Annotations',
        ),
        migrations.RemoveField(
            model_name='hybridcodemap',
            name='Annotations',
        ),
        migrations.RemoveField(
            model_name='organisationmap',
            name='Annotations',
        ),
        migrations.RemoveField(
            model_name='organisationschememap',
            name='Annotations',
        ),
        migrations.RemoveField(
            model_name='reportingcategorymap',
            name='Annotations',
        ),
        migrations.RemoveField(
            model_name='reportingtaxonomymap',
            name='Annotations',
        ),
        migrations.RemoveField(
            model_name='structuremap',
            name='Annotations',
        ),
        migrations.RemoveField(
            model_name='structureset',
            name='Annotations',
        ),
        migrations.AddField(
            model_name='categorymap',
            name='annotations',
            field=models.ManyToManyField(related_name='_categorymap_annotations_+', to='common.Annotation'),
        ),
        migrations.AddField(
            model_name='categorymaptranslation',
            name='name',
            field=models.CharField(blank=True, max_length=18, null=True),
        ),
        migrations.AddField(
            model_name='categoryschememap',
            name='annotations',
            field=models.ManyToManyField(related_name='_categoryschememap_annotations_+', to='common.Annotation'),
        ),
        migrations.AddField(
            model_name='categoryschememaptranslation',
            name='name',
            field=models.CharField(blank=True, max_length=18, null=True),
        ),
        migrations.AddField(
            model_name='codelistmap',
            name='annotations',
            field=models.ManyToManyField(related_name='_codelistmap_annotations_+', to='common.Annotation'),
        ),
        migrations.AddField(
            model_name='codelistmaptranslation',
            name='name',
            field=models.CharField(blank=True, max_length=18, null=True),
        ),
        migrations.AddField(
            model_name='codemap',
            name='annotations',
            field=models.ManyToManyField(related_name='_codemap_annotations_+', to='common.Annotation'),
        ),
        migrations.AddField(
            model_name='codemaptranslation',
            name='name',
            field=models.CharField(blank=True, max_length=18, null=True),
        ),
        migrations.AddField(
            model_name='componentmap',
            name='annotations',
            field=models.ManyToManyField(related_name='_componentmap_annotations_+', to='common.Annotation'),
        ),
        migrations.AddField(
            model_name='componentmaptranslation',
            name='name',
            field=models.CharField(blank=True, max_length=18, null=True),
        ),
        migrations.AddField(
            model_name='conceptmap',
            name='annotations',
            field=models.ManyToManyField(related_name='_conceptmap_annotations_+', to='common.Annotation'),
        ),
        migrations.AddField(
            model_name='conceptmaptranslation',
            name='name',
            field=models.CharField(blank=True, max_length=18, null=True),
        ),
        migrations.AddField(
            model_name='conceptschememap',
            name='annotations',
            field=models.ManyToManyField(related_name='_conceptschememap_annotations_+', to='common.Annotation'),
        ),
        migrations.AddField(
            model_name='conceptschememaptranslation',
            name='name',
            field=models.CharField(blank=True, max_length=18, null=True),
        ),
        migrations.AddField(
            model_name='hybridcodelistmap',
            name='annotations',
            field=models.ManyToManyField(related_name='_hybridcodelistmap_annotations_+', to='common.Annotation'),
        ),
        migrations.AddField(
            model_name='hybridcodemap',
            name='annotations',
            field=models.ManyToManyField(related_name='_hybridcodemap_annotations_+', to='common.Annotation'),
        ),
        migrations.AddField(
            model_name='hybridcodemaptranslation',
            name='name',
            field=models.CharField(blank=True, max_length=18, null=True),
        ),
        migrations.AddField(
            model_name='organisationmap',
            name='annotations',
            field=models.ManyToManyField(related_name='_organisationmap_annotations_+', to='common.Annotation'),
        ),
        migrations.AddField(
            model_name='organisationmaptranslation',
            name='name',
            field=models.CharField(blank=True, max_length=18, null=True),
        ),
        migrations.AddField(
            model_name='organisationschememap',
            name='annotations',
            field=models.ManyToManyField(related_name='_organisationschememap_annotations_+', to='common.Annotation'),
        ),
        migrations.AddField(
            model_name='organisationschememaptranslation',
            name='name',
            field=models.CharField(blank=True, max_length=18, null=True),
        ),
        migrations.AddField(
            model_name='reportingcategorymap',
            name='annotations',
            field=models.ManyToManyField(related_name='_reportingcategorymap_annotations_+', to='common.Annotation'),
        ),
        migrations.AddField(
            model_name='reportingcategorymaptranslation',
            name='name',
            field=models.CharField(blank=True, max_length=18, null=True),
        ),
        migrations.AddField(
            model_name='reportingtaxonomymap',
            name='annotations',
            field=models.ManyToManyField(related_name='_reportingtaxonomymap_annotations_+', to='common.Annotation'),
        ),
        migrations.AddField(
            model_name='reportingtaxonomymaptranslation',
            name='name',
            field=models.CharField(blank=True, max_length=18, null=True),
        ),
        migrations.AddField(
            model_name='structuremap',
            name='annotations',
            field=models.ManyToManyField(related_name='_structuremap_annotations_+', to='common.Annotation'),
        ),
        migrations.AddField(
            model_name='structureset',
            name='annotations',
            field=models.ManyToManyField(related_name='_structureset_annotations_+', to='common.Annotation'),
        ),
        migrations.AddField(
            model_name='structuresettranslation',
            name='name',
            field=models.CharField(blank=True, max_length=18, null=True),
        ),
        migrations.AlterField(
            model_name='categorymap',
            name='id_code',
            field=models.CharField(max_length=18, unique=True, validators=[django.core.validators.RegexValidator(re.compile('[A-Za-z0-9_@$\\-]+', 32), 'Enter a value of type IDType that has pattern "([A-Za-z0-9_@$\\-]+)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='categoryschememap',
            name='id_code',
            field=models.CharField(max_length=18, unique=True, validators=[django.core.validators.RegexValidator(re.compile('[A-Za-z0-9_@$\\-]+', 32), 'Enter a value of type IDType that has pattern "([A-Za-z0-9_@$\\-]+)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='codelistmap',
            name='id_code',
            field=models.CharField(max_length=18, unique=True, validators=[django.core.validators.RegexValidator(re.compile('[A-Za-z0-9_@$\\-]+', 32), 'Enter a value of type IDType that has pattern "([A-Za-z0-9_@$\\-]+)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='codemap',
            name='id_code',
            field=models.CharField(max_length=18, unique=True, validators=[django.core.validators.RegexValidator(re.compile('[A-Za-z0-9_@$\\-]+', 32), 'Enter a value of type IDType that has pattern "([A-Za-z0-9_@$\\-]+)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='componentmap',
            name='id_code',
            field=models.CharField(max_length=18, unique=True, validators=[django.core.validators.RegexValidator(re.compile('[A-Za-z0-9_@$\\-]+', 32), 'Enter a value of type IDType that has pattern "([A-Za-z0-9_@$\\-]+)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='conceptmap',
            name='id_code',
            field=models.CharField(max_length=18, unique=True, validators=[django.core.validators.RegexValidator(re.compile('[A-Za-z0-9_@$\\-]+', 32), 'Enter a value of type IDType that has pattern "([A-Za-z0-9_@$\\-]+)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='conceptschememap',
            name='id_code',
            field=models.CharField(max_length=18, unique=True, validators=[django.core.validators.RegexValidator(re.compile('[A-Za-z0-9_@$\\-]+', 32), 'Enter a value of type IDType that has pattern "([A-Za-z0-9_@$\\-]+)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='hybridcodemap',
            name='id_code',
            field=models.CharField(max_length=18, unique=True, validators=[django.core.validators.RegexValidator(re.compile('[A-Za-z0-9_@$\\-]+', 32), 'Enter a value of type IDType that has pattern "([A-Za-z0-9_@$\\-]+)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='organisationmap',
            name='id_code',
            field=models.CharField(max_length=18, unique=True, validators=[django.core.validators.RegexValidator(re.compile('[A-Za-z0-9_@$\\-]+', 32), 'Enter a value of type IDType that has pattern "([A-Za-z0-9_@$\\-]+)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='organisationschememap',
            name='id_code',
            field=models.CharField(max_length=18, unique=True, validators=[django.core.validators.RegexValidator(re.compile('[A-Za-z0-9_@$\\-]+', 32), 'Enter a value of type IDType that has pattern "([A-Za-z0-9_@$\\-]+)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='reportingcategorymap',
            name='id_code',
            field=models.CharField(max_length=18, unique=True, validators=[django.core.validators.RegexValidator(re.compile('[A-Za-z0-9_@$\\-]+', 32), 'Enter a value of type IDType that has pattern "([A-Za-z0-9_@$\\-]+)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='reportingtaxonomymap',
            name='id_code',
            field=models.CharField(max_length=18, unique=True, validators=[django.core.validators.RegexValidator(re.compile('[A-Za-z0-9_@$\\-]+', 32), 'Enter a value of type IDType that has pattern "([A-Za-z0-9_@$\\-]+)"', 'invalid_pattern')], verbose_name='id'),
        ),
        migrations.AlterField(
            model_name='structureset',
            name='id_code',
            field=models.CharField(max_length=18, unique=True, validators=[django.core.validators.RegexValidator(re.compile('[A-Za-z0-9_@$\\-]+', 32), 'Enter a value of type IDType that has pattern "([A-Za-z0-9_@$\\-]+)"', 'invalid_pattern')], verbose_name='id'),
        ),
    ]
