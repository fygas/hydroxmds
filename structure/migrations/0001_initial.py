# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2017-06-28 13:49
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('hybrid', '0001_initial'),
        ('common', '0001_initial'),
        ('codelist', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Concept',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True)),
                ('uri', models.URLField(blank=True, null=True)),
                ('annotations', models.ManyToManyField(blank=True, related_name='_concept_annotations_+', to='common.Annotation')),
            ],
        ),
        migrations.CreateModel(
            name='ConceptScheme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uri', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('version', models.CharField(default='1.0', max_length=255, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*', 32), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')])),
                ('valid_from', models.DateTimeField(blank=True, null=True)),
                ('valid_to', models.DateTimeField(blank=True, null=True)),
                ('is_final', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
                ('id_code', models.CharField(max_length=255, validators=[django.core.validators.RegexValidator(re.compile('[A-Za-z][A-Za-z0-9_\\-]*', 32), 'Enter a value of type NCNameIDType that has pattern "([A-Za-z][A-Za-z0-9_\\-]*)"', 'invalid_pattern')], verbose_name='id')),
                ('agency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hybrid.Organisation')),
                ('annotations', models.ManyToManyField(blank=True, related_name='_conceptscheme_annotations_+', to='common.Annotation')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ConceptTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('id_code', models.CharField(max_length=255, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Representation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uri', models.URLField(blank=True, null=True)),
                ('id_code', models.CharField(blank=True, max_length=255, null=True, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id')),
                ('annotations', models.ManyToManyField(blank=True, related_name='_representation_annotations_+', to='common.Annotation')),
                ('enumeration', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='codelist.Codelist')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TextFormatInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_code', models.CharField(blank=True, max_length=255, null=True, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('text_type', models.CharField(blank=True, choices=[('Alpha', 'Alpha'), ('ReportingDay', 'ReportingDay'), ('Numeric', 'Numeric'), ('Short', 'Short'), ('Count', 'Count'), ('ReportingQuarter', 'ReportingQuarter'), ('TimeRange', 'TimeRange'), ('Month', 'Month'), ('ReportingTimePeriod', 'ReportingTimePeriod'), ('Duration', 'Duration'), ('Time', 'Time'), ('XHTML', 'XHTML'), ('DataSetReference', 'DataSetReference'), ('GregorianYearMonth', 'GregorianYearMonth'), ('ReportingYear', 'ReportingYear'), (None, 'None'), ('Boolean', 'Boolean'), ('String', 'String'), ('Integer', 'Integer'), ('Decimal', 'Decimal'), ('Incremental', 'Incremental'), ('ObservationalTimePeriod', 'ObservationalTimePeriod'), ('ReportingTrimester', 'ReportingTrimester'), ('AlphaNumeric', 'AlphaNumeric'), ('ReportingMonth', 'ReportingMonth'), ('Day', 'Day'), ('GregorianTimePeriod', 'GregorianTimePeriod'), ('IdentifiableReference', 'IdentifiableReference'), ('StandardTimePeriod', 'StandardTimePeriod'), ('DateTime', 'DateTime'), ('Float', 'Float'), ('URI', 'URI'), ('BigInteger', 'BigInteger'), ('Double', 'Double'), ('InclusiveValueRange', 'InclusiveValueRange'), ('ReportingSemester', 'ReportingSemester'), ('GregorianYear', 'GregorianYear'), ('GregorianDay', 'GregorianDay'), ('BasicTimePeriod', 'BasicTimePeriod'), ('ReportingWeek', 'ReportingWeek'), ('AttachmentConstraintReference', 'AttachmentConstraintReference'), ('Long', 'Long'), ('KeyValues', 'KeyValues'), ('MonthDay', 'MonthDay'), ('ExclusiveValueRange', 'ExclusiveValueRange')], max_length=255, null=True)),
                ('is_sequence', models.NullBooleanField()),
                ('interval', models.DecimalField(blank=True, decimal_places=10, max_digits=19, null=True)),
                ('start_value', models.DecimalField(blank=True, decimal_places=10, max_digits=19, null=True)),
                ('end_value', models.DecimalField(blank=True, decimal_places=10, max_digits=19, null=True)),
                ('time_interval', models.DurationField(blank=True, null=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('min_length', models.PositiveIntegerField(blank=True, null=True)),
                ('max_length', models.PositiveIntegerField(blank=True, null=True)),
                ('min_value', models.DecimalField(blank=True, decimal_places=10, max_digits=19, null=True)),
                ('max_value', models.DecimalField(blank=True, decimal_places=10, max_digits=19, null=True)),
                ('decimals', models.PositiveIntegerField(blank=True, null=True)),
                ('pattern', models.TextField(blank=True, null=True)),
                ('is_multiLingual', models.NullBooleanField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='representation',
            name='enumeration_format',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='structure.TextFormatInfo'),
        ),
        migrations.AddField(
            model_name='representation',
            name='text_format',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='structure.TextFormatInfo'),
        ),
        migrations.AddField(
            model_name='conceptscheme',
            name='concepts',
            field=models.ManyToManyField(through='structure.Concept', to='structure.ConceptTag'),
        ),
        migrations.AddField(
            model_name='concept',
            name='concept_scheme',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='structure.ConceptScheme'),
        ),
        migrations.AddField(
            model_name='concept',
            name='concept_tag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='structure.ConceptTag'),
        ),
        migrations.AddField(
            model_name='concept',
            name='iso_concept_reference',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='structure.Concept'),
        ),
        migrations.AddField(
            model_name='concept',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='structure.Concept'),
        ),
        migrations.AddField(
            model_name='concept',
            name='representation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='structure.Representation'),
        ),
        migrations.AlterUniqueTogether(
            name='conceptscheme',
            unique_together=set([('id_code', 'agency', 'version')]),
        ),
        migrations.AlterUniqueTogether(
            name='concept',
            unique_together=set([('concept_scheme', 'concept_tag', 'representation')]),
        ),
    ]
