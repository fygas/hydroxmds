# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2017-06-28 13:49
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('hybrid', '0001_initial'),
        ('common', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Code',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uri', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('id_code', models.CharField(max_length=255, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[A-Za-z0-9_@$\\-]+$', 32), 'Enter a value of type IDType that has pattern "(^[A-Za-z0-9_@$\\-]+$)"', 'invalid_pattern')], verbose_name='id')),
                ('name', models.CharField(max_length=255)),
                ('annotations', models.ManyToManyField(blank=True, related_name='_code_annotations_+', to='common.Annotation')),
            ],
        ),
        migrations.CreateModel(
            name='Codelist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uri', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('version', models.CharField(default='1.0', max_length=255, validators=[django.core.validators.RegexValidator(re.compile('[0-9]+(\\.[0-9]+)*', 32), 'Enter a value of type VersionType that has pattern "([0-9]+(\\.[0-9]+)*)"', 'invalid_pattern')])),
                ('valid_from', models.DateTimeField(blank=True, null=True)),
                ('valid_to', models.DateTimeField(blank=True, null=True)),
                ('is_final', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
                ('id_code', models.CharField(max_length=255, validators=[django.core.validators.RegexValidator(re.compile('[A-Za-z][A-Za-z0-9_\\-]*', 32), 'Enter a value of type NCNameIDType that has pattern "([A-Za-z][A-Za-z0-9_\\-]*)"', 'invalid_pattern')], verbose_name='id')),
                ('agency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hybrid.Organisation')),
                ('annotations', models.ManyToManyField(blank=True, related_name='_codelist_annotations_+', to='common.Annotation')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='code',
            name='codelist',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='codes', to='codelist.Codelist'),
        ),
        migrations.AddField(
            model_name='code',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='codelist.Code'),
        ),
        migrations.AlterUniqueTogether(
            name='codelist',
            unique_together=set([('id_code', 'agency', 'version')]),
        ),
        migrations.AlterUniqueTogether(
            name='code',
            unique_together=set([('codelist', 'id_code')]),
        ),
    ]
